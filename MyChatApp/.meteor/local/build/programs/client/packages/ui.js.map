)]}'
{"version":3,"file":"\\packages\\ui.js","sources":["ui/ui.js","ui/handlebars_backcompat.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,Q;;AAEA,uB;;AAEA,2C;AACA,iC;AACA,E;;AAEA,mC;AACA,0B;AACA,oB;AACA,gB;AACA,gB;AACA,kB;AACA,kB;AACA,kE;AACA,gB;AACA,I;AACA,gC;AACA,yB;AACA,I;;AAEA,uB;AACA,8C;AACA,I;AACA,K;;AAEA,0B;AACA,uC;AACA,uB;AACA,E;AACA,yC;AACA,uB;AACA,E;;AAEA,mC;;AAEA,yC;;;;;;;;;;;;;;;;;;;ACrCA,gB;AACA,8C;;AAEA,gC;;AAEA,qE;AACA,iC;AACA,0C;AACA,uB;AACA,E;AACA,uD;AACA,gC;AACA,E","sourcesContent":["UI = {};\r\n\r\nUI._globalHelpers = {};\r\n\r\nUI.registerHelper = function (name, func) {\r\n  UI._globalHelpers[name] = func;\r\n};\r\n\r\n// Utility to HTML-escape a string.\r\nUI._escape = (function() {\r\n  var escape_map = {\r\n    \"<\": \"&lt;\",\r\n    \">\": \"&gt;\",\r\n    '\"': \"&quot;\",\r\n    \"'\": \"&#x27;\",\r\n    \"`\": \"&#x60;\", /* IE allows backtick-delimited attributes?? */\r\n    \"&\": \"&amp;\"\r\n  };\r\n  var escape_one = function(c) {\r\n    return escape_map[c];\r\n  };\r\n\r\n  return function (x) {\r\n    return x.replace(/[&<>\"'`]/g, escape_one);\r\n  };\r\n})();\r\n\r\nvar jsUrlsAllowed = false;\r\nUI._allowJavascriptUrls = function () {\r\n  jsUrlsAllowed = true;\r\n};\r\nUI._javascriptUrlsAllowed = function () {\r\n  return jsUrlsAllowed;\r\n};\r\n\r\nUI._parentData = Blaze._parentData;\r\n\r\nUI.getElementData = Blaze.getElementData;\r\n","Handlebars = {};\r\nHandlebars.registerHelper = UI.registerHelper;\r\n\r\nHandlebars._escape = UI._escape;\r\n\r\n// Return these from {{...}} helpers to achieve the same as returning\r\n// strings from {{{...}}} helpers\r\nHandlebars.SafeString = function(string) {\r\n  this.string = string;\r\n};\r\nHandlebars.SafeString.prototype.toString = function() {\r\n  return this.string.toString();\r\n};\r\n"]}