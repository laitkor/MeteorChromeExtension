{"version":3,"file":"\\packages\\html-tools.js","sources":["html-tools/utils.js","html-tools/scanner.js","html-tools/charref.js","html-tools/tokenize.js","html-tools/templatetag.js","html-tools/parse.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AACA,e;AACA,qB;;AAEA,gE;AACA,6C;AACA,qD;AACA,K;AACA,E;;AAEA,09B;;AAEA,8C;AACA,2D;AACA,sC;AACA,+B;AACA,G;AACA,a;AACA,O;;AAEA,wC;AACA,6C;AACA,kD;AACA,6B;AACA,+B;AACA,G;AACA,a;AACA,O;;AAEA,oE;AACA,E;AACA,0E;AACA,sE;AACA,uE;AACA,6E;AACA,uE;AACA,wE;AACA,oB;AACA,+C;AACA,qC;AACA,mD;AACA,wC;AACA,E;;AAEA,kC;AACA,qD;AACA,qC;AACA,yD;AACA,8C;AACA,E;;;;;;;;;;;;;;;;;;;ACjDA,mE;AACA,E;AACA,4E;AACA,sE;AACA,E;AACA,2E;AACA,iE;AACA,sD;AACA,yE;AACA,wE;;AAEA,gD;AACA,0C;AACA,qC;AACA,E;;AAEA,sC;AACA,0E;AACA,oC;AACA,E;;AAEA,uC;AACA,uC;AACA,E;;AAEA,0C;AACA,+D;AACA,+B;;AAEA,0B;;AAEA,yB;AACA,qB;AACA,iE;AACA,wC;AACA,6D;;AAEA,qE;AACA,4C;AACA,uE;;AAEA,iF;AACA,4E;;AAEA,kD;;AAEA,iB;AACA,6C;AACA,0D;AACA,qD;AACA,mB;;AAEA,U;AACA,E;;AAEA,8B;AACA,E;AACA,uC;AACA,sC;AACA,qC;AACA,E;;AAEA,wE;AACA,yE;AACA,sE;AACA,4D;AACA,E;AACA,yE;AACA,qE;AACA,sE;AACA,e;AACA,qC;AACA,6B;AACA,2C;;AAEA,gB;AACA,kB;;AAEA,mC;AACA,gC;AACA,I;AACA,E;;;;;;;;;;;;;;;;;;;;AChFA,4E;;;AAGA,2E;AACA,6E;;AAEA,gB;AACA,8D;AACA,6D;AACA,8D;AACA,6D;AACA,8D;AACA,8D;AACA,2D;AACA,4D;AACA,uE;AACA,6D;AACA,4D;AACA,6D;AACA,4D;AACA,6D;AACA,4D;AACA,4D;AACA,4D;AACA,6D;AACA,4D;AACA,6D;AACA,4D;AACA,2D;AACA,oE;AACA,oE;AACA,8D;AACA,6D;AACA,8D;AACA,6D;AACA,gE;AACA,8D;AACA,6D;AACA,6D;AACA,6D;AACA,6D;AACA,+D;AACA,0D;AACA,yD;AACA,0D;AACA,yD;AACA,gE;AACA,6D;AACA,4D;AACA,8D;AACA,kE;AACA,8D;AACA,4D;AACA,8D;AACA,8D;AACA,kE;AACA,kE;AACA,kE;AACA,kE;AACA,kE;AACA,kE;AACA,kE;AACA,kE;AACA,+D;AACA,8D;AACA,gE;AACA,kE;AACA,+D;AACA,6D;AACA,gE;AACA,6D;AACA,6D;AACA,qE;AACA,qE;AACA,gE;AACA,2D;AACA,6D;AACA,4D;AACA,6D;AACA,2D;AACA,sE;AACA,+D;AACA,iE;AACA,6D;AACA,4D;AACA,6D;AACA,4D;AACA,qE;AACA,qE;AACA,+D;AACA,0D;AACA,8D;AACA,gE;AACA,8D;AACA,6D;AACA,8D;AACA,6D;AACA,4D;AACA,2D;AACA,4D;AACA,2D;AACA,iE;AACA,+D;AACA,iE;AACA,oE;AACA,kE;AACA,gE;AACA,kE;AACA,kE;AACA,8D;AACA,+D;AACA,+D;AACA,+D;AACA,iE;AACA,6D;AACA,iE;AACA,8D;AACA,4D;AACA,4D;AACA,8D;AACA,+D;AACA,gE;AACA,gE;AACA,iE;AACA,8D;AACA,+D;AACA,mE;AACA,4D;AACA,4D;AACA,6D;AACA,gE;AACA,oE;AACA,oE;AACA,+D;AACA,gE;AACA,+D;AACA,iE;AACA,kE;AACA,mE;AACA,kE;AACA,gE;AACA,wE;AACA,sE;AACA,kE;AACA,+D;AACA,iE;AACA,gE;AACA,sE;AACA,oE;AACA,sE;AACA,0E;AACA,0E;AACA,2E;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,sE;AACA,4E;AACA,8D;AACA,6D;AACA,qE;AACA,qE;AACA,4D;AACA,+D;AACA,+D;AACA,gE;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,6D;AACA,6D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,iE;AACA,gE;AACA,iE;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,6D;AACA,6D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,+D;AACA,6D;AACA,6D;AACA,8D;AACA,6D;AACA,qE;AACA,6D;AACA,8D;AACA,6D;AACA,8D;AACA,+D;AACA,2D;AACA,kE;AACA,6D;AACA,+D;AACA,6D;AACA,+D;AACA,8D;AACA,+D;AACA,+D;AACA,8D;AACA,8D;AACA,gE;AACA,kE;AACA,gE;AACA,4D;AACA,4D;AACA,gE;AACA,gE;AACA,6E;AACA,0E;AACA,8D;AACA,6D;AACA,gE;AACA,+D;AACA,8D;AACA,8D;AACA,8D;AACA,6D;AACA,8D;AACA,6D;AACA,6D;AACA,6D;AACA,gE;AACA,+D;AACA,iE;AACA,4D;AACA,4D;AACA,6D;AACA,4D;AACA,+D;AACA,iE;AACA,4D;AACA,2D;AACA,iE;AACA,iE;AACA,oE;AACA,4D;AACA,6D;AACA,6D;AACA,+D;AACA,mE;AACA,2D;AACA,2D;AACA,4D;AACA,+D;AACA,wE;AACA,yE;AACA,mE;AACA,oE;AACA,oE;AACA,kE;AACA,gE;AACA,iE;AACA,oE;AACA,mE;AACA,oE;AACA,4D;AACA,8D;AACA,6D;AACA,kE;AACA,gE;AACA,iE;AACA,iF;AACA,8E;AACA,wE;AACA,8D;AACA,iE;AACA,4D;AACA,8D;AACA,gE;AACA,+D;AACA,gE;AACA,4D;AACA,6D;AACA,6D;AACA,+D;AACA,mE;AACA,kE;AACA,6D;AACA,iE;AACA,kE;AACA,+D;AACA,+D;AACA,wE;AACA,qE;AACA,6D;AACA,+D;AACA,kE;AACA,4D;AACA,2D;AACA,4D;AACA,2D;AACA,+D;AACA,wF;AACA,8D;AACA,+D;AACA,+D;AACA,qE;AACA,qE;AACA,8D;AACA,+D;AACA,8D;AACA,+D;AACA,8D;AACA,iE;AACA,iE;AACA,8D;AACA,8D;AACA,+D;AACA,iE;AACA,kE;AACA,gE;AACA,+D;AACA,4D;AACA,4D;AACA,gE;AACA,+D;AACA,+D;AACA,0E;AACA,+D;AACA,iE;AACA,oE;AACA,oE;AACA,iE;AACA,mE;AACA,8D;AACA,6D;AACA,uE;AACA,wE;AACA,8D;AACA,8D;AACA,iE;AACA,8D;AACA,+D;AACA,+D;AACA,+D;AACA,+D;AACA,6D;AACA,6D;AACA,6D;AACA,6D;AACA,+D;AACA,8D;AACA,iE;AACA,6D;AACA,8D;AACA,8D;AACA,4D;AACA,4D;AACA,gE;AACA,8D;AACA,2D;AACA,2D;AACA,kE;AACA,iE;AACA,2D;AACA,0D;AACA,4D;AACA,6D;AACA,6D;AACA,iE;AACA,gE;AACA,oE;AACA,oE;AACA,8D;AACA,8D;AACA,8D;AACA,wE;AACA,sE;AACA,8E;AACA,uE;AACA,wE;AACA,6D;AACA,gE;AACA,gE;AACA,oE;AACA,8D;AACA,2D;AACA,sE;AACA,+D;AACA,8D;AACA,2D;AACA,8D;AACA,6D;AACA,sE;AACA,+D;AACA,6D;AACA,6D;AACA,+D;AACA,+D;AACA,6D;AACA,qE;AACA,qE;AACA,2D;AACA,2D;AACA,+D;AACA,8D;AACA,iE;AACA,iE;AACA,iE;AACA,gE;AACA,kE;AACA,uE;AACA,8E;AACA,iE;AACA,wE;AACA,wE;AACA,6E;AACA,uE;AACA,6E;AACA,kF;AACA,8E;AACA,yE;AACA,uE;AACA,sE;AACA,0E;AACA,0E;AACA,sE;AACA,kE;AACA,kE;AACA,kE;AACA,yE;AACA,iE;AACA,uE;AACA,wE;AACA,yE;AACA,6E;AACA,2E;AACA,2E;AACA,uE;AACA,4E;AACA,4E;AACA,wE;AACA,qE;AACA,gE;AACA,kE;AACA,+D;AACA,+D;AACA,qE;AACA,qE;AACA,6D;AACA,6D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,6D;AACA,8D;AACA,8D;AACA,+D;AACA,iE;AACA,6D;AACA,6D;AACA,kE;AACA,8D;AACA,6D;AACA,8D;AACA,6D;AACA,gE;AACA,8D;AACA,8D;AACA,6D;AACA,4D;AACA,6D;AACA,4D;AACA,6D;AACA,+D;AACA,4D;AACA,4D;AACA,+D;AACA,4D;AACA,4D;AACA,6D;AACA,2D;AACA,8D;AACA,oE;AACA,oE;AACA,4D;AACA,8D;AACA,6D;AACA,8D;AACA,6D;AACA,6D;AACA,gE;AACA,4D;AACA,gE;AACA,iE;AACA,4D;AACA,6D;AACA,gE;AACA,6D;AACA,6D;AACA,8D;AACA,iE;AACA,yE;AACA,+D;AACA,6E;AACA,+D;AACA,+D;AACA,6D;AACA,2D;AACA,2D;AACA,6D;AACA,6D;AACA,6D;AACA,qE;AACA,qE;AACA,6D;AACA,gE;AACA,+D;AACA,4D;AACA,+D;AACA,+D;AACA,8D;AACA,+D;AACA,gE;AACA,8D;AACA,oE;AACA,qE;AACA,+D;AACA,6D;AACA,mE;AACA,+D;AACA,oE;AACA,8D;AACA,iE;AACA,kE;AACA,+D;AACA,8D;AACA,6D;AACA,6D;AACA,8D;AACA,8D;AACA,6D;AACA,2D;AACA,2D;AACA,2D;AACA,0D;AACA,2D;AACA,0D;AACA,4D;AACA,2D;AACA,4D;AACA,2D;AACA,6D;AACA,2D;AACA,8D;AACA,+D;AACA,oE;AACA,qE;AACA,qE;AACA,sE;AACA,4D;AACA,4D;AACA,+D;AACA,gE;AACA,+D;AACA,gE;AACA,oE;AACA,oE;AACA,+D;AACA,0E;AACA,8E;AACA,wE;AACA,6D;AACA,+D;AACA,8D;AACA,4D;AACA,qE;AACA,qE;AACA,+D;AACA,+D;AACA,6D;AACA,+D;AACA,mE;AACA,kE;AACA,8D;AACA,6D;AACA,+D;AACA,8D;AACA,6D;AACA,+D;AACA,+D;AACA,+D;AACA,+D;AACA,+D;AACA,8D;AACA,6D;AACA,+D;AACA,+D;AACA,+D;AACA,+D;AACA,+D;AACA,+D;AACA,8D;AACA,8D;AACA,qE;AACA,6D;AACA,8D;AACA,6D;AACA,6D;AACA,8D;AACA,8D;AACA,6D;AACA,8D;AACA,8D;AACA,8D;AACA,6D;AACA,6D;AACA,4D;AACA,4D;AACA,4D;AACA,4D;AACA,2D;AACA,2D;AACA,6D;AACA,4D;AACA,4D;AACA,6D;AACA,kE;AACA,+D;AACA,6D;AACA,gE;AACA,iE;AACA,kE;AACA,0E;AACA,gE;AACA,oE;AACA,oE;AACA,2D;AACA,2D;AACA,4D;AACA,8D;AACA,6D;AACA,6D;AACA,6D;AACA,2D;AACA,6D;AACA,6D;AACA,8D;AACA,kE;AACA,6D;AACA,4D;AACA,8D;AACA,8D;AACA,8D;AACA,qE;AACA,qE;AACA,4D;AACA,qE;AACA,yE;AACA,yE;AACA,wE;AACA,oE;AACA,2E;AACA,qE;AACA,qE;AACA,6D;AACA,6D;AACA,+D;AACA,+D;AACA,8D;AACA,+D;AACA,yD;AACA,wD;AACA,yD;AACA,wD;AACA,2D;AACA,8D;AACA,gE;AACA,iE;AACA,mE;AACA,gE;AACA,+D;AACA,kE;AACA,oE;AACA,gE;AACA,+D;AACA,+E;AACA,0E;AACA,6D;AACA,+D;AACA,4D;AACA,+D;AACA,+D;AACA,+D;AACA,iE;AACA,6D;AACA,6D;AACA,8D;AACA,0D;AACA,6D;AACA,6D;AACA,6D;AACA,+D;AACA,kE;AACA,+D;AACA,+D;AACA,oE;AACA,4D;AACA,qE;AACA,kE;AACA,kE;AACA,8D;AACA,+D;AACA,sE;AACA,uE;AACA,qE;AACA,6D;AACA,+D;AACA,uE;AACA,qE;AACA,6D;AACA,+D;AACA,8D;AACA,8D;AACA,qE;AACA,kE;AACA,+D;AACA,+D;AACA,8D;AACA,6D;AACA,8D;AACA,6D;AACA,2D;AACA,6D;AACA,4D;AACA,6D;AACA,4D;AACA,4D;AACA,4D;AACA,4D;AACA,6D;AACA,6D;AACA,6D;AACA,4D;AACA,4D;AACA,oE;AACA,4D;AACA,8D;AACA,6D;AACA,8D;AACA,6D;AACA,2D;AACA,gE;AACA,8D;AACA,gE;AACA,8D;AACA,6D;AACA,6D;AACA,6D;AACA,6D;AACA,8D;AACA,mE;AACA,iE;AACA,iE;AACA,6D;AACA,2D;AACA,6D;AACA,6D;AACA,gE;AACA,+D;AACA,2D;AACA,8D;AACA,kE;AACA,8D;AACA,+D;AACA,4D;AACA,4D;AACA,iE;AACA,iE;AACA,iE;AACA,qE;AACA,kE;AACA,iE;AACA,uE;AACA,uE;AACA,6D;AACA,6D;AACA,6D;AACA,6D;AACA,qE;AACA,qE;AACA,4D;AACA,4D;AACA,+D;AACA,8D;AACA,6D;AACA,qE;AACA,6D;AACA,6D;AACA,gE;AACA,8D;AACA,8D;AACA,+D;AACA,8D;AACA,2D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,4D;AACA,2D;AACA,4D;AACA,2D;AACA,6D;AACA,6D;AACA,4D;AACA,4D;AACA,oE;AACA,oE;AACA,6D;AACA,qE;AACA,qE;AACA,qE;AACA,qE;AACA,+D;AACA,+D;AACA,8D;AACA,8D;AACA,6D;AACA,6D;AACA,+D;AACA,8D;AACA,8D;AACA,4D;AACA,4D;AACA,oE;AACA,oE;AACA,8D;AACA,6D;AACA,6D;AACA,6D;AACA,6D;AACA,qE;AACA,qE;AACA,qE;AACA,qE;AACA,8D;AACA,8D;AACA,8D;AACA,kE;AACA,+D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,+D;AACA,gE;AACA,6D;AACA,mE;AACA,6D;AACA,4D;AACA,8D;AACA,iE;AACA,6D;AACA,6D;AACA,6D;AACA,gE;AACA,+D;AACA,+D;AACA,gE;AACA,iE;AACA,+D;AACA,gE;AACA,gE;AACA,6D;AACA,8D;AACA,4E;AACA,+D;AACA,+D;AACA,+D;AACA,8D;AACA,6D;AACA,+D;AACA,iE;AACA,iE;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,4D;AACA,4D;AACA,4D;AACA,8D;AACA,8D;AACA,+D;AACA,iE;AACA,kE;AACA,6D;AACA,2D;AACA,2D;AACA,0E;AACA,qE;AACA,kE;AACA,kE;AACA,kE;AACA,4E;AACA,sE;AACA,oE;AACA,2E;AACA,2E;AACA,2E;AACA,uE;AACA,kE;AACA,wE;AACA,sE;AACA,uE;AACA,uE;AACA,uE;AACA,uE;AACA,wE;AACA,0E;AACA,4E;AACA,yE;AACA,qE;AACA,gE;AACA,uE;AACA,uE;AACA,yE;AACA,qE;AACA,0E;AACA,0E;AACA,yE;AACA,yE;AACA,qE;AACA,uE;AACA,mE;AACA,6D;AACA,4D;AACA,4D;AACA,6D;AACA,kE;AACA,+D;AACA,6D;AACA,gE;AACA,iE;AACA,kE;AACA,0E;AACA,gE;AACA,oE;AACA,gE;AACA,kE;AACA,oE;AACA,yE;AACA,sE;AACA,oE;AACA,gE;AACA,kE;AACA,gE;AACA,wE;AACA,kE;AACA,gE;AACA,+D;AACA,oE;AACA,oE;AACA,2D;AACA,6D;AACA,8D;AACA,8D;AACA,8D;AACA,gE;AACA,8D;AACA,6D;AACA,6D;AACA,8D;AACA,2D;AACA,2D;AACA,iE;AACA,mE;AACA,gE;AACA,8D;AACA,8D;AACA,8D;AACA,mE;AACA,+D;AACA,8D;AACA,kE;AACA,6D;AACA,4D;AACA,8D;AACA,8D;AACA,8D;AACA,+D;AACA,8D;AACA,+D;AACA,uE;AACA,uE;AACA,uE;AACA,4E;AACA,4E;AACA,4E;AACA,oE;AACA,wE;AACA,wE;AACA,wE;AACA,sE;AACA,uE;AACA,+D;AACA,qE;AACA,qE;AACA,gE;AACA,iE;AACA,+D;AACA,6D;AACA,uE;AACA,wE;AACA,4D;AACA,gE;AACA,8D;AACA,2D;AACA,gE;AACA,8D;AACA,iE;AACA,8D;AACA,gE;AACA,4D;AACA,8D;AACA,+D;AACA,qE;AACA,6D;AACA,4D;AACA,4D;AACA,6D;AACA,+D;AACA,+D;AACA,2D;AACA,8D;AACA,+D;AACA,8D;AACA,8D;AACA,8D;AACA,+D;AACA,yD;AACA,wD;AACA,yD;AACA,wD;AACA,2D;AACA,8D;AACA,+D;AACA,+D;AACA,gE;AACA,iE;AACA,6D;AACA,8D;AACA,8D;AACA,gE;AACA,kE;AACA,iE;AACA,+E;AACA,0E;AACA,4D;AACA,2D;AACA,6D;AACA,8D;AACA,iE;AACA,6D;AACA,4D;AACA,+D;AACA,mE;AACA,mE;AACA,iE;AACA,+D;AACA,gE;AACA,4D;AACA,4D;AACA,8D;AACA,8D;AACA,sE;AACA,oE;AACA,kE;AACA,oE;AACA,oE;AACA,4D;AACA,6D;AACA,4D;AACA,6D;AACA,gE;AACA,4D;AACA,8D;AACA,6D;AACA,+D;AACA,8D;AACA,+D;AACA,iE;AACA,kE;AACA,8D;AACA,6D;AACA,+D;AACA,+D;AACA,qE;AACA,qE;AACA,2D;AACA,qE;AACA,6D;AACA,+D;AACA,0D;AACA,0D;AACA,iE;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,yE;AACA,4D;AACA,yE;AACA,yE;AACA,6D;AACA,gE;AACA,gE;AACA,iE;AACA,8D;AACA,4D;AACA,2D;AACA,yE;AACA,0E;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,6E;AACA,8D;AACA,4D;AACA,4D;AACA,8D;AACA,gE;AACA,8D;AACA,8D;AACA,gE;AACA,2D;AACA,yE;AACA,4E;AACA,2E;AACA,0E;AACA,8E;AACA,+D;AACA,gE;AACA,yE;AACA,6E;AACA,uE;AACA,8D;AACA,+D;AACA,gE;AACA,oE;AACA,oE;AACA,uE;AACA,4D;AACA,6D;AACA,yE;AACA,8E;AACA,yE;AACA,uE;AACA,8D;AACA,wE;AACA,4D;AACA,6D;AACA,wE;AACA,8D;AACA,8D;AACA,+D;AACA,2D;AACA,4D;AACA,6D;AACA,4D;AACA,6D;AACA,6D;AACA,8D;AACA,8D;AACA,6D;AACA,uE;AACA,4D;AACA,mE;AACA,mE;AACA,wE;AACA,wE;AACA,6D;AACA,yE;AACA,8E;AACA,yE;AACA,8D;AACA,uE;AACA,8D;AACA,wE;AACA,4D;AACA,8D;AACA,+D;AACA,wE;AACA,6D;AACA,gE;AACA,wE;AACA,qE;AACA,6D;AACA,6D;AACA,2D;AACA,0D;AACA,qE;AACA,kE;AACA,6E;AACA,mE;AACA,iE;AACA,iF;AACA,kE;AACA,mE;AACA,wE;AACA,uF;AACA,qF;AACA,uE;AACA,yF;AACA,wE;AACA,mF;AACA,gF;AACA,8D;AACA,4E;AACA,0E;AACA,gE;AACA,gE;AACA,gE;AACA,uF;AACA,wE;AACA,6E;AACA,gE;AACA,qE;AACA,uE;AACA,+E;AACA,sF;AACA,qE;AACA,4F;AACA,sF;AACA,8D;AACA,gE;AACA,gE;AACA,gE;AACA,oE;AACA,qF;AACA,8E;AACA,0E;AACA,wF;AACA,yE;AACA,8E;AACA,mF;AACA,6E;AACA,qF;AACA,+E;AACA,8E;AACA,uE;AACA,oE;AACA,qF;AACA,8E;AACA,oF;AACA,gF;AACA,yE;AACA,iE;AACA,sE;AACA,0E;AACA,sE;AACA,uE;AACA,kE;AACA,6D;AACA,4E;AACA,yE;AACA,iE;AACA,4D;AACA,+D;AACA,8D;AACA,4E;AACA,yE;AACA,2E;AACA,8D;AACA,8D;AACA,0E;AACA,oE;AACA,oE;AACA,8D;AACA,+D;AACA,4D;AACA,+D;AACA,yE;AACA,qE;AACA,qE;AACA,kE;AACA,uE;AACA,6D;AACA,8D;AACA,+D;AACA,8D;AACA,8D;AACA,gE;AACA,gE;AACA,6D;AACA,0E;AACA,8D;AACA,4E;AACA,kE;AACA,+E;AACA,8D;AACA,4E;AACA,6D;AACA,0E;AACA,8D;AACA,4E;AACA,kE;AACA,+E;AACA,6D;AACA,8D;AACA,6D;AACA,8D;AACA,6D;AACA,6D;AACA,sE;AACA,wE;AACA,uE;AACA,yE;AACA,0D;AACA,0D;AACA,0D;AACA,+D;AACA,8D;AACA,yE;AACA,+D;AACA,+D;AACA,+D;AACA,+D;AACA,yE;AACA,uE;AACA,gE;AACA,iE;AACA,gE;AACA,yE;AACA,uE;AACA,4E;AACA,gE;AACA,4E;AACA,0E;AACA,gE;AACA,8D;AACA,8D;AACA,gE;AACA,gE;AACA,8D;AACA,6D;AACA,8D;AACA,6D;AACA,6D;AACA,6D;AACA,4D;AACA,6D;AACA,4D;AACA,6D;AACA,4D;AACA,4D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,6D;AACA,gE;AACA,6D;AACA,6D;AACA,+D;AACA,oE;AACA,oE;AACA,4D;AACA,8D;AACA,6D;AACA,8D;AACA,6D;AACA,6D;AACA,+D;AACA,2D;AACA,6D;AACA,8D;AACA,+D;AACA,iE;AACA,8D;AACA,6D;AACA,6D;AACA,6D;AACA,6D;AACA,6D;AACA,+D;AACA,+D;AACA,8D;AACA,+D;AACA,qE;AACA,qE;AACA,8D;AACA,6E;AACA,uE;AACA,+D;AACA,8D;AACA,8D;AACA,4D;AACA,2D;AACA,6D;AACA,8D;AACA,gE;AACA,4D;AACA,2D;AACA,4D;AACA,2D;AACA,+D;AACA,8D;AACA,iE;AACA,6D;AACA,2D;AACA,qE;AACA,6D;AACA,8D;AACA,6D;AACA,8D;AACA,6D;AACA,6D;AACA,8D;AACA,6D;AACA,8D;AACA,6D;AACA,kE;AACA,gE;AACA,+D;AACA,4D;AACA,2D;AACA,4D;AACA,2D;AACA,8D;AACA,gE;AACA,kE;AACA,oE;AACA,wE;AACA,4D;AACA,2D;AACA,iE;AACA,4D;AACA,gE;AACA,+D;AACA,6D;AACA,iE;AACA,4D;AACA,4D;AACA,6D;AACA,6D;AACA,+D;AACA,6D;AACA,gE;AACA,oE;AACA,oE;AACA,2D;AACA,2D;AACA,4D;AACA,+D;AACA,8D;AACA,0D;AACA,0D;AACA,kE;AACA,2D;AACA,+D;AACA,gE;AACA,+D;AACA,kE;AACA,8D;AACA,iE;AACA,2D;AACA,+D;AACA,gE;AACA,+D;AACA,iE;AACA,8D;AACA,6D;AACA,iE;AACA,iE;AACA,0D;AACA,sE;AACA,kE;AACA,qE;AACA,6D;AACA,6D;AACA,4D;AACA,8D;AACA,4D;AACA,2D;AACA,8D;AACA,oE;AACA,6D;AACA,oE;AACA,iE;AACA,uE;AACA,2E;AACA,sE;AACA,gE;AACA,qE;AACA,kE;AACA,iE;AACA,6D;AACA,6D;AACA,gE;AACA,8D;AACA,8D;AACA,+D;AACA,+D;AACA,8D;AACA,+D;AACA,6D;AACA,gE;AACA,iE;AACA,iE;AACA,iE;AACA,6D;AACA,qE;AACA,mE;AACA,+D;AACA,8D;AACA,+D;AACA,qE;AACA,qE;AACA,2D;AACA,2D;AACA,+D;AACA,oE;AACA,oE;AACA,8D;AACA,qE;AACA,6D;AACA,+D;AACA,qE;AACA,qE;AACA,oE;AACA,iE;AACA,4D;AACA,gE;AACA,2D;AACA,0D;AACA,2D;AACA,0D;AACA,8D;AACA,wE;AACA,8D;AACA,8D;AACA,8D;AACA,kE;AACA,8D;AACA,8D;AACA,+D;AACA,+D;AACA,gE;AACA,6D;AACA,4D;AACA,gE;AACA,8D;AACA,iE;AACA,+D;AACA,6D;AACA,6D;AACA,6D;AACA,gE;AACA,+D;AACA,+D;AACA,gE;AACA,iE;AACA,gE;AACA,+D;AACA,8D;AACA,gE;AACA,gE;AACA,8D;AACA,kE;AACA,+D;AACA,+D;AACA,+D;AACA,+D;AACA,8D;AACA,6D;AACA,+D;AACA,iE;AACA,iE;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,4D;AACA,4D;AACA,4D;AACA,8D;AACA,iE;AACA,8D;AACA,+D;AACA,6D;AACA,6D;AACA,gE;AACA,iE;AACA,8D;AACA,2D;AACA,6D;AACA,2D;AACA,0D;AACA,2D;AACA,0D;AACA,uE;AACA,2E;AACA,8E;AACA,gE;AACA,+D;AACA,oE;AACA,4D;AACA,8D;AACA,8D;AACA,8D;AACA,gE;AACA,2D;AACA,2D;AACA,6D;AACA,2E;AACA,sE;AACA,mE;AACA,mE;AACA,mE;AACA,4E;AACA,uE;AACA,qE;AACA,4E;AACA,4E;AACA,4E;AACA,wE;AACA,mE;AACA,yE;AACA,uE;AACA,wE;AACA,0E;AACA,yE;AACA,wE;AACA,sE;AACA,iE;AACA,wE;AACA,wE;AACA,0E;AACA,sE;AACA,2E;AACA,2E;AACA,0E;AACA,0E;AACA,sE;AACA,wE;AACA,oE;AACA,4D;AACA,qE;AACA,8D;AACA,8D;AACA,4D;AACA,mE;AACA,+D;AACA,+D;AACA,+D;AACA,8D;AACA,+D;AACA,+D;AACA,qE;AACA,6D;AACA,gE;AACA,iE;AACA,sE;AACA,2D;AACA,gE;AACA,kE;AACA,8D;AACA,oE;AACA,+D;AACA,qE;AACA,6D;AACA,4D;AACA,4D;AACA,2D;AACA,8D;AACA,+D;AACA,+D;AACA,+D;AACA,6D;AACA,8D;AACA,8D;AACA,kE;AACA,qE;AACA,iE;AACA,2D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,4D;AACA,2D;AACA,8D;AACA,6D;AACA,6D;AACA,8D;AACA,8D;AACA,6D;AACA,6D;AACA,+D;AACA,8D;AACA,+D;AACA,kE;AACA,8D;AACA,4D;AACA,4D;AACA,8D;AACA,6D;AACA,+D;AACA,gE;AACA,8D;AACA,8D;AACA,gE;AACA,4D;AACA,2D;AACA,2D;AACA,gE;AACA,iE;AACA,8D;AACA,8D;AACA,oE;AACA,oE;AACA,+D;AACA,8D;AACA,+D;AACA,+D;AACA,6D;AACA,6D;AACA,uE;AACA,uE;AACA,iE;AACA,sE;AACA,wE;AACA,qE;AACA,2D;AACA,0D;AACA,6D;AACA,6D;AACA,8D;AACA,8D;AACA,4D;AACA,gE;AACA,6D;AACA,8D;AACA,8D;AACA,+D;AACA,8D;AACA,+D;AACA,8D;AACA,iE;AACA,iE;AACA,8D;AACA,oE;AACA,sE;AACA,gE;AACA,kE;AACA,6D;AACA,8D;AACA,6D;AACA,8D;AACA,4E;AACA,+D;AACA,+D;AACA,+D;AACA,8D;AACA,0D;AACA,qE;AACA,qE;AACA,+D;AACA,kE;AACA,6D;AACA,8D;AACA,4E;AACA,8D;AACA,4E;AACA,6D;AACA,8D;AACA,+D;AACA,iE;AACA,mE;AACA,8D;AACA,+D;AACA,iE;AACA,mE;AACA,+D;AACA,+D;AACA,2E;AACA,qE;AACA,0E;AACA,uE;AACA,4E;AACA,oE;AACA,+D;AACA,4D;AACA,6D;AACA,8D;AACA,qE;AACA,qE;AACA,+D;AACA,+D;AACA,+D;AACA,6D;AACA,6D;AACA,8D;AACA,wE;AACA,mE;AACA,6D;AACA,4D;AACA,4D;AACA,gE;AACA,8D;AACA,6D;AACA,iE;AACA,iE;AACA,+D;AACA,8D;AACA,iE;AACA,iE;AACA,+D;AACA,+D;AACA,iE;AACA,mE;AACA,oE;AACA,kE;AACA,oE;AACA,gE;AACA,gE;AACA,gE;AACA,oE;AACA,6D;AACA,oE;AACA,iE;AACA,uE;AACA,2E;AACA,sE;AACA,gE;AACA,qE;AACA,kE;AACA,iE;AACA,gE;AACA,iE;AACA,4D;AACA,4D;AACA,6D;AACA,4D;AACA,2D;AACA,4D;AACA,2D;AACA,4D;AACA,2D;AACA,4D;AACA,4D;AACA,gE;AACA,iE;AACA,8D;AACA,6D;AACA,iE;AACA,iE;AACA,sE;AACA,iE;AACA,iE;AACA,iE;AACA,iE;AACA,+D;AACA,8D;AACA,iE;AACA,+D;AACA,+D;AACA,iE;AACA,mE;AACA,kE;AACA,oE;AACA,gE;AACA,gE;AACA,gE;AACA,gE;AACA,8D;AACA,8D;AACA,gE;AACA,gE;AACA,6D;AACA,4D;AACA,yD;AACA,+D;AACA,2D;AACA,2D;AACA,6D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,4D;AACA,4D;AACA,6D;AACA,+D;AACA,oE;AACA,oE;AACA,+D;AACA,kE;AACA,kE;AACA,6D;AACA,6D;AACA,gE;AACA,8D;AACA,oE;AACA,iE;AACA,+E;AACA,kE;AACA,+D;AACA,8D;AACA,+D;AACA,6D;AACA,4D;AACA,6D;AACA,4D;AACA,6D;AACA,8D;AACA,mE;AACA,uE;AACA,mE;AACA,kE;AACA,+D;AACA,6D;AACA,4D;AACA,gE;AACA,6D;AACA,8D;AACA,+D;AACA,gE;AACA,4D;AACA,qE;AACA,qE;AACA,iE;AACA,8D;AACA,+D;AACA,8D;AACA,8D;AACA,iE;AACA,qE;AACA,qE;AACA,uE;AACA,kE;AACA,sE;AACA,wE;AACA,+D;AACA,6D;AACA,kE;AACA,kE;AACA,iE;AACA,+D;AACA,iE;AACA,iE;AACA,qE;AACA,qE;AACA,6D;AACA,6D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,yE;AACA,0E;AACA,8D;AACA,6D;AACA,8D;AACA,6D;AACA,6D;AACA,6D;AACA,6D;AACA,kE;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,6D;AACA,4D;AACA,6D;AACA,4D;AACA,4D;AACA,4D;AACA,8D;AACA,8D;AACA,8D;AACA,+D;AACA,gE;AACA,oE;AACA,oE;AACA,8D;AACA,6D;AACA,8D;AACA,6D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,+D;AACA,iE;AACA,+D;AACA,8D;AACA,6D;AACA,6D;AACA,2D;AACA,0D;AACA,+D;AACA,mE;AACA,qE;AACA,yE;AACA,8D;AACA,kE;AACA,6D;AACA,6D;AACA,qE;AACA,qE;AACA,oE;AACA,gE;AACA,gE;AACA,gE;AACA,yE;AACA,oE;AACA,oE;AACA,oE;AACA,uE;AACA,sE;AACA,uE;AACA,8D;AACA,uE;AACA,wE;AACA,4D;AACA,4D;AACA,6D;AACA,+D;AACA,+D;AACA,mE;AACA,8D;AACA,mE;AACA,+D;AACA,iE;AACA,+D;AACA,6D;AACA,6D;AACA,8D;AACA,qE;AACA,qE;AACA,8D;AACA,8D;AACA,8D;AACA,6D;AACA,8D;AACA,8D;AACA,4D;AACA,2D;AACA,4D;AACA,2D;AACA,iE;AACA,gE;AACA,mE;AACA,iE;AACA,mE;AACA,8D;AACA,6D;AACA,kE;AACA,6D;AACA,6D;AACA,+D;AACA,gE;AACA,kF;AACA,oF;AACA,kF;AACA,oF;AACA,gE;AACA,wE;AACA,yE;AACA,8D;AACA,8D;AACA,+D;AACA,4D;AACA,4D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,gE;AACA,+D;AACA,4D;AACA,4D;AACA,8D;AACA,+D;AACA,8D;AACA,+D;AACA,4D;AACA,6D;AACA,oE;AACA,oE;AACA,2E;AACA,sE;AACA,sE;AACA,oE;AACA,oE;AACA,8D;AACA,0E;AACA,0E;AACA,qE;AACA,qE;AACA,8D;AACA,8D;AACA,qE;AACA,qE;AACA,6E;AACA,4E;AACA,6E;AACA,4E;AACA,+D;AACA,iE;AACA,6D;AACA,6D;AACA,gE;AACA,8D;AACA,8D;AACA,+D;AACA,+D;AACA,oE;AACA,oE;AACA,qE;AACA,qE;AACA,2D;AACA,2D;AACA,+D;AACA,qE;AACA,qE;AACA,6D;AACA,8D;AACA,6D;AACA,8D;AACA,oE;AACA,oE;AACA,+D;AACA,+D;AACA,0D;AACA,0D;AACA,+D;AACA,+D;AACA,8D;AACA,6D;AACA,+D;AACA,qE;AACA,qE;AACA,gE;AACA,gE;AACA,+D;AACA,+D;AACA,qE;AACA,qE;AACA,gE;AACA,gE;AACA,8D;AACA,6D;AACA,+D;AACA,8D;AACA,6D;AACA,8D;AACA,6D;AACA,6D;AACA,6D;AACA,6D;AACA,6D;AACA,4D;AACA,4D;AACA,2D;AACA,0D;AACA,oE;AACA,oE;AACA,6D;AACA,6D;AACA,qE;AACA,qE;AACA,qE;AACA,qE;AACA,6D;AACA,6D;AACA,4D;AACA,2D;AACA,4D;AACA,8D;AACA,8D;AACA,8D;AACA,8D;AACA,4D;AACA,4D;AACA,4D;AACA,4D;AACA,+D;AACA,uE;AACA,4D;AACA,4D;AACA,oE;AACA,4D;AACA,6D;AACA,6D;AACA,gE;AACA,qE;AACA,6D;AACA,qE;AACA,qE;AACA,4D;AACA,4D;AACA,E;;AAEA,kC;AACA,oE;AACA,iE;;AAEA,mC;AACA,c;AACA,oC;AACA,6B;AACA,4B;AACA,0E;AACA,qD;AACA,G;AACA,6C;AACA,sD;AACA,qC;AACA,iE;AACA,G;AACA,K;;AAEA,+E;AACA,kD;AACA,+C;AACA,0B;AACA,gC;AACA,sB;AACA,gB;AACA,E;;AAEA,6E;AACA,oD;AACA,uD;AACA,0C;AACA,0D;AACA,gB;;AAEA,oE;AACA,oB;AACA,c;AACA,2C;;AAEA,e;AACA,mC;AACA,4E;AACA,8E;AACA,yB;AACA,Q;AACA,oF;AACA,mD;AACA,iF;AACA,oB;AACA,yE;AACA,Y;AACA,mC;AACA,oB;AACA,K;AACA,U;AACA,wE;AACA,oC;AACA,iE;AACA,kB;AACA,iE;AACA,sC;AACA,gB;AACA,G;AACA,E;;AAEA,iF;AACA,oF;AACA,S;AACA,4C;AACA,0C;AACA,E;;AAEA,mD;;AAEA,yE;;AAEA,0C;AACA,mE;AACA,mE;AACA,mE;AACA,mE;AACA,mE;AACA,kC;AACA,uC;AACA,wB;;AAEA,a;AACA,O;;AAEA,sC;AACA,mB;AACA,mC;AACA,uC;AACA,yB;AACA,iC;AACA,qB;AACA,kC;AACA,mC;AACA,uC;AACA,wB;AACA,wB;AACA,gD;AACA,iB;;AAEA,c;AACA,E;;AAEA,8G;AACA,E;AACA,wE;AACA,iG;AACA,6C;AACA,E;AACA,2D;AACA,E;AACA,+C;AACA,0G;AACA,yG;AACA,yG;AACA,oC;AACA,8G;AACA,6B;AACA,mB;AACA,gB;;AAEA,0C;;AAEA,yB;AACA,qB;AACA,kE;AACA,8C;AACA,8E;AACA,oC;AACA,oB;AACA,8E;AACA,kB;AACA,qE;AACA,Y;AACA,uC;AACA,mC;AACA,2B;AACA,yB;AACA,2E;AACA,2C;AACA,Y;AACA,uC;AACA,mC;AACA,2B;AACA,yB;AACA,yE;AACA,2C;AACA,K;AACA,sC;AACA,0F;AACA,0B;AACA,iC;AACA,+B;AACA,gC;AACA,yD;AACA,mD;AACA,gB;AACA,U;AACA,4D;AACA,sB;AACA,4B;AACA,8B;AACA,gD;AACA,Y;AACA,kB;AACA,K;AACA,G;AACA,E;;;;;;;;;;;;;;;;;;;AC72EA,e;AACA,E;AACA,kB;AACA,4D;AACA,kB;AACA,iC;AACA,gC;AACA,I;AACA,E;AACA,kB;AACA,+C;AACA,I;AACA,E;AACA,gB;AACA,yE;AACA,wC;AACA,I;AACA,E;AACA,c;AACA,+B;AACA,uC;AACA,sD;AACA,8C;AACA,4D;AACA,sC;AACA,I;AACA,E;AACA,kB;AACA,0E;AACA,sE;AACA,I;AACA,E;AACA,2E;AACA,mE;AACA,uE;AACA,qE;AACA,wE;AACA,6E;AACA,wD;AACA,E;AACA,sB;AACA,6B;AACA,I;;AAEA,4E;AACA,6E;AACA,8E;AACA,6E;AACA,2E;AACA,6C;AACA,gC;;AAEA,kC;AACA,qC;AACA,E;;AAEA,8D;AACA,4C;AACA,gB;AACA,mB;;AAEA,kE;AACA,qC;;AAEA,4B;AACA,0D;AACA,2D;;AAEA,qC;AACA,mB;AACA,2C;;AAEA,gD;AACA,wC;AACA,yD;AACA,yC;AACA,+D;AACA,6C;AACA,sD;;AAEA,8B;;AAEA,wB;AACA,6C;AACA,E;;AAEA,qC;AACA,yC;AACA,kB;AACA,E;;AAEA,wC;AACA,wC;AACA,oC;AACA,sB;AACA,E;;AAEA,iD;AACA,6B;AACA,yC;AACA,gE;AACA,gB;;AAEA,+B;AACA,kD;AACA,uC;;AAEA,e;AACA,S;AACA,+C;AACA,oD;AACA,yC;AACA,c;AACA,kB;AACA,G;;AAEA,gB;;AAEA,a;AACA,E;;AAEA,2F;AACA,E;AACA,sF;AACA,8D;AACA,2E;AACA,gB;AACA,0B;AACA,mB;;AAEA,yB;;AAEA,0B;AACA,kD;AACA,uC;AACA,gB;AACA,gB;;AAEA,wE;AACA,oC;AACA,yC;AACA,e;AACA,kB;AACA,G;AACA,wC;;AAEA,2C;AACA,sB;;AAEA,sB;AACA,sB;;AAEA,+B;AACA,gF;AACA,6C;;AAEA,2C;AACA,8E;;AAEA,sC;AACA,uB;AACA,6B;AACA,iD;AACA,0B;AACA,iC;AACA,2C;AACA,6C;AACA,uB;AACA,6B;AACA,iD;AACA,mC;AACA,+B;AACA,qC;AACA,qD;AACA,8B;AACA,qC;AACA,+C;AACA,S;AACA,O;AACA,Y;AACA,4D;AACA,K;AACA,G;;AAEA,mB;AACA,gB;AACA,8B;AACA,4D;AACA,8B;;AAEA,e;AACA,+B;AACA,e;AACA,+B;;AAEA,gB;AACA,E;;AAEA,mE;AACA,gE;AACA,6D;;AAEA,wC;AACA,6C;AACA,qE;AACA,W;AACA,E;;AAEA,0D;AACA,E;AACA,kE;AACA,sE;AACA,oE;AACA,uD;AACA,4E;AACA,oB;AACA,+B;AACA,iE;AACA,qE;AACA,uE;AACA,sE;AACA,wE;AACA,oE;AACA,sE;AACA,0B;AACA,8B;AACA,oC;AACA,c;AACA,gE;AACA,mE;AACA,yC;;AAEA,e;AACA,kE;AACA,mC;AACA,kB;AACA,G;;AAEA,gC;AACA,Y;AACA,wB;AACA,qC;;AAEA,0B;AACA,W;AACA,uB;;AAEA,sB;AACA,4C;;AAEA,mB;AACA,iC;AACA,mD;AACA,kB;AACA,uB;AACA,K;;AAEA,kB;AACA,wB;AACA,sB;AACA,G;;AAEA,yC;;AAEA,2C;AACA,2B;AACA,kB;AACA,wB;AACA,sB;AACA,G;;AAEA,wE;AACA,gE;AACA,gF;;AAEA,a;AACA,kB;;AAEA,8C;AACA,E;;AAEA,+D;AACA,wC;AACA,uC;AACA,8F;;AAEA,4E;AACA,2D;AACA,4B;AACA,8C;AACA,0B;AACA,e;;AAEA,0B;AACA,8B;AACA,8C;AACA,6B;AACA,e;AACA,G;;AAEA,c;AACA,E;;AAEA,yE;AACA,mD;AACA,c;AACA,iC;AACA,kB;AACA,kB;AACA,G;;AAEA,kB;AACA,gC;;AAEA,c;AACA,gB;AACA,4B;AACA,oB;AACA,6B;AACA,gC;AACA,oB;AACA,oB;AACA,kE;AACA,oB;AACA,sB;AACA,iD;AACA,6E;AACA,+D;AACA,4B;AACA,8D;AACA,iE;AACA,2B;AACA,gC;AACA,wC;AACA,sD;AACA,iE;AACA,8D;AACA,wB;AACA,sC;AACA,2D;AACA,kC;AACA,O;AACA,Y;AACA,iC;AACA,mD;AACA,wC;AACA,O;AACA,wD;AACA,oB;AACA,0D;AACA,sB;AACA,K;AACA,G;AACA,E;;AAEA,qD;;AAEA,gE;AACA,qE;AACA,gB;AACA,gB;;AAEA,yB;;AAEA,+D;AACA,+B;AACA,qB;AACA,kB;AACA,G;;AAEA,oC;AACA,gB;AACA,iD;AACA,+C;;AAEA,0C;AACA,uD;AACA,mC;AACA,e;;AAEA,sB;AACA,kC;;AAEA,wC;AACA,sB;AACA,mD;;AAEA,gE;AACA,sB;;AAEA,0C;AACA,uD;AACA,mC;AACA,e;;AAEA,gB;AACA,mD;;AAEA,iB;AACA,kC;;AAEA,gB;AACA,uE;;AAEA,yE;AACA,gE;AACA,oC;;AAEA,qC;AACA,6B;AACA,gD;AACA,8C;AACA,uE;AACA,gD;AACA,wB;AACA,0C;AACA,wC;AACA,0C;AACA,gE;AACA,oD;;AAEA,iC;AACA,Y;;AAEA,oD;AACA,0B;AACA,wD;AACA,kF;AACA,iF;AACA,mF;AACA,gC;AACA,0C;AACA,2D;AACA,uE;;AAEA,8D;AACA,sE;;AAEA,0C;;AAEA,0B;;AAEA,uC;AACA,mB;;AAEA,8B;AACA,e;AACA,oC;AACA,wC;AACA,0E;;AAEA,uB;AACA,sB;;AAEA,4B;;AAEA,4B;AACA,iB;AACA,sC;AACA,0C;AACA,+D;;AAEA,yC;AACA,0E;AACA,Y;AACA,sE;;AAEA,mC;AACA,O;AACA,K;AACA,iF;AACA,oE;;AAEA,qC;AACA,iB;;AAEA,wB;AACA,oC;;AAEA,4B;AACA,6B;AACA,Q;AACA,0B;;AAEA,qC;AACA,iB;AACA,G;AACA,E;;AAEA,2D;AACA,a;AACA,kB;AACA,kB;AACA,e;AACA,e;AACA,E;;AAEA,8B;AACA,iD;AACA,4B;AACA,2B;AACA,+C;AACA,kB;AACA,8D;AACA,2D;AACA,+B;AACA,kE;AACA,Y;AACA,sD;AACA,kB;AACA,G;AACA,e;AACA,E;;;;;;;;;;;;;;;;;;;AChgBA,0D;AACA,4D;AACA,O;AACA,sD;AACA,mC;AACA,sB;AACA,qC;AACA,sB;AACA,G;AACA,a;AACA,E;;;AAGA,0C;AACA,gD;AACA,2B;AACA,qC;;AAEA,Y;AACA,yB;AACA,E;;AAEA,0C;AACA,2C;AACA,4B;AACA,qD;AACA,mD;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;;;AC3BA,yE;AACA,gD;AACA,qD;AACA,c;AACA,gC;AACA,iC;AACA,M;AACA,gE;AACA,gE;AACA,iE;AACA,oD;AACA,oB;;AAEA,Q;AACA,gE;AACA,+E;AACA,c;AACA,Q;AACA,wC;AACA,oD;;AAEA,kC;AACA,iD;;AAEA,a;AACA,oC;AACA,oD;AACA,qD;AACA,2D;AACA,oD;AACA,Y;AACA,mE;AACA,K;AACA,U;AACA,6C;AACA,G;AACA,0B;AACA,8E;AACA,wE;AACA,2E;AACA,a;;AAEA,gC;;AAEA,S;AACA,yC;AACA,iB;AACA,0C;AACA,K;;AAEA,uE;AACA,iE;AACA,iD;AACA,uD;AACA,8B;AACA,uD;AACA,iD;AACA,oC;AACA,8E;AACA,K;;AAEA,uE;;AAEA,gF;AACA,a;AACA,qB;AACA,oC;AACA,G;;AAEA,gB;AACA,E;;AAEA,uE;AACA,+C;AACA,E;AACA,e;AACA,yG;AACA,gE;AACA,gE;AACA,mC;AACA,+C;;AAEA,0D;AACA,6B;AACA,kB;;AAEA,8D;AACA,6B;AACA,gD;;AAEA,4D;AACA,8B;AACA,uC;;AAEA,oE;AACA,U;AACA,c;AACA,G;AACA,E;;AAEA,8E;AACA,iB;;AAEA,6B;AACA,kD;AACA,Y;;AAEA,gC;AACA,sC;AACA,gB;AACA,8D;AACA,4C;AACA,e;;AAEA,gC;AACA,0C;AACA,qC;AACA,yC;AACA,uC;AACA,wC;AACA,uC;AACA,wC;AACA,2C;AACA,0B;AACA,mC;AACA,wB;AACA,8D;AACA,oD;AACA,gC;AACA,c;AACA,O;;AAEA,4B;AACA,yE;AACA,qB;AACA,+C;AACA,gC;AACA,uF;AACA,kI;AACA,O;;AAEA,yC;AACA,0C;AACA,qD;AACA,oC;AACA,8B;AACA,8C;;AAEA,yC;AACA,0C;AACA,uD;AACA,c;AACA,mC;;AAEA,+P;AACA,qF;;AAEA,2B;AACA,qC;AACA,sC;AACA,0B;AACA,0E;AACA,8B;AACA,8C;AACA,uC;AACA,oE;AACA,oB;AACA,oC;AACA,0C;AACA,a;AACA,W;AACA,gB;AACA,wD;AACA,S;;AAEA,2C;;AAEA,qF;AACA,iM;;AAEA,oE;;AAEA,6E;AACA,4C;AACA,4B;AACA,uB;AACA,8C;AACA,8B;;AAEA,8C;AACA,yD;AACA,O;AACA,Y;AACA,sD;AACA,K;AACA,G;;AAEA,yB;AACA,gB;AACA,8B;AACA,oB;AACA,M;AACA,iB;AACA,E;;AAEA,mD;AACA,qB;AACA,kD;AACA,sC;AACA,M;AACA,uB;AACA,E;;AAEA,8E;AACA,qF;AACA,iB;;AAEA,6B;AACA,mC;AACA,uD;AACA,Y;;AAEA,kD;AACA,Y;;AAEA,gD;AACA,gB;AACA,8D;AACA,4C;AACA,e;;AAEA,8B;AACA,yC;AACA,uC;AACA,wC;AACA,2C;AACA,0B;AACA,Y;AACA,uB;AACA,oE;AACA,K;AACA,G;;AAEA,yB;AACA,gB;AACA,8B;AACA,oB;AACA,M;AACA,iB;AACA,E;;AAEA,8D;AACA,iB;;AAEA,6B;AACA,mC;AACA,uD;AACA,Y;;AAEA,kD;AACA,Y;;AAEA,iD;AACA,gB;AACA,8D;AACA,4C;AACA,e;;AAEA,8B;AACA,yC;AACA,2C;AACA,0B;AACA,Y;AACA,uB;AACA,oE;AACA,K;AACA,G;;AAEA,yB;AACA,gB;AACA,8B;AACA,oB;AACA,M;AACA,iB;AACA,E;;AAEA,gE;AACA,E;AACA,kE;AACA,uC;AACA,4B;AACA,e;AACA,6C;AACA,4C;AACA,mD;AACA,E;;AAEA,kE;AACA,6D;AACA,kC;AACA,E;AACA,+D;AACA,6D;AACA,iD;AACA,8D;AACA,U;AACA,E;AACA,gE;AACA,6D;AACA,yB;AACA,mC;AACA,oB;;AAEA,4B;AACA,gE;AACA,+C;AACA,0B;AACA,8B;AACA,mC;AACA,K;AACA,4C;AACA,2B;AACA,oC;AACA,sD;AACA,8B;AACA,2B;AACA,K;AACA,kB;AACA,G;;AAEA,wB;AACA,iB;AACA,kB;;AAEA,2B;AACA,sB;AACA,8C;AACA,6B;AACA,kC;AACA,6C;AACA,6C;AACA,+B;AACA,uC;AACA,8C;AACA,O;AACA,K;;AAEA,+C;AACA,sE;AACA,yD;AACA,iC;AACA,G;;AAEA,gB;AACA,E","sourcesContent":["\r\nHTMLTools = {};\r\nHTMLTools.Parse = {};\r\n\r\nvar asciiLowerCase = HTMLTools.asciiLowerCase = function (str) {\r\n  return str.replace(/[A-Z]/g, function (c) {\r\n    return String.fromCharCode(c.charCodeAt(0) + 32);\r\n  });\r\n};\r\n\r\nvar svgCamelCaseAttributes = 'attributeName attributeType baseFrequency baseProfile calcMode clipPathUnits contentScriptType contentStyleType diffuseConstant edgeMode externalResourcesRequired filterRes filterUnits glyphRef glyphRef gradientTransform gradientTransform gradientUnits gradientUnits kernelMatrix kernelUnitLength kernelUnitLength kernelUnitLength keyPoints keySplines keyTimes lengthAdjust limitingConeAngle markerHeight markerUnits markerWidth maskContentUnits maskUnits numOctaves pathLength patternContentUnits patternTransform patternUnits pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits refX refY repeatCount repeatDur requiredExtensions requiredFeatures specularConstant specularExponent specularExponent spreadMethod spreadMethod startOffset stdDeviation stitchTiles surfaceScale surfaceScale systemLanguage tableValues targetX targetY textLength textLength viewBox viewTarget xChannelSelector yChannelSelector zoomAndPan'.split(' ');\r\n\r\nvar properAttributeCaseMap = (function (map) {\r\n  for (var i = 0; i < svgCamelCaseAttributes.length; i++) {\r\n    var a = svgCamelCaseAttributes[i];\r\n    map[asciiLowerCase(a)] = a;\r\n  }\r\n  return map;\r\n})({});\r\n\r\nvar properTagCaseMap = (function (map) {\r\n  var knownElements = HTML.knownElementNames;\r\n  for (var i = 0; i < knownElements.length; i++) {\r\n    var a = knownElements[i];\r\n    map[asciiLowerCase(a)] = a;\r\n  }\r\n  return map;\r\n})({});\r\n\r\n// Take a tag name in any case and make it the proper case for HTML.\r\n//\r\n// Modern browsers let you embed SVG in HTML, but SVG elements are special\r\n// in that they have a case-sensitive DOM API (nodeName, getAttribute,\r\n// setAttribute).  For example, it has to be `setAttribute(\"viewBox\")`,\r\n// not `\"viewbox\"`.  However, the browser's HTML parser is NOT case sensitive\r\n// and will fix the case for you, so if you write `<svg viewbox=\"...\">`\r\n// you actually get a `\"viewBox\"` attribute.  Any HTML-parsing toolchain\r\n// must do the same.\r\nHTMLTools.properCaseTagName = function (name) {\r\n  var lowered = asciiLowerCase(name);\r\n  return properTagCaseMap.hasOwnProperty(lowered) ?\r\n    properTagCaseMap[lowered] : lowered;\r\n};\r\n\r\n// See docs for properCaseTagName.\r\nHTMLTools.properCaseAttributeName = function (name) {\r\n  var lowered = asciiLowerCase(name);\r\n  return properAttributeCaseMap.hasOwnProperty(lowered) ?\r\n    properAttributeCaseMap[lowered] : lowered;\r\n};\r\n","// This is a Scanner class suitable for any parser/lexer/tokenizer.\r\n//\r\n// A Scanner has an immutable source document (string) `input` and a current\r\n// position `pos`, an index into the string, which can be set at will.\r\n//\r\n// * `new Scanner(input)` - constructs a Scanner with source string `input`\r\n// * `scanner.rest()` - returns the rest of the input after `pos`\r\n// * `scanner.peek()` - returns the character at `pos`\r\n// * `scanner.isEOF()` - true if `pos` is at or beyond the end of `input`\r\n// * `scanner.fatal(msg)` - throw an error indicating a problem at `pos`\r\n\r\nScanner = HTMLTools.Scanner = function (input) {\r\n  this.input = input; // public, read-only\r\n  this.pos = 0; // public, read-write\r\n};\r\n\r\nScanner.prototype.rest = function () {\r\n  // Slicing a string is O(1) in modern JavaScript VMs (including old IE).\r\n  return this.input.slice(this.pos);\r\n};\r\n\r\nScanner.prototype.isEOF = function () {\r\n  return this.pos >= this.input.length;\r\n};\r\n\r\nScanner.prototype.fatal = function (msg) {\r\n  // despite this default, you should always provide a message!\r\n  msg = (msg || \"Parse error\");\r\n\r\n  var CONTEXT_AMOUNT = 20;\r\n\r\n  var input = this.input;\r\n  var pos = this.pos;\r\n  var pastInput = input.substring(pos - CONTEXT_AMOUNT - 1, pos);\r\n  if (pastInput.length > CONTEXT_AMOUNT)\r\n    pastInput = '...' + pastInput.substring(-CONTEXT_AMOUNT);\r\n\r\n  var upcomingInput = input.substring(pos, pos + CONTEXT_AMOUNT + 1);\r\n  if (upcomingInput.length > CONTEXT_AMOUNT)\r\n    upcomingInput = upcomingInput.substring(0, CONTEXT_AMOUNT) + '...';\r\n\r\n  var positionDisplay = ((pastInput + upcomingInput).replace(/\\n/g, ' ') + '\\n' +\r\n                         (new Array(pastInput.length + 1).join(' ')) + \"^\");\r\n\r\n  var e = new Error(msg + \"\\n\" + positionDisplay);\r\n\r\n  e.offset = pos;\r\n  var allPastInput = input.substring(0, pos);\r\n  e.line = (1 + (allPastInput.match(/\\n/g) || []).length);\r\n  e.col = (1 + pos - allPastInput.lastIndexOf('\\n'));\r\n  e.scanner = this;\r\n\r\n  throw e;\r\n};\r\n\r\n// Peek at the next character.\r\n//\r\n// If `isEOF`, returns an empty string.\r\nScanner.prototype.peek = function () {\r\n  return this.input.charAt(this.pos);\r\n};\r\n\r\n// Constructs a `getFoo` function where `foo` is specified with a regex.\r\n// The regex should start with `^`.  The constructed function will return\r\n// match group 1, if it exists and matches a non-empty string, or else\r\n// the entire matched string (or null if there is no match).\r\n//\r\n// A `getFoo` function tries to match and consume a foo.  If it succeeds,\r\n// the current position of the scanner is advanced.  If it fails, the\r\n// current position is not advanced and a falsy value (typically null)\r\n// is returned.\r\nmakeRegexMatcher = function (regex) {\r\n  return function (scanner) {\r\n    var match = regex.exec(scanner.rest());\r\n\r\n    if (! match)\r\n      return null;\r\n\r\n    scanner.pos += match[0].length;\r\n    return match[1] || match[0];\r\n  };\r\n};\r\n","\r\n// http://www.whatwg.org/specs/web-apps/current-work/multipage/entities.json\r\n\r\n\r\n// Note that some entities don't have a final semicolon!  These are used to\r\n// make `&lt` (for example) with no semicolon a parse error but `&abcde` not.\r\n\r\nvar ENTITIES = {\r\n  \"&Aacute;\": { \"codepoints\": [193], \"characters\": \"\\u00C1\" },\r\n  \"&Aacute\": { \"codepoints\": [193], \"characters\": \"\\u00C1\" },\r\n  \"&aacute;\": { \"codepoints\": [225], \"characters\": \"\\u00E1\" },\r\n  \"&aacute\": { \"codepoints\": [225], \"characters\": \"\\u00E1\" },\r\n  \"&Abreve;\": { \"codepoints\": [258], \"characters\": \"\\u0102\" },\r\n  \"&abreve;\": { \"codepoints\": [259], \"characters\": \"\\u0103\" },\r\n  \"&ac;\": { \"codepoints\": [8766], \"characters\": \"\\u223E\" },\r\n  \"&acd;\": { \"codepoints\": [8767], \"characters\": \"\\u223F\" },\r\n  \"&acE;\": { \"codepoints\": [8766, 819], \"characters\": \"\\u223E\\u0333\" },\r\n  \"&Acirc;\": { \"codepoints\": [194], \"characters\": \"\\u00C2\" },\r\n  \"&Acirc\": { \"codepoints\": [194], \"characters\": \"\\u00C2\" },\r\n  \"&acirc;\": { \"codepoints\": [226], \"characters\": \"\\u00E2\" },\r\n  \"&acirc\": { \"codepoints\": [226], \"characters\": \"\\u00E2\" },\r\n  \"&acute;\": { \"codepoints\": [180], \"characters\": \"\\u00B4\" },\r\n  \"&acute\": { \"codepoints\": [180], \"characters\": \"\\u00B4\" },\r\n  \"&Acy;\": { \"codepoints\": [1040], \"characters\": \"\\u0410\" },\r\n  \"&acy;\": { \"codepoints\": [1072], \"characters\": \"\\u0430\" },\r\n  \"&AElig;\": { \"codepoints\": [198], \"characters\": \"\\u00C6\" },\r\n  \"&AElig\": { \"codepoints\": [198], \"characters\": \"\\u00C6\" },\r\n  \"&aelig;\": { \"codepoints\": [230], \"characters\": \"\\u00E6\" },\r\n  \"&aelig\": { \"codepoints\": [230], \"characters\": \"\\u00E6\" },\r\n  \"&af;\": { \"codepoints\": [8289], \"characters\": \"\\u2061\" },\r\n  \"&Afr;\": { \"codepoints\": [120068], \"characters\": \"\\uD835\\uDD04\" },\r\n  \"&afr;\": { \"codepoints\": [120094], \"characters\": \"\\uD835\\uDD1E\" },\r\n  \"&Agrave;\": { \"codepoints\": [192], \"characters\": \"\\u00C0\" },\r\n  \"&Agrave\": { \"codepoints\": [192], \"characters\": \"\\u00C0\" },\r\n  \"&agrave;\": { \"codepoints\": [224], \"characters\": \"\\u00E0\" },\r\n  \"&agrave\": { \"codepoints\": [224], \"characters\": \"\\u00E0\" },\r\n  \"&alefsym;\": { \"codepoints\": [8501], \"characters\": \"\\u2135\" },\r\n  \"&aleph;\": { \"codepoints\": [8501], \"characters\": \"\\u2135\" },\r\n  \"&Alpha;\": { \"codepoints\": [913], \"characters\": \"\\u0391\" },\r\n  \"&alpha;\": { \"codepoints\": [945], \"characters\": \"\\u03B1\" },\r\n  \"&Amacr;\": { \"codepoints\": [256], \"characters\": \"\\u0100\" },\r\n  \"&amacr;\": { \"codepoints\": [257], \"characters\": \"\\u0101\" },\r\n  \"&amalg;\": { \"codepoints\": [10815], \"characters\": \"\\u2A3F\" },\r\n  \"&amp;\": { \"codepoints\": [38], \"characters\": \"\\u0026\" },\r\n  \"&amp\": { \"codepoints\": [38], \"characters\": \"\\u0026\" },\r\n  \"&AMP;\": { \"codepoints\": [38], \"characters\": \"\\u0026\" },\r\n  \"&AMP\": { \"codepoints\": [38], \"characters\": \"\\u0026\" },\r\n  \"&andand;\": { \"codepoints\": [10837], \"characters\": \"\\u2A55\" },\r\n  \"&And;\": { \"codepoints\": [10835], \"characters\": \"\\u2A53\" },\r\n  \"&and;\": { \"codepoints\": [8743], \"characters\": \"\\u2227\" },\r\n  \"&andd;\": { \"codepoints\": [10844], \"characters\": \"\\u2A5C\" },\r\n  \"&andslope;\": { \"codepoints\": [10840], \"characters\": \"\\u2A58\" },\r\n  \"&andv;\": { \"codepoints\": [10842], \"characters\": \"\\u2A5A\" },\r\n  \"&ang;\": { \"codepoints\": [8736], \"characters\": \"\\u2220\" },\r\n  \"&ange;\": { \"codepoints\": [10660], \"characters\": \"\\u29A4\" },\r\n  \"&angle;\": { \"codepoints\": [8736], \"characters\": \"\\u2220\" },\r\n  \"&angmsdaa;\": { \"codepoints\": [10664], \"characters\": \"\\u29A8\" },\r\n  \"&angmsdab;\": { \"codepoints\": [10665], \"characters\": \"\\u29A9\" },\r\n  \"&angmsdac;\": { \"codepoints\": [10666], \"characters\": \"\\u29AA\" },\r\n  \"&angmsdad;\": { \"codepoints\": [10667], \"characters\": \"\\u29AB\" },\r\n  \"&angmsdae;\": { \"codepoints\": [10668], \"characters\": \"\\u29AC\" },\r\n  \"&angmsdaf;\": { \"codepoints\": [10669], \"characters\": \"\\u29AD\" },\r\n  \"&angmsdag;\": { \"codepoints\": [10670], \"characters\": \"\\u29AE\" },\r\n  \"&angmsdah;\": { \"codepoints\": [10671], \"characters\": \"\\u29AF\" },\r\n  \"&angmsd;\": { \"codepoints\": [8737], \"characters\": \"\\u2221\" },\r\n  \"&angrt;\": { \"codepoints\": [8735], \"characters\": \"\\u221F\" },\r\n  \"&angrtvb;\": { \"codepoints\": [8894], \"characters\": \"\\u22BE\" },\r\n  \"&angrtvbd;\": { \"codepoints\": [10653], \"characters\": \"\\u299D\" },\r\n  \"&angsph;\": { \"codepoints\": [8738], \"characters\": \"\\u2222\" },\r\n  \"&angst;\": { \"codepoints\": [197], \"characters\": \"\\u00C5\" },\r\n  \"&angzarr;\": { \"codepoints\": [9084], \"characters\": \"\\u237C\" },\r\n  \"&Aogon;\": { \"codepoints\": [260], \"characters\": \"\\u0104\" },\r\n  \"&aogon;\": { \"codepoints\": [261], \"characters\": \"\\u0105\" },\r\n  \"&Aopf;\": { \"codepoints\": [120120], \"characters\": \"\\uD835\\uDD38\" },\r\n  \"&aopf;\": { \"codepoints\": [120146], \"characters\": \"\\uD835\\uDD52\" },\r\n  \"&apacir;\": { \"codepoints\": [10863], \"characters\": \"\\u2A6F\" },\r\n  \"&ap;\": { \"codepoints\": [8776], \"characters\": \"\\u2248\" },\r\n  \"&apE;\": { \"codepoints\": [10864], \"characters\": \"\\u2A70\" },\r\n  \"&ape;\": { \"codepoints\": [8778], \"characters\": \"\\u224A\" },\r\n  \"&apid;\": { \"codepoints\": [8779], \"characters\": \"\\u224B\" },\r\n  \"&apos;\": { \"codepoints\": [39], \"characters\": \"\\u0027\" },\r\n  \"&ApplyFunction;\": { \"codepoints\": [8289], \"characters\": \"\\u2061\" },\r\n  \"&approx;\": { \"codepoints\": [8776], \"characters\": \"\\u2248\" },\r\n  \"&approxeq;\": { \"codepoints\": [8778], \"characters\": \"\\u224A\" },\r\n  \"&Aring;\": { \"codepoints\": [197], \"characters\": \"\\u00C5\" },\r\n  \"&Aring\": { \"codepoints\": [197], \"characters\": \"\\u00C5\" },\r\n  \"&aring;\": { \"codepoints\": [229], \"characters\": \"\\u00E5\" },\r\n  \"&aring\": { \"codepoints\": [229], \"characters\": \"\\u00E5\" },\r\n  \"&Ascr;\": { \"codepoints\": [119964], \"characters\": \"\\uD835\\uDC9C\" },\r\n  \"&ascr;\": { \"codepoints\": [119990], \"characters\": \"\\uD835\\uDCB6\" },\r\n  \"&Assign;\": { \"codepoints\": [8788], \"characters\": \"\\u2254\" },\r\n  \"&ast;\": { \"codepoints\": [42], \"characters\": \"\\u002A\" },\r\n  \"&asymp;\": { \"codepoints\": [8776], \"characters\": \"\\u2248\" },\r\n  \"&asympeq;\": { \"codepoints\": [8781], \"characters\": \"\\u224D\" },\r\n  \"&Atilde;\": { \"codepoints\": [195], \"characters\": \"\\u00C3\" },\r\n  \"&Atilde\": { \"codepoints\": [195], \"characters\": \"\\u00C3\" },\r\n  \"&atilde;\": { \"codepoints\": [227], \"characters\": \"\\u00E3\" },\r\n  \"&atilde\": { \"codepoints\": [227], \"characters\": \"\\u00E3\" },\r\n  \"&Auml;\": { \"codepoints\": [196], \"characters\": \"\\u00C4\" },\r\n  \"&Auml\": { \"codepoints\": [196], \"characters\": \"\\u00C4\" },\r\n  \"&auml;\": { \"codepoints\": [228], \"characters\": \"\\u00E4\" },\r\n  \"&auml\": { \"codepoints\": [228], \"characters\": \"\\u00E4\" },\r\n  \"&awconint;\": { \"codepoints\": [8755], \"characters\": \"\\u2233\" },\r\n  \"&awint;\": { \"codepoints\": [10769], \"characters\": \"\\u2A11\" },\r\n  \"&backcong;\": { \"codepoints\": [8780], \"characters\": \"\\u224C\" },\r\n  \"&backepsilon;\": { \"codepoints\": [1014], \"characters\": \"\\u03F6\" },\r\n  \"&backprime;\": { \"codepoints\": [8245], \"characters\": \"\\u2035\" },\r\n  \"&backsim;\": { \"codepoints\": [8765], \"characters\": \"\\u223D\" },\r\n  \"&backsimeq;\": { \"codepoints\": [8909], \"characters\": \"\\u22CD\" },\r\n  \"&Backslash;\": { \"codepoints\": [8726], \"characters\": \"\\u2216\" },\r\n  \"&Barv;\": { \"codepoints\": [10983], \"characters\": \"\\u2AE7\" },\r\n  \"&barvee;\": { \"codepoints\": [8893], \"characters\": \"\\u22BD\" },\r\n  \"&barwed;\": { \"codepoints\": [8965], \"characters\": \"\\u2305\" },\r\n  \"&Barwed;\": { \"codepoints\": [8966], \"characters\": \"\\u2306\" },\r\n  \"&barwedge;\": { \"codepoints\": [8965], \"characters\": \"\\u2305\" },\r\n  \"&bbrk;\": { \"codepoints\": [9141], \"characters\": \"\\u23B5\" },\r\n  \"&bbrktbrk;\": { \"codepoints\": [9142], \"characters\": \"\\u23B6\" },\r\n  \"&bcong;\": { \"codepoints\": [8780], \"characters\": \"\\u224C\" },\r\n  \"&Bcy;\": { \"codepoints\": [1041], \"characters\": \"\\u0411\" },\r\n  \"&bcy;\": { \"codepoints\": [1073], \"characters\": \"\\u0431\" },\r\n  \"&bdquo;\": { \"codepoints\": [8222], \"characters\": \"\\u201E\" },\r\n  \"&becaus;\": { \"codepoints\": [8757], \"characters\": \"\\u2235\" },\r\n  \"&because;\": { \"codepoints\": [8757], \"characters\": \"\\u2235\" },\r\n  \"&Because;\": { \"codepoints\": [8757], \"characters\": \"\\u2235\" },\r\n  \"&bemptyv;\": { \"codepoints\": [10672], \"characters\": \"\\u29B0\" },\r\n  \"&bepsi;\": { \"codepoints\": [1014], \"characters\": \"\\u03F6\" },\r\n  \"&bernou;\": { \"codepoints\": [8492], \"characters\": \"\\u212C\" },\r\n  \"&Bernoullis;\": { \"codepoints\": [8492], \"characters\": \"\\u212C\" },\r\n  \"&Beta;\": { \"codepoints\": [914], \"characters\": \"\\u0392\" },\r\n  \"&beta;\": { \"codepoints\": [946], \"characters\": \"\\u03B2\" },\r\n  \"&beth;\": { \"codepoints\": [8502], \"characters\": \"\\u2136\" },\r\n  \"&between;\": { \"codepoints\": [8812], \"characters\": \"\\u226C\" },\r\n  \"&Bfr;\": { \"codepoints\": [120069], \"characters\": \"\\uD835\\uDD05\" },\r\n  \"&bfr;\": { \"codepoints\": [120095], \"characters\": \"\\uD835\\uDD1F\" },\r\n  \"&bigcap;\": { \"codepoints\": [8898], \"characters\": \"\\u22C2\" },\r\n  \"&bigcirc;\": { \"codepoints\": [9711], \"characters\": \"\\u25EF\" },\r\n  \"&bigcup;\": { \"codepoints\": [8899], \"characters\": \"\\u22C3\" },\r\n  \"&bigodot;\": { \"codepoints\": [10752], \"characters\": \"\\u2A00\" },\r\n  \"&bigoplus;\": { \"codepoints\": [10753], \"characters\": \"\\u2A01\" },\r\n  \"&bigotimes;\": { \"codepoints\": [10754], \"characters\": \"\\u2A02\" },\r\n  \"&bigsqcup;\": { \"codepoints\": [10758], \"characters\": \"\\u2A06\" },\r\n  \"&bigstar;\": { \"codepoints\": [9733], \"characters\": \"\\u2605\" },\r\n  \"&bigtriangledown;\": { \"codepoints\": [9661], \"characters\": \"\\u25BD\" },\r\n  \"&bigtriangleup;\": { \"codepoints\": [9651], \"characters\": \"\\u25B3\" },\r\n  \"&biguplus;\": { \"codepoints\": [10756], \"characters\": \"\\u2A04\" },\r\n  \"&bigvee;\": { \"codepoints\": [8897], \"characters\": \"\\u22C1\" },\r\n  \"&bigwedge;\": { \"codepoints\": [8896], \"characters\": \"\\u22C0\" },\r\n  \"&bkarow;\": { \"codepoints\": [10509], \"characters\": \"\\u290D\" },\r\n  \"&blacklozenge;\": { \"codepoints\": [10731], \"characters\": \"\\u29EB\" },\r\n  \"&blacksquare;\": { \"codepoints\": [9642], \"characters\": \"\\u25AA\" },\r\n  \"&blacktriangle;\": { \"codepoints\": [9652], \"characters\": \"\\u25B4\" },\r\n  \"&blacktriangledown;\": { \"codepoints\": [9662], \"characters\": \"\\u25BE\" },\r\n  \"&blacktriangleleft;\": { \"codepoints\": [9666], \"characters\": \"\\u25C2\" },\r\n  \"&blacktriangleright;\": { \"codepoints\": [9656], \"characters\": \"\\u25B8\" },\r\n  \"&blank;\": { \"codepoints\": [9251], \"characters\": \"\\u2423\" },\r\n  \"&blk12;\": { \"codepoints\": [9618], \"characters\": \"\\u2592\" },\r\n  \"&blk14;\": { \"codepoints\": [9617], \"characters\": \"\\u2591\" },\r\n  \"&blk34;\": { \"codepoints\": [9619], \"characters\": \"\\u2593\" },\r\n  \"&block;\": { \"codepoints\": [9608], \"characters\": \"\\u2588\" },\r\n  \"&bne;\": { \"codepoints\": [61, 8421], \"characters\": \"\\u003D\\u20E5\" },\r\n  \"&bnequiv;\": { \"codepoints\": [8801, 8421], \"characters\": \"\\u2261\\u20E5\" },\r\n  \"&bNot;\": { \"codepoints\": [10989], \"characters\": \"\\u2AED\" },\r\n  \"&bnot;\": { \"codepoints\": [8976], \"characters\": \"\\u2310\" },\r\n  \"&Bopf;\": { \"codepoints\": [120121], \"characters\": \"\\uD835\\uDD39\" },\r\n  \"&bopf;\": { \"codepoints\": [120147], \"characters\": \"\\uD835\\uDD53\" },\r\n  \"&bot;\": { \"codepoints\": [8869], \"characters\": \"\\u22A5\" },\r\n  \"&bottom;\": { \"codepoints\": [8869], \"characters\": \"\\u22A5\" },\r\n  \"&bowtie;\": { \"codepoints\": [8904], \"characters\": \"\\u22C8\" },\r\n  \"&boxbox;\": { \"codepoints\": [10697], \"characters\": \"\\u29C9\" },\r\n  \"&boxdl;\": { \"codepoints\": [9488], \"characters\": \"\\u2510\" },\r\n  \"&boxdL;\": { \"codepoints\": [9557], \"characters\": \"\\u2555\" },\r\n  \"&boxDl;\": { \"codepoints\": [9558], \"characters\": \"\\u2556\" },\r\n  \"&boxDL;\": { \"codepoints\": [9559], \"characters\": \"\\u2557\" },\r\n  \"&boxdr;\": { \"codepoints\": [9484], \"characters\": \"\\u250C\" },\r\n  \"&boxdR;\": { \"codepoints\": [9554], \"characters\": \"\\u2552\" },\r\n  \"&boxDr;\": { \"codepoints\": [9555], \"characters\": \"\\u2553\" },\r\n  \"&boxDR;\": { \"codepoints\": [9556], \"characters\": \"\\u2554\" },\r\n  \"&boxh;\": { \"codepoints\": [9472], \"characters\": \"\\u2500\" },\r\n  \"&boxH;\": { \"codepoints\": [9552], \"characters\": \"\\u2550\" },\r\n  \"&boxhd;\": { \"codepoints\": [9516], \"characters\": \"\\u252C\" },\r\n  \"&boxHd;\": { \"codepoints\": [9572], \"characters\": \"\\u2564\" },\r\n  \"&boxhD;\": { \"codepoints\": [9573], \"characters\": \"\\u2565\" },\r\n  \"&boxHD;\": { \"codepoints\": [9574], \"characters\": \"\\u2566\" },\r\n  \"&boxhu;\": { \"codepoints\": [9524], \"characters\": \"\\u2534\" },\r\n  \"&boxHu;\": { \"codepoints\": [9575], \"characters\": \"\\u2567\" },\r\n  \"&boxhU;\": { \"codepoints\": [9576], \"characters\": \"\\u2568\" },\r\n  \"&boxHU;\": { \"codepoints\": [9577], \"characters\": \"\\u2569\" },\r\n  \"&boxminus;\": { \"codepoints\": [8863], \"characters\": \"\\u229F\" },\r\n  \"&boxplus;\": { \"codepoints\": [8862], \"characters\": \"\\u229E\" },\r\n  \"&boxtimes;\": { \"codepoints\": [8864], \"characters\": \"\\u22A0\" },\r\n  \"&boxul;\": { \"codepoints\": [9496], \"characters\": \"\\u2518\" },\r\n  \"&boxuL;\": { \"codepoints\": [9563], \"characters\": \"\\u255B\" },\r\n  \"&boxUl;\": { \"codepoints\": [9564], \"characters\": \"\\u255C\" },\r\n  \"&boxUL;\": { \"codepoints\": [9565], \"characters\": \"\\u255D\" },\r\n  \"&boxur;\": { \"codepoints\": [9492], \"characters\": \"\\u2514\" },\r\n  \"&boxuR;\": { \"codepoints\": [9560], \"characters\": \"\\u2558\" },\r\n  \"&boxUr;\": { \"codepoints\": [9561], \"characters\": \"\\u2559\" },\r\n  \"&boxUR;\": { \"codepoints\": [9562], \"characters\": \"\\u255A\" },\r\n  \"&boxv;\": { \"codepoints\": [9474], \"characters\": \"\\u2502\" },\r\n  \"&boxV;\": { \"codepoints\": [9553], \"characters\": \"\\u2551\" },\r\n  \"&boxvh;\": { \"codepoints\": [9532], \"characters\": \"\\u253C\" },\r\n  \"&boxvH;\": { \"codepoints\": [9578], \"characters\": \"\\u256A\" },\r\n  \"&boxVh;\": { \"codepoints\": [9579], \"characters\": \"\\u256B\" },\r\n  \"&boxVH;\": { \"codepoints\": [9580], \"characters\": \"\\u256C\" },\r\n  \"&boxvl;\": { \"codepoints\": [9508], \"characters\": \"\\u2524\" },\r\n  \"&boxvL;\": { \"codepoints\": [9569], \"characters\": \"\\u2561\" },\r\n  \"&boxVl;\": { \"codepoints\": [9570], \"characters\": \"\\u2562\" },\r\n  \"&boxVL;\": { \"codepoints\": [9571], \"characters\": \"\\u2563\" },\r\n  \"&boxvr;\": { \"codepoints\": [9500], \"characters\": \"\\u251C\" },\r\n  \"&boxvR;\": { \"codepoints\": [9566], \"characters\": \"\\u255E\" },\r\n  \"&boxVr;\": { \"codepoints\": [9567], \"characters\": \"\\u255F\" },\r\n  \"&boxVR;\": { \"codepoints\": [9568], \"characters\": \"\\u2560\" },\r\n  \"&bprime;\": { \"codepoints\": [8245], \"characters\": \"\\u2035\" },\r\n  \"&breve;\": { \"codepoints\": [728], \"characters\": \"\\u02D8\" },\r\n  \"&Breve;\": { \"codepoints\": [728], \"characters\": \"\\u02D8\" },\r\n  \"&brvbar;\": { \"codepoints\": [166], \"characters\": \"\\u00A6\" },\r\n  \"&brvbar\": { \"codepoints\": [166], \"characters\": \"\\u00A6\" },\r\n  \"&bscr;\": { \"codepoints\": [119991], \"characters\": \"\\uD835\\uDCB7\" },\r\n  \"&Bscr;\": { \"codepoints\": [8492], \"characters\": \"\\u212C\" },\r\n  \"&bsemi;\": { \"codepoints\": [8271], \"characters\": \"\\u204F\" },\r\n  \"&bsim;\": { \"codepoints\": [8765], \"characters\": \"\\u223D\" },\r\n  \"&bsime;\": { \"codepoints\": [8909], \"characters\": \"\\u22CD\" },\r\n  \"&bsolb;\": { \"codepoints\": [10693], \"characters\": \"\\u29C5\" },\r\n  \"&bsol;\": { \"codepoints\": [92], \"characters\": \"\\u005C\" },\r\n  \"&bsolhsub;\": { \"codepoints\": [10184], \"characters\": \"\\u27C8\" },\r\n  \"&bull;\": { \"codepoints\": [8226], \"characters\": \"\\u2022\" },\r\n  \"&bullet;\": { \"codepoints\": [8226], \"characters\": \"\\u2022\" },\r\n  \"&bump;\": { \"codepoints\": [8782], \"characters\": \"\\u224E\" },\r\n  \"&bumpE;\": { \"codepoints\": [10926], \"characters\": \"\\u2AAE\" },\r\n  \"&bumpe;\": { \"codepoints\": [8783], \"characters\": \"\\u224F\" },\r\n  \"&Bumpeq;\": { \"codepoints\": [8782], \"characters\": \"\\u224E\" },\r\n  \"&bumpeq;\": { \"codepoints\": [8783], \"characters\": \"\\u224F\" },\r\n  \"&Cacute;\": { \"codepoints\": [262], \"characters\": \"\\u0106\" },\r\n  \"&cacute;\": { \"codepoints\": [263], \"characters\": \"\\u0107\" },\r\n  \"&capand;\": { \"codepoints\": [10820], \"characters\": \"\\u2A44\" },\r\n  \"&capbrcup;\": { \"codepoints\": [10825], \"characters\": \"\\u2A49\" },\r\n  \"&capcap;\": { \"codepoints\": [10827], \"characters\": \"\\u2A4B\" },\r\n  \"&cap;\": { \"codepoints\": [8745], \"characters\": \"\\u2229\" },\r\n  \"&Cap;\": { \"codepoints\": [8914], \"characters\": \"\\u22D2\" },\r\n  \"&capcup;\": { \"codepoints\": [10823], \"characters\": \"\\u2A47\" },\r\n  \"&capdot;\": { \"codepoints\": [10816], \"characters\": \"\\u2A40\" },\r\n  \"&CapitalDifferentialD;\": { \"codepoints\": [8517], \"characters\": \"\\u2145\" },\r\n  \"&caps;\": { \"codepoints\": [8745, 65024], \"characters\": \"\\u2229\\uFE00\" },\r\n  \"&caret;\": { \"codepoints\": [8257], \"characters\": \"\\u2041\" },\r\n  \"&caron;\": { \"codepoints\": [711], \"characters\": \"\\u02C7\" },\r\n  \"&Cayleys;\": { \"codepoints\": [8493], \"characters\": \"\\u212D\" },\r\n  \"&ccaps;\": { \"codepoints\": [10829], \"characters\": \"\\u2A4D\" },\r\n  \"&Ccaron;\": { \"codepoints\": [268], \"characters\": \"\\u010C\" },\r\n  \"&ccaron;\": { \"codepoints\": [269], \"characters\": \"\\u010D\" },\r\n  \"&Ccedil;\": { \"codepoints\": [199], \"characters\": \"\\u00C7\" },\r\n  \"&Ccedil\": { \"codepoints\": [199], \"characters\": \"\\u00C7\" },\r\n  \"&ccedil;\": { \"codepoints\": [231], \"characters\": \"\\u00E7\" },\r\n  \"&ccedil\": { \"codepoints\": [231], \"characters\": \"\\u00E7\" },\r\n  \"&Ccirc;\": { \"codepoints\": [264], \"characters\": \"\\u0108\" },\r\n  \"&ccirc;\": { \"codepoints\": [265], \"characters\": \"\\u0109\" },\r\n  \"&Cconint;\": { \"codepoints\": [8752], \"characters\": \"\\u2230\" },\r\n  \"&ccups;\": { \"codepoints\": [10828], \"characters\": \"\\u2A4C\" },\r\n  \"&ccupssm;\": { \"codepoints\": [10832], \"characters\": \"\\u2A50\" },\r\n  \"&Cdot;\": { \"codepoints\": [266], \"characters\": \"\\u010A\" },\r\n  \"&cdot;\": { \"codepoints\": [267], \"characters\": \"\\u010B\" },\r\n  \"&cedil;\": { \"codepoints\": [184], \"characters\": \"\\u00B8\" },\r\n  \"&cedil\": { \"codepoints\": [184], \"characters\": \"\\u00B8\" },\r\n  \"&Cedilla;\": { \"codepoints\": [184], \"characters\": \"\\u00B8\" },\r\n  \"&cemptyv;\": { \"codepoints\": [10674], \"characters\": \"\\u29B2\" },\r\n  \"&cent;\": { \"codepoints\": [162], \"characters\": \"\\u00A2\" },\r\n  \"&cent\": { \"codepoints\": [162], \"characters\": \"\\u00A2\" },\r\n  \"&centerdot;\": { \"codepoints\": [183], \"characters\": \"\\u00B7\" },\r\n  \"&CenterDot;\": { \"codepoints\": [183], \"characters\": \"\\u00B7\" },\r\n  \"&cfr;\": { \"codepoints\": [120096], \"characters\": \"\\uD835\\uDD20\" },\r\n  \"&Cfr;\": { \"codepoints\": [8493], \"characters\": \"\\u212D\" },\r\n  \"&CHcy;\": { \"codepoints\": [1063], \"characters\": \"\\u0427\" },\r\n  \"&chcy;\": { \"codepoints\": [1095], \"characters\": \"\\u0447\" },\r\n  \"&check;\": { \"codepoints\": [10003], \"characters\": \"\\u2713\" },\r\n  \"&checkmark;\": { \"codepoints\": [10003], \"characters\": \"\\u2713\" },\r\n  \"&Chi;\": { \"codepoints\": [935], \"characters\": \"\\u03A7\" },\r\n  \"&chi;\": { \"codepoints\": [967], \"characters\": \"\\u03C7\" },\r\n  \"&circ;\": { \"codepoints\": [710], \"characters\": \"\\u02C6\" },\r\n  \"&circeq;\": { \"codepoints\": [8791], \"characters\": \"\\u2257\" },\r\n  \"&circlearrowleft;\": { \"codepoints\": [8634], \"characters\": \"\\u21BA\" },\r\n  \"&circlearrowright;\": { \"codepoints\": [8635], \"characters\": \"\\u21BB\" },\r\n  \"&circledast;\": { \"codepoints\": [8859], \"characters\": \"\\u229B\" },\r\n  \"&circledcirc;\": { \"codepoints\": [8858], \"characters\": \"\\u229A\" },\r\n  \"&circleddash;\": { \"codepoints\": [8861], \"characters\": \"\\u229D\" },\r\n  \"&CircleDot;\": { \"codepoints\": [8857], \"characters\": \"\\u2299\" },\r\n  \"&circledR;\": { \"codepoints\": [174], \"characters\": \"\\u00AE\" },\r\n  \"&circledS;\": { \"codepoints\": [9416], \"characters\": \"\\u24C8\" },\r\n  \"&CircleMinus;\": { \"codepoints\": [8854], \"characters\": \"\\u2296\" },\r\n  \"&CirclePlus;\": { \"codepoints\": [8853], \"characters\": \"\\u2295\" },\r\n  \"&CircleTimes;\": { \"codepoints\": [8855], \"characters\": \"\\u2297\" },\r\n  \"&cir;\": { \"codepoints\": [9675], \"characters\": \"\\u25CB\" },\r\n  \"&cirE;\": { \"codepoints\": [10691], \"characters\": \"\\u29C3\" },\r\n  \"&cire;\": { \"codepoints\": [8791], \"characters\": \"\\u2257\" },\r\n  \"&cirfnint;\": { \"codepoints\": [10768], \"characters\": \"\\u2A10\" },\r\n  \"&cirmid;\": { \"codepoints\": [10991], \"characters\": \"\\u2AEF\" },\r\n  \"&cirscir;\": { \"codepoints\": [10690], \"characters\": \"\\u29C2\" },\r\n  \"&ClockwiseContourIntegral;\": { \"codepoints\": [8754], \"characters\": \"\\u2232\" },\r\n  \"&CloseCurlyDoubleQuote;\": { \"codepoints\": [8221], \"characters\": \"\\u201D\" },\r\n  \"&CloseCurlyQuote;\": { \"codepoints\": [8217], \"characters\": \"\\u2019\" },\r\n  \"&clubs;\": { \"codepoints\": [9827], \"characters\": \"\\u2663\" },\r\n  \"&clubsuit;\": { \"codepoints\": [9827], \"characters\": \"\\u2663\" },\r\n  \"&colon;\": { \"codepoints\": [58], \"characters\": \"\\u003A\" },\r\n  \"&Colon;\": { \"codepoints\": [8759], \"characters\": \"\\u2237\" },\r\n  \"&Colone;\": { \"codepoints\": [10868], \"characters\": \"\\u2A74\" },\r\n  \"&colone;\": { \"codepoints\": [8788], \"characters\": \"\\u2254\" },\r\n  \"&coloneq;\": { \"codepoints\": [8788], \"characters\": \"\\u2254\" },\r\n  \"&comma;\": { \"codepoints\": [44], \"characters\": \"\\u002C\" },\r\n  \"&commat;\": { \"codepoints\": [64], \"characters\": \"\\u0040\" },\r\n  \"&comp;\": { \"codepoints\": [8705], \"characters\": \"\\u2201\" },\r\n  \"&compfn;\": { \"codepoints\": [8728], \"characters\": \"\\u2218\" },\r\n  \"&complement;\": { \"codepoints\": [8705], \"characters\": \"\\u2201\" },\r\n  \"&complexes;\": { \"codepoints\": [8450], \"characters\": \"\\u2102\" },\r\n  \"&cong;\": { \"codepoints\": [8773], \"characters\": \"\\u2245\" },\r\n  \"&congdot;\": { \"codepoints\": [10861], \"characters\": \"\\u2A6D\" },\r\n  \"&Congruent;\": { \"codepoints\": [8801], \"characters\": \"\\u2261\" },\r\n  \"&conint;\": { \"codepoints\": [8750], \"characters\": \"\\u222E\" },\r\n  \"&Conint;\": { \"codepoints\": [8751], \"characters\": \"\\u222F\" },\r\n  \"&ContourIntegral;\": { \"codepoints\": [8750], \"characters\": \"\\u222E\" },\r\n  \"&copf;\": { \"codepoints\": [120148], \"characters\": \"\\uD835\\uDD54\" },\r\n  \"&Copf;\": { \"codepoints\": [8450], \"characters\": \"\\u2102\" },\r\n  \"&coprod;\": { \"codepoints\": [8720], \"characters\": \"\\u2210\" },\r\n  \"&Coproduct;\": { \"codepoints\": [8720], \"characters\": \"\\u2210\" },\r\n  \"&copy;\": { \"codepoints\": [169], \"characters\": \"\\u00A9\" },\r\n  \"&copy\": { \"codepoints\": [169], \"characters\": \"\\u00A9\" },\r\n  \"&COPY;\": { \"codepoints\": [169], \"characters\": \"\\u00A9\" },\r\n  \"&COPY\": { \"codepoints\": [169], \"characters\": \"\\u00A9\" },\r\n  \"&copysr;\": { \"codepoints\": [8471], \"characters\": \"\\u2117\" },\r\n  \"&CounterClockwiseContourIntegral;\": { \"codepoints\": [8755], \"characters\": \"\\u2233\" },\r\n  \"&crarr;\": { \"codepoints\": [8629], \"characters\": \"\\u21B5\" },\r\n  \"&cross;\": { \"codepoints\": [10007], \"characters\": \"\\u2717\" },\r\n  \"&Cross;\": { \"codepoints\": [10799], \"characters\": \"\\u2A2F\" },\r\n  \"&Cscr;\": { \"codepoints\": [119966], \"characters\": \"\\uD835\\uDC9E\" },\r\n  \"&cscr;\": { \"codepoints\": [119992], \"characters\": \"\\uD835\\uDCB8\" },\r\n  \"&csub;\": { \"codepoints\": [10959], \"characters\": \"\\u2ACF\" },\r\n  \"&csube;\": { \"codepoints\": [10961], \"characters\": \"\\u2AD1\" },\r\n  \"&csup;\": { \"codepoints\": [10960], \"characters\": \"\\u2AD0\" },\r\n  \"&csupe;\": { \"codepoints\": [10962], \"characters\": \"\\u2AD2\" },\r\n  \"&ctdot;\": { \"codepoints\": [8943], \"characters\": \"\\u22EF\" },\r\n  \"&cudarrl;\": { \"codepoints\": [10552], \"characters\": \"\\u2938\" },\r\n  \"&cudarrr;\": { \"codepoints\": [10549], \"characters\": \"\\u2935\" },\r\n  \"&cuepr;\": { \"codepoints\": [8926], \"characters\": \"\\u22DE\" },\r\n  \"&cuesc;\": { \"codepoints\": [8927], \"characters\": \"\\u22DF\" },\r\n  \"&cularr;\": { \"codepoints\": [8630], \"characters\": \"\\u21B6\" },\r\n  \"&cularrp;\": { \"codepoints\": [10557], \"characters\": \"\\u293D\" },\r\n  \"&cupbrcap;\": { \"codepoints\": [10824], \"characters\": \"\\u2A48\" },\r\n  \"&cupcap;\": { \"codepoints\": [10822], \"characters\": \"\\u2A46\" },\r\n  \"&CupCap;\": { \"codepoints\": [8781], \"characters\": \"\\u224D\" },\r\n  \"&cup;\": { \"codepoints\": [8746], \"characters\": \"\\u222A\" },\r\n  \"&Cup;\": { \"codepoints\": [8915], \"characters\": \"\\u22D3\" },\r\n  \"&cupcup;\": { \"codepoints\": [10826], \"characters\": \"\\u2A4A\" },\r\n  \"&cupdot;\": { \"codepoints\": [8845], \"characters\": \"\\u228D\" },\r\n  \"&cupor;\": { \"codepoints\": [10821], \"characters\": \"\\u2A45\" },\r\n  \"&cups;\": { \"codepoints\": [8746, 65024], \"characters\": \"\\u222A\\uFE00\" },\r\n  \"&curarr;\": { \"codepoints\": [8631], \"characters\": \"\\u21B7\" },\r\n  \"&curarrm;\": { \"codepoints\": [10556], \"characters\": \"\\u293C\" },\r\n  \"&curlyeqprec;\": { \"codepoints\": [8926], \"characters\": \"\\u22DE\" },\r\n  \"&curlyeqsucc;\": { \"codepoints\": [8927], \"characters\": \"\\u22DF\" },\r\n  \"&curlyvee;\": { \"codepoints\": [8910], \"characters\": \"\\u22CE\" },\r\n  \"&curlywedge;\": { \"codepoints\": [8911], \"characters\": \"\\u22CF\" },\r\n  \"&curren;\": { \"codepoints\": [164], \"characters\": \"\\u00A4\" },\r\n  \"&curren\": { \"codepoints\": [164], \"characters\": \"\\u00A4\" },\r\n  \"&curvearrowleft;\": { \"codepoints\": [8630], \"characters\": \"\\u21B6\" },\r\n  \"&curvearrowright;\": { \"codepoints\": [8631], \"characters\": \"\\u21B7\" },\r\n  \"&cuvee;\": { \"codepoints\": [8910], \"characters\": \"\\u22CE\" },\r\n  \"&cuwed;\": { \"codepoints\": [8911], \"characters\": \"\\u22CF\" },\r\n  \"&cwconint;\": { \"codepoints\": [8754], \"characters\": \"\\u2232\" },\r\n  \"&cwint;\": { \"codepoints\": [8753], \"characters\": \"\\u2231\" },\r\n  \"&cylcty;\": { \"codepoints\": [9005], \"characters\": \"\\u232D\" },\r\n  \"&dagger;\": { \"codepoints\": [8224], \"characters\": \"\\u2020\" },\r\n  \"&Dagger;\": { \"codepoints\": [8225], \"characters\": \"\\u2021\" },\r\n  \"&daleth;\": { \"codepoints\": [8504], \"characters\": \"\\u2138\" },\r\n  \"&darr;\": { \"codepoints\": [8595], \"characters\": \"\\u2193\" },\r\n  \"&Darr;\": { \"codepoints\": [8609], \"characters\": \"\\u21A1\" },\r\n  \"&dArr;\": { \"codepoints\": [8659], \"characters\": \"\\u21D3\" },\r\n  \"&dash;\": { \"codepoints\": [8208], \"characters\": \"\\u2010\" },\r\n  \"&Dashv;\": { \"codepoints\": [10980], \"characters\": \"\\u2AE4\" },\r\n  \"&dashv;\": { \"codepoints\": [8867], \"characters\": \"\\u22A3\" },\r\n  \"&dbkarow;\": { \"codepoints\": [10511], \"characters\": \"\\u290F\" },\r\n  \"&dblac;\": { \"codepoints\": [733], \"characters\": \"\\u02DD\" },\r\n  \"&Dcaron;\": { \"codepoints\": [270], \"characters\": \"\\u010E\" },\r\n  \"&dcaron;\": { \"codepoints\": [271], \"characters\": \"\\u010F\" },\r\n  \"&Dcy;\": { \"codepoints\": [1044], \"characters\": \"\\u0414\" },\r\n  \"&dcy;\": { \"codepoints\": [1076], \"characters\": \"\\u0434\" },\r\n  \"&ddagger;\": { \"codepoints\": [8225], \"characters\": \"\\u2021\" },\r\n  \"&ddarr;\": { \"codepoints\": [8650], \"characters\": \"\\u21CA\" },\r\n  \"&DD;\": { \"codepoints\": [8517], \"characters\": \"\\u2145\" },\r\n  \"&dd;\": { \"codepoints\": [8518], \"characters\": \"\\u2146\" },\r\n  \"&DDotrahd;\": { \"codepoints\": [10513], \"characters\": \"\\u2911\" },\r\n  \"&ddotseq;\": { \"codepoints\": [10871], \"characters\": \"\\u2A77\" },\r\n  \"&deg;\": { \"codepoints\": [176], \"characters\": \"\\u00B0\" },\r\n  \"&deg\": { \"codepoints\": [176], \"characters\": \"\\u00B0\" },\r\n  \"&Del;\": { \"codepoints\": [8711], \"characters\": \"\\u2207\" },\r\n  \"&Delta;\": { \"codepoints\": [916], \"characters\": \"\\u0394\" },\r\n  \"&delta;\": { \"codepoints\": [948], \"characters\": \"\\u03B4\" },\r\n  \"&demptyv;\": { \"codepoints\": [10673], \"characters\": \"\\u29B1\" },\r\n  \"&dfisht;\": { \"codepoints\": [10623], \"characters\": \"\\u297F\" },\r\n  \"&Dfr;\": { \"codepoints\": [120071], \"characters\": \"\\uD835\\uDD07\" },\r\n  \"&dfr;\": { \"codepoints\": [120097], \"characters\": \"\\uD835\\uDD21\" },\r\n  \"&dHar;\": { \"codepoints\": [10597], \"characters\": \"\\u2965\" },\r\n  \"&dharl;\": { \"codepoints\": [8643], \"characters\": \"\\u21C3\" },\r\n  \"&dharr;\": { \"codepoints\": [8642], \"characters\": \"\\u21C2\" },\r\n  \"&DiacriticalAcute;\": { \"codepoints\": [180], \"characters\": \"\\u00B4\" },\r\n  \"&DiacriticalDot;\": { \"codepoints\": [729], \"characters\": \"\\u02D9\" },\r\n  \"&DiacriticalDoubleAcute;\": { \"codepoints\": [733], \"characters\": \"\\u02DD\" },\r\n  \"&DiacriticalGrave;\": { \"codepoints\": [96], \"characters\": \"\\u0060\" },\r\n  \"&DiacriticalTilde;\": { \"codepoints\": [732], \"characters\": \"\\u02DC\" },\r\n  \"&diam;\": { \"codepoints\": [8900], \"characters\": \"\\u22C4\" },\r\n  \"&diamond;\": { \"codepoints\": [8900], \"characters\": \"\\u22C4\" },\r\n  \"&Diamond;\": { \"codepoints\": [8900], \"characters\": \"\\u22C4\" },\r\n  \"&diamondsuit;\": { \"codepoints\": [9830], \"characters\": \"\\u2666\" },\r\n  \"&diams;\": { \"codepoints\": [9830], \"characters\": \"\\u2666\" },\r\n  \"&die;\": { \"codepoints\": [168], \"characters\": \"\\u00A8\" },\r\n  \"&DifferentialD;\": { \"codepoints\": [8518], \"characters\": \"\\u2146\" },\r\n  \"&digamma;\": { \"codepoints\": [989], \"characters\": \"\\u03DD\" },\r\n  \"&disin;\": { \"codepoints\": [8946], \"characters\": \"\\u22F2\" },\r\n  \"&div;\": { \"codepoints\": [247], \"characters\": \"\\u00F7\" },\r\n  \"&divide;\": { \"codepoints\": [247], \"characters\": \"\\u00F7\" },\r\n  \"&divide\": { \"codepoints\": [247], \"characters\": \"\\u00F7\" },\r\n  \"&divideontimes;\": { \"codepoints\": [8903], \"characters\": \"\\u22C7\" },\r\n  \"&divonx;\": { \"codepoints\": [8903], \"characters\": \"\\u22C7\" },\r\n  \"&DJcy;\": { \"codepoints\": [1026], \"characters\": \"\\u0402\" },\r\n  \"&djcy;\": { \"codepoints\": [1106], \"characters\": \"\\u0452\" },\r\n  \"&dlcorn;\": { \"codepoints\": [8990], \"characters\": \"\\u231E\" },\r\n  \"&dlcrop;\": { \"codepoints\": [8973], \"characters\": \"\\u230D\" },\r\n  \"&dollar;\": { \"codepoints\": [36], \"characters\": \"\\u0024\" },\r\n  \"&Dopf;\": { \"codepoints\": [120123], \"characters\": \"\\uD835\\uDD3B\" },\r\n  \"&dopf;\": { \"codepoints\": [120149], \"characters\": \"\\uD835\\uDD55\" },\r\n  \"&Dot;\": { \"codepoints\": [168], \"characters\": \"\\u00A8\" },\r\n  \"&dot;\": { \"codepoints\": [729], \"characters\": \"\\u02D9\" },\r\n  \"&DotDot;\": { \"codepoints\": [8412], \"characters\": \"\\u20DC\" },\r\n  \"&doteq;\": { \"codepoints\": [8784], \"characters\": \"\\u2250\" },\r\n  \"&doteqdot;\": { \"codepoints\": [8785], \"characters\": \"\\u2251\" },\r\n  \"&DotEqual;\": { \"codepoints\": [8784], \"characters\": \"\\u2250\" },\r\n  \"&dotminus;\": { \"codepoints\": [8760], \"characters\": \"\\u2238\" },\r\n  \"&dotplus;\": { \"codepoints\": [8724], \"characters\": \"\\u2214\" },\r\n  \"&dotsquare;\": { \"codepoints\": [8865], \"characters\": \"\\u22A1\" },\r\n  \"&doublebarwedge;\": { \"codepoints\": [8966], \"characters\": \"\\u2306\" },\r\n  \"&DoubleContourIntegral;\": { \"codepoints\": [8751], \"characters\": \"\\u222F\" },\r\n  \"&DoubleDot;\": { \"codepoints\": [168], \"characters\": \"\\u00A8\" },\r\n  \"&DoubleDownArrow;\": { \"codepoints\": [8659], \"characters\": \"\\u21D3\" },\r\n  \"&DoubleLeftArrow;\": { \"codepoints\": [8656], \"characters\": \"\\u21D0\" },\r\n  \"&DoubleLeftRightArrow;\": { \"codepoints\": [8660], \"characters\": \"\\u21D4\" },\r\n  \"&DoubleLeftTee;\": { \"codepoints\": [10980], \"characters\": \"\\u2AE4\" },\r\n  \"&DoubleLongLeftArrow;\": { \"codepoints\": [10232], \"characters\": \"\\u27F8\" },\r\n  \"&DoubleLongLeftRightArrow;\": { \"codepoints\": [10234], \"characters\": \"\\u27FA\" },\r\n  \"&DoubleLongRightArrow;\": { \"codepoints\": [10233], \"characters\": \"\\u27F9\" },\r\n  \"&DoubleRightArrow;\": { \"codepoints\": [8658], \"characters\": \"\\u21D2\" },\r\n  \"&DoubleRightTee;\": { \"codepoints\": [8872], \"characters\": \"\\u22A8\" },\r\n  \"&DoubleUpArrow;\": { \"codepoints\": [8657], \"characters\": \"\\u21D1\" },\r\n  \"&DoubleUpDownArrow;\": { \"codepoints\": [8661], \"characters\": \"\\u21D5\" },\r\n  \"&DoubleVerticalBar;\": { \"codepoints\": [8741], \"characters\": \"\\u2225\" },\r\n  \"&DownArrowBar;\": { \"codepoints\": [10515], \"characters\": \"\\u2913\" },\r\n  \"&downarrow;\": { \"codepoints\": [8595], \"characters\": \"\\u2193\" },\r\n  \"&DownArrow;\": { \"codepoints\": [8595], \"characters\": \"\\u2193\" },\r\n  \"&Downarrow;\": { \"codepoints\": [8659], \"characters\": \"\\u21D3\" },\r\n  \"&DownArrowUpArrow;\": { \"codepoints\": [8693], \"characters\": \"\\u21F5\" },\r\n  \"&DownBreve;\": { \"codepoints\": [785], \"characters\": \"\\u0311\" },\r\n  \"&downdownarrows;\": { \"codepoints\": [8650], \"characters\": \"\\u21CA\" },\r\n  \"&downharpoonleft;\": { \"codepoints\": [8643], \"characters\": \"\\u21C3\" },\r\n  \"&downharpoonright;\": { \"codepoints\": [8642], \"characters\": \"\\u21C2\" },\r\n  \"&DownLeftRightVector;\": { \"codepoints\": [10576], \"characters\": \"\\u2950\" },\r\n  \"&DownLeftTeeVector;\": { \"codepoints\": [10590], \"characters\": \"\\u295E\" },\r\n  \"&DownLeftVectorBar;\": { \"codepoints\": [10582], \"characters\": \"\\u2956\" },\r\n  \"&DownLeftVector;\": { \"codepoints\": [8637], \"characters\": \"\\u21BD\" },\r\n  \"&DownRightTeeVector;\": { \"codepoints\": [10591], \"characters\": \"\\u295F\" },\r\n  \"&DownRightVectorBar;\": { \"codepoints\": [10583], \"characters\": \"\\u2957\" },\r\n  \"&DownRightVector;\": { \"codepoints\": [8641], \"characters\": \"\\u21C1\" },\r\n  \"&DownTeeArrow;\": { \"codepoints\": [8615], \"characters\": \"\\u21A7\" },\r\n  \"&DownTee;\": { \"codepoints\": [8868], \"characters\": \"\\u22A4\" },\r\n  \"&drbkarow;\": { \"codepoints\": [10512], \"characters\": \"\\u2910\" },\r\n  \"&drcorn;\": { \"codepoints\": [8991], \"characters\": \"\\u231F\" },\r\n  \"&drcrop;\": { \"codepoints\": [8972], \"characters\": \"\\u230C\" },\r\n  \"&Dscr;\": { \"codepoints\": [119967], \"characters\": \"\\uD835\\uDC9F\" },\r\n  \"&dscr;\": { \"codepoints\": [119993], \"characters\": \"\\uD835\\uDCB9\" },\r\n  \"&DScy;\": { \"codepoints\": [1029], \"characters\": \"\\u0405\" },\r\n  \"&dscy;\": { \"codepoints\": [1109], \"characters\": \"\\u0455\" },\r\n  \"&dsol;\": { \"codepoints\": [10742], \"characters\": \"\\u29F6\" },\r\n  \"&Dstrok;\": { \"codepoints\": [272], \"characters\": \"\\u0110\" },\r\n  \"&dstrok;\": { \"codepoints\": [273], \"characters\": \"\\u0111\" },\r\n  \"&dtdot;\": { \"codepoints\": [8945], \"characters\": \"\\u22F1\" },\r\n  \"&dtri;\": { \"codepoints\": [9663], \"characters\": \"\\u25BF\" },\r\n  \"&dtrif;\": { \"codepoints\": [9662], \"characters\": \"\\u25BE\" },\r\n  \"&duarr;\": { \"codepoints\": [8693], \"characters\": \"\\u21F5\" },\r\n  \"&duhar;\": { \"codepoints\": [10607], \"characters\": \"\\u296F\" },\r\n  \"&dwangle;\": { \"codepoints\": [10662], \"characters\": \"\\u29A6\" },\r\n  \"&DZcy;\": { \"codepoints\": [1039], \"characters\": \"\\u040F\" },\r\n  \"&dzcy;\": { \"codepoints\": [1119], \"characters\": \"\\u045F\" },\r\n  \"&dzigrarr;\": { \"codepoints\": [10239], \"characters\": \"\\u27FF\" },\r\n  \"&Eacute;\": { \"codepoints\": [201], \"characters\": \"\\u00C9\" },\r\n  \"&Eacute\": { \"codepoints\": [201], \"characters\": \"\\u00C9\" },\r\n  \"&eacute;\": { \"codepoints\": [233], \"characters\": \"\\u00E9\" },\r\n  \"&eacute\": { \"codepoints\": [233], \"characters\": \"\\u00E9\" },\r\n  \"&easter;\": { \"codepoints\": [10862], \"characters\": \"\\u2A6E\" },\r\n  \"&Ecaron;\": { \"codepoints\": [282], \"characters\": \"\\u011A\" },\r\n  \"&ecaron;\": { \"codepoints\": [283], \"characters\": \"\\u011B\" },\r\n  \"&Ecirc;\": { \"codepoints\": [202], \"characters\": \"\\u00CA\" },\r\n  \"&Ecirc\": { \"codepoints\": [202], \"characters\": \"\\u00CA\" },\r\n  \"&ecirc;\": { \"codepoints\": [234], \"characters\": \"\\u00EA\" },\r\n  \"&ecirc\": { \"codepoints\": [234], \"characters\": \"\\u00EA\" },\r\n  \"&ecir;\": { \"codepoints\": [8790], \"characters\": \"\\u2256\" },\r\n  \"&ecolon;\": { \"codepoints\": [8789], \"characters\": \"\\u2255\" },\r\n  \"&Ecy;\": { \"codepoints\": [1069], \"characters\": \"\\u042D\" },\r\n  \"&ecy;\": { \"codepoints\": [1101], \"characters\": \"\\u044D\" },\r\n  \"&eDDot;\": { \"codepoints\": [10871], \"characters\": \"\\u2A77\" },\r\n  \"&Edot;\": { \"codepoints\": [278], \"characters\": \"\\u0116\" },\r\n  \"&edot;\": { \"codepoints\": [279], \"characters\": \"\\u0117\" },\r\n  \"&eDot;\": { \"codepoints\": [8785], \"characters\": \"\\u2251\" },\r\n  \"&ee;\": { \"codepoints\": [8519], \"characters\": \"\\u2147\" },\r\n  \"&efDot;\": { \"codepoints\": [8786], \"characters\": \"\\u2252\" },\r\n  \"&Efr;\": { \"codepoints\": [120072], \"characters\": \"\\uD835\\uDD08\" },\r\n  \"&efr;\": { \"codepoints\": [120098], \"characters\": \"\\uD835\\uDD22\" },\r\n  \"&eg;\": { \"codepoints\": [10906], \"characters\": \"\\u2A9A\" },\r\n  \"&Egrave;\": { \"codepoints\": [200], \"characters\": \"\\u00C8\" },\r\n  \"&Egrave\": { \"codepoints\": [200], \"characters\": \"\\u00C8\" },\r\n  \"&egrave;\": { \"codepoints\": [232], \"characters\": \"\\u00E8\" },\r\n  \"&egrave\": { \"codepoints\": [232], \"characters\": \"\\u00E8\" },\r\n  \"&egs;\": { \"codepoints\": [10902], \"characters\": \"\\u2A96\" },\r\n  \"&egsdot;\": { \"codepoints\": [10904], \"characters\": \"\\u2A98\" },\r\n  \"&el;\": { \"codepoints\": [10905], \"characters\": \"\\u2A99\" },\r\n  \"&Element;\": { \"codepoints\": [8712], \"characters\": \"\\u2208\" },\r\n  \"&elinters;\": { \"codepoints\": [9191], \"characters\": \"\\u23E7\" },\r\n  \"&ell;\": { \"codepoints\": [8467], \"characters\": \"\\u2113\" },\r\n  \"&els;\": { \"codepoints\": [10901], \"characters\": \"\\u2A95\" },\r\n  \"&elsdot;\": { \"codepoints\": [10903], \"characters\": \"\\u2A97\" },\r\n  \"&Emacr;\": { \"codepoints\": [274], \"characters\": \"\\u0112\" },\r\n  \"&emacr;\": { \"codepoints\": [275], \"characters\": \"\\u0113\" },\r\n  \"&empty;\": { \"codepoints\": [8709], \"characters\": \"\\u2205\" },\r\n  \"&emptyset;\": { \"codepoints\": [8709], \"characters\": \"\\u2205\" },\r\n  \"&EmptySmallSquare;\": { \"codepoints\": [9723], \"characters\": \"\\u25FB\" },\r\n  \"&emptyv;\": { \"codepoints\": [8709], \"characters\": \"\\u2205\" },\r\n  \"&EmptyVerySmallSquare;\": { \"codepoints\": [9643], \"characters\": \"\\u25AB\" },\r\n  \"&emsp13;\": { \"codepoints\": [8196], \"characters\": \"\\u2004\" },\r\n  \"&emsp14;\": { \"codepoints\": [8197], \"characters\": \"\\u2005\" },\r\n  \"&emsp;\": { \"codepoints\": [8195], \"characters\": \"\\u2003\" },\r\n  \"&ENG;\": { \"codepoints\": [330], \"characters\": \"\\u014A\" },\r\n  \"&eng;\": { \"codepoints\": [331], \"characters\": \"\\u014B\" },\r\n  \"&ensp;\": { \"codepoints\": [8194], \"characters\": \"\\u2002\" },\r\n  \"&Eogon;\": { \"codepoints\": [280], \"characters\": \"\\u0118\" },\r\n  \"&eogon;\": { \"codepoints\": [281], \"characters\": \"\\u0119\" },\r\n  \"&Eopf;\": { \"codepoints\": [120124], \"characters\": \"\\uD835\\uDD3C\" },\r\n  \"&eopf;\": { \"codepoints\": [120150], \"characters\": \"\\uD835\\uDD56\" },\r\n  \"&epar;\": { \"codepoints\": [8917], \"characters\": \"\\u22D5\" },\r\n  \"&eparsl;\": { \"codepoints\": [10723], \"characters\": \"\\u29E3\" },\r\n  \"&eplus;\": { \"codepoints\": [10865], \"characters\": \"\\u2A71\" },\r\n  \"&epsi;\": { \"codepoints\": [949], \"characters\": \"\\u03B5\" },\r\n  \"&Epsilon;\": { \"codepoints\": [917], \"characters\": \"\\u0395\" },\r\n  \"&epsilon;\": { \"codepoints\": [949], \"characters\": \"\\u03B5\" },\r\n  \"&epsiv;\": { \"codepoints\": [1013], \"characters\": \"\\u03F5\" },\r\n  \"&eqcirc;\": { \"codepoints\": [8790], \"characters\": \"\\u2256\" },\r\n  \"&eqcolon;\": { \"codepoints\": [8789], \"characters\": \"\\u2255\" },\r\n  \"&eqsim;\": { \"codepoints\": [8770], \"characters\": \"\\u2242\" },\r\n  \"&eqslantgtr;\": { \"codepoints\": [10902], \"characters\": \"\\u2A96\" },\r\n  \"&eqslantless;\": { \"codepoints\": [10901], \"characters\": \"\\u2A95\" },\r\n  \"&Equal;\": { \"codepoints\": [10869], \"characters\": \"\\u2A75\" },\r\n  \"&equals;\": { \"codepoints\": [61], \"characters\": \"\\u003D\" },\r\n  \"&EqualTilde;\": { \"codepoints\": [8770], \"characters\": \"\\u2242\" },\r\n  \"&equest;\": { \"codepoints\": [8799], \"characters\": \"\\u225F\" },\r\n  \"&Equilibrium;\": { \"codepoints\": [8652], \"characters\": \"\\u21CC\" },\r\n  \"&equiv;\": { \"codepoints\": [8801], \"characters\": \"\\u2261\" },\r\n  \"&equivDD;\": { \"codepoints\": [10872], \"characters\": \"\\u2A78\" },\r\n  \"&eqvparsl;\": { \"codepoints\": [10725], \"characters\": \"\\u29E5\" },\r\n  \"&erarr;\": { \"codepoints\": [10609], \"characters\": \"\\u2971\" },\r\n  \"&erDot;\": { \"codepoints\": [8787], \"characters\": \"\\u2253\" },\r\n  \"&escr;\": { \"codepoints\": [8495], \"characters\": \"\\u212F\" },\r\n  \"&Escr;\": { \"codepoints\": [8496], \"characters\": \"\\u2130\" },\r\n  \"&esdot;\": { \"codepoints\": [8784], \"characters\": \"\\u2250\" },\r\n  \"&Esim;\": { \"codepoints\": [10867], \"characters\": \"\\u2A73\" },\r\n  \"&esim;\": { \"codepoints\": [8770], \"characters\": \"\\u2242\" },\r\n  \"&Eta;\": { \"codepoints\": [919], \"characters\": \"\\u0397\" },\r\n  \"&eta;\": { \"codepoints\": [951], \"characters\": \"\\u03B7\" },\r\n  \"&ETH;\": { \"codepoints\": [208], \"characters\": \"\\u00D0\" },\r\n  \"&ETH\": { \"codepoints\": [208], \"characters\": \"\\u00D0\" },\r\n  \"&eth;\": { \"codepoints\": [240], \"characters\": \"\\u00F0\" },\r\n  \"&eth\": { \"codepoints\": [240], \"characters\": \"\\u00F0\" },\r\n  \"&Euml;\": { \"codepoints\": [203], \"characters\": \"\\u00CB\" },\r\n  \"&Euml\": { \"codepoints\": [203], \"characters\": \"\\u00CB\" },\r\n  \"&euml;\": { \"codepoints\": [235], \"characters\": \"\\u00EB\" },\r\n  \"&euml\": { \"codepoints\": [235], \"characters\": \"\\u00EB\" },\r\n  \"&euro;\": { \"codepoints\": [8364], \"characters\": \"\\u20AC\" },\r\n  \"&excl;\": { \"codepoints\": [33], \"characters\": \"\\u0021\" },\r\n  \"&exist;\": { \"codepoints\": [8707], \"characters\": \"\\u2203\" },\r\n  \"&Exists;\": { \"codepoints\": [8707], \"characters\": \"\\u2203\" },\r\n  \"&expectation;\": { \"codepoints\": [8496], \"characters\": \"\\u2130\" },\r\n  \"&exponentiale;\": { \"codepoints\": [8519], \"characters\": \"\\u2147\" },\r\n  \"&ExponentialE;\": { \"codepoints\": [8519], \"characters\": \"\\u2147\" },\r\n  \"&fallingdotseq;\": { \"codepoints\": [8786], \"characters\": \"\\u2252\" },\r\n  \"&Fcy;\": { \"codepoints\": [1060], \"characters\": \"\\u0424\" },\r\n  \"&fcy;\": { \"codepoints\": [1092], \"characters\": \"\\u0444\" },\r\n  \"&female;\": { \"codepoints\": [9792], \"characters\": \"\\u2640\" },\r\n  \"&ffilig;\": { \"codepoints\": [64259], \"characters\": \"\\uFB03\" },\r\n  \"&fflig;\": { \"codepoints\": [64256], \"characters\": \"\\uFB00\" },\r\n  \"&ffllig;\": { \"codepoints\": [64260], \"characters\": \"\\uFB04\" },\r\n  \"&Ffr;\": { \"codepoints\": [120073], \"characters\": \"\\uD835\\uDD09\" },\r\n  \"&ffr;\": { \"codepoints\": [120099], \"characters\": \"\\uD835\\uDD23\" },\r\n  \"&filig;\": { \"codepoints\": [64257], \"characters\": \"\\uFB01\" },\r\n  \"&FilledSmallSquare;\": { \"codepoints\": [9724], \"characters\": \"\\u25FC\" },\r\n  \"&FilledVerySmallSquare;\": { \"codepoints\": [9642], \"characters\": \"\\u25AA\" },\r\n  \"&fjlig;\": { \"codepoints\": [102, 106], \"characters\": \"\\u0066\\u006A\" },\r\n  \"&flat;\": { \"codepoints\": [9837], \"characters\": \"\\u266D\" },\r\n  \"&fllig;\": { \"codepoints\": [64258], \"characters\": \"\\uFB02\" },\r\n  \"&fltns;\": { \"codepoints\": [9649], \"characters\": \"\\u25B1\" },\r\n  \"&fnof;\": { \"codepoints\": [402], \"characters\": \"\\u0192\" },\r\n  \"&Fopf;\": { \"codepoints\": [120125], \"characters\": \"\\uD835\\uDD3D\" },\r\n  \"&fopf;\": { \"codepoints\": [120151], \"characters\": \"\\uD835\\uDD57\" },\r\n  \"&forall;\": { \"codepoints\": [8704], \"characters\": \"\\u2200\" },\r\n  \"&ForAll;\": { \"codepoints\": [8704], \"characters\": \"\\u2200\" },\r\n  \"&fork;\": { \"codepoints\": [8916], \"characters\": \"\\u22D4\" },\r\n  \"&forkv;\": { \"codepoints\": [10969], \"characters\": \"\\u2AD9\" },\r\n  \"&Fouriertrf;\": { \"codepoints\": [8497], \"characters\": \"\\u2131\" },\r\n  \"&fpartint;\": { \"codepoints\": [10765], \"characters\": \"\\u2A0D\" },\r\n  \"&frac12;\": { \"codepoints\": [189], \"characters\": \"\\u00BD\" },\r\n  \"&frac12\": { \"codepoints\": [189], \"characters\": \"\\u00BD\" },\r\n  \"&frac13;\": { \"codepoints\": [8531], \"characters\": \"\\u2153\" },\r\n  \"&frac14;\": { \"codepoints\": [188], \"characters\": \"\\u00BC\" },\r\n  \"&frac14\": { \"codepoints\": [188], \"characters\": \"\\u00BC\" },\r\n  \"&frac15;\": { \"codepoints\": [8533], \"characters\": \"\\u2155\" },\r\n  \"&frac16;\": { \"codepoints\": [8537], \"characters\": \"\\u2159\" },\r\n  \"&frac18;\": { \"codepoints\": [8539], \"characters\": \"\\u215B\" },\r\n  \"&frac23;\": { \"codepoints\": [8532], \"characters\": \"\\u2154\" },\r\n  \"&frac25;\": { \"codepoints\": [8534], \"characters\": \"\\u2156\" },\r\n  \"&frac34;\": { \"codepoints\": [190], \"characters\": \"\\u00BE\" },\r\n  \"&frac34\": { \"codepoints\": [190], \"characters\": \"\\u00BE\" },\r\n  \"&frac35;\": { \"codepoints\": [8535], \"characters\": \"\\u2157\" },\r\n  \"&frac38;\": { \"codepoints\": [8540], \"characters\": \"\\u215C\" },\r\n  \"&frac45;\": { \"codepoints\": [8536], \"characters\": \"\\u2158\" },\r\n  \"&frac56;\": { \"codepoints\": [8538], \"characters\": \"\\u215A\" },\r\n  \"&frac58;\": { \"codepoints\": [8541], \"characters\": \"\\u215D\" },\r\n  \"&frac78;\": { \"codepoints\": [8542], \"characters\": \"\\u215E\" },\r\n  \"&frasl;\": { \"codepoints\": [8260], \"characters\": \"\\u2044\" },\r\n  \"&frown;\": { \"codepoints\": [8994], \"characters\": \"\\u2322\" },\r\n  \"&fscr;\": { \"codepoints\": [119995], \"characters\": \"\\uD835\\uDCBB\" },\r\n  \"&Fscr;\": { \"codepoints\": [8497], \"characters\": \"\\u2131\" },\r\n  \"&gacute;\": { \"codepoints\": [501], \"characters\": \"\\u01F5\" },\r\n  \"&Gamma;\": { \"codepoints\": [915], \"characters\": \"\\u0393\" },\r\n  \"&gamma;\": { \"codepoints\": [947], \"characters\": \"\\u03B3\" },\r\n  \"&Gammad;\": { \"codepoints\": [988], \"characters\": \"\\u03DC\" },\r\n  \"&gammad;\": { \"codepoints\": [989], \"characters\": \"\\u03DD\" },\r\n  \"&gap;\": { \"codepoints\": [10886], \"characters\": \"\\u2A86\" },\r\n  \"&Gbreve;\": { \"codepoints\": [286], \"characters\": \"\\u011E\" },\r\n  \"&gbreve;\": { \"codepoints\": [287], \"characters\": \"\\u011F\" },\r\n  \"&Gcedil;\": { \"codepoints\": [290], \"characters\": \"\\u0122\" },\r\n  \"&Gcirc;\": { \"codepoints\": [284], \"characters\": \"\\u011C\" },\r\n  \"&gcirc;\": { \"codepoints\": [285], \"characters\": \"\\u011D\" },\r\n  \"&Gcy;\": { \"codepoints\": [1043], \"characters\": \"\\u0413\" },\r\n  \"&gcy;\": { \"codepoints\": [1075], \"characters\": \"\\u0433\" },\r\n  \"&Gdot;\": { \"codepoints\": [288], \"characters\": \"\\u0120\" },\r\n  \"&gdot;\": { \"codepoints\": [289], \"characters\": \"\\u0121\" },\r\n  \"&ge;\": { \"codepoints\": [8805], \"characters\": \"\\u2265\" },\r\n  \"&gE;\": { \"codepoints\": [8807], \"characters\": \"\\u2267\" },\r\n  \"&gEl;\": { \"codepoints\": [10892], \"characters\": \"\\u2A8C\" },\r\n  \"&gel;\": { \"codepoints\": [8923], \"characters\": \"\\u22DB\" },\r\n  \"&geq;\": { \"codepoints\": [8805], \"characters\": \"\\u2265\" },\r\n  \"&geqq;\": { \"codepoints\": [8807], \"characters\": \"\\u2267\" },\r\n  \"&geqslant;\": { \"codepoints\": [10878], \"characters\": \"\\u2A7E\" },\r\n  \"&gescc;\": { \"codepoints\": [10921], \"characters\": \"\\u2AA9\" },\r\n  \"&ges;\": { \"codepoints\": [10878], \"characters\": \"\\u2A7E\" },\r\n  \"&gesdot;\": { \"codepoints\": [10880], \"characters\": \"\\u2A80\" },\r\n  \"&gesdoto;\": { \"codepoints\": [10882], \"characters\": \"\\u2A82\" },\r\n  \"&gesdotol;\": { \"codepoints\": [10884], \"characters\": \"\\u2A84\" },\r\n  \"&gesl;\": { \"codepoints\": [8923, 65024], \"characters\": \"\\u22DB\\uFE00\" },\r\n  \"&gesles;\": { \"codepoints\": [10900], \"characters\": \"\\u2A94\" },\r\n  \"&Gfr;\": { \"codepoints\": [120074], \"characters\": \"\\uD835\\uDD0A\" },\r\n  \"&gfr;\": { \"codepoints\": [120100], \"characters\": \"\\uD835\\uDD24\" },\r\n  \"&gg;\": { \"codepoints\": [8811], \"characters\": \"\\u226B\" },\r\n  \"&Gg;\": { \"codepoints\": [8921], \"characters\": \"\\u22D9\" },\r\n  \"&ggg;\": { \"codepoints\": [8921], \"characters\": \"\\u22D9\" },\r\n  \"&gimel;\": { \"codepoints\": [8503], \"characters\": \"\\u2137\" },\r\n  \"&GJcy;\": { \"codepoints\": [1027], \"characters\": \"\\u0403\" },\r\n  \"&gjcy;\": { \"codepoints\": [1107], \"characters\": \"\\u0453\" },\r\n  \"&gla;\": { \"codepoints\": [10917], \"characters\": \"\\u2AA5\" },\r\n  \"&gl;\": { \"codepoints\": [8823], \"characters\": \"\\u2277\" },\r\n  \"&glE;\": { \"codepoints\": [10898], \"characters\": \"\\u2A92\" },\r\n  \"&glj;\": { \"codepoints\": [10916], \"characters\": \"\\u2AA4\" },\r\n  \"&gnap;\": { \"codepoints\": [10890], \"characters\": \"\\u2A8A\" },\r\n  \"&gnapprox;\": { \"codepoints\": [10890], \"characters\": \"\\u2A8A\" },\r\n  \"&gne;\": { \"codepoints\": [10888], \"characters\": \"\\u2A88\" },\r\n  \"&gnE;\": { \"codepoints\": [8809], \"characters\": \"\\u2269\" },\r\n  \"&gneq;\": { \"codepoints\": [10888], \"characters\": \"\\u2A88\" },\r\n  \"&gneqq;\": { \"codepoints\": [8809], \"characters\": \"\\u2269\" },\r\n  \"&gnsim;\": { \"codepoints\": [8935], \"characters\": \"\\u22E7\" },\r\n  \"&Gopf;\": { \"codepoints\": [120126], \"characters\": \"\\uD835\\uDD3E\" },\r\n  \"&gopf;\": { \"codepoints\": [120152], \"characters\": \"\\uD835\\uDD58\" },\r\n  \"&grave;\": { \"codepoints\": [96], \"characters\": \"\\u0060\" },\r\n  \"&GreaterEqual;\": { \"codepoints\": [8805], \"characters\": \"\\u2265\" },\r\n  \"&GreaterEqualLess;\": { \"codepoints\": [8923], \"characters\": \"\\u22DB\" },\r\n  \"&GreaterFullEqual;\": { \"codepoints\": [8807], \"characters\": \"\\u2267\" },\r\n  \"&GreaterGreater;\": { \"codepoints\": [10914], \"characters\": \"\\u2AA2\" },\r\n  \"&GreaterLess;\": { \"codepoints\": [8823], \"characters\": \"\\u2277\" },\r\n  \"&GreaterSlantEqual;\": { \"codepoints\": [10878], \"characters\": \"\\u2A7E\" },\r\n  \"&GreaterTilde;\": { \"codepoints\": [8819], \"characters\": \"\\u2273\" },\r\n  \"&Gscr;\": { \"codepoints\": [119970], \"characters\": \"\\uD835\\uDCA2\" },\r\n  \"&gscr;\": { \"codepoints\": [8458], \"characters\": \"\\u210A\" },\r\n  \"&gsim;\": { \"codepoints\": [8819], \"characters\": \"\\u2273\" },\r\n  \"&gsime;\": { \"codepoints\": [10894], \"characters\": \"\\u2A8E\" },\r\n  \"&gsiml;\": { \"codepoints\": [10896], \"characters\": \"\\u2A90\" },\r\n  \"&gtcc;\": { \"codepoints\": [10919], \"characters\": \"\\u2AA7\" },\r\n  \"&gtcir;\": { \"codepoints\": [10874], \"characters\": \"\\u2A7A\" },\r\n  \"&gt;\": { \"codepoints\": [62], \"characters\": \"\\u003E\" },\r\n  \"&gt\": { \"codepoints\": [62], \"characters\": \"\\u003E\" },\r\n  \"&GT;\": { \"codepoints\": [62], \"characters\": \"\\u003E\" },\r\n  \"&GT\": { \"codepoints\": [62], \"characters\": \"\\u003E\" },\r\n  \"&Gt;\": { \"codepoints\": [8811], \"characters\": \"\\u226B\" },\r\n  \"&gtdot;\": { \"codepoints\": [8919], \"characters\": \"\\u22D7\" },\r\n  \"&gtlPar;\": { \"codepoints\": [10645], \"characters\": \"\\u2995\" },\r\n  \"&gtquest;\": { \"codepoints\": [10876], \"characters\": \"\\u2A7C\" },\r\n  \"&gtrapprox;\": { \"codepoints\": [10886], \"characters\": \"\\u2A86\" },\r\n  \"&gtrarr;\": { \"codepoints\": [10616], \"characters\": \"\\u2978\" },\r\n  \"&gtrdot;\": { \"codepoints\": [8919], \"characters\": \"\\u22D7\" },\r\n  \"&gtreqless;\": { \"codepoints\": [8923], \"characters\": \"\\u22DB\" },\r\n  \"&gtreqqless;\": { \"codepoints\": [10892], \"characters\": \"\\u2A8C\" },\r\n  \"&gtrless;\": { \"codepoints\": [8823], \"characters\": \"\\u2277\" },\r\n  \"&gtrsim;\": { \"codepoints\": [8819], \"characters\": \"\\u2273\" },\r\n  \"&gvertneqq;\": { \"codepoints\": [8809, 65024], \"characters\": \"\\u2269\\uFE00\" },\r\n  \"&gvnE;\": { \"codepoints\": [8809, 65024], \"characters\": \"\\u2269\\uFE00\" },\r\n  \"&Hacek;\": { \"codepoints\": [711], \"characters\": \"\\u02C7\" },\r\n  \"&hairsp;\": { \"codepoints\": [8202], \"characters\": \"\\u200A\" },\r\n  \"&half;\": { \"codepoints\": [189], \"characters\": \"\\u00BD\" },\r\n  \"&hamilt;\": { \"codepoints\": [8459], \"characters\": \"\\u210B\" },\r\n  \"&HARDcy;\": { \"codepoints\": [1066], \"characters\": \"\\u042A\" },\r\n  \"&hardcy;\": { \"codepoints\": [1098], \"characters\": \"\\u044A\" },\r\n  \"&harrcir;\": { \"codepoints\": [10568], \"characters\": \"\\u2948\" },\r\n  \"&harr;\": { \"codepoints\": [8596], \"characters\": \"\\u2194\" },\r\n  \"&hArr;\": { \"codepoints\": [8660], \"characters\": \"\\u21D4\" },\r\n  \"&harrw;\": { \"codepoints\": [8621], \"characters\": \"\\u21AD\" },\r\n  \"&Hat;\": { \"codepoints\": [94], \"characters\": \"\\u005E\" },\r\n  \"&hbar;\": { \"codepoints\": [8463], \"characters\": \"\\u210F\" },\r\n  \"&Hcirc;\": { \"codepoints\": [292], \"characters\": \"\\u0124\" },\r\n  \"&hcirc;\": { \"codepoints\": [293], \"characters\": \"\\u0125\" },\r\n  \"&hearts;\": { \"codepoints\": [9829], \"characters\": \"\\u2665\" },\r\n  \"&heartsuit;\": { \"codepoints\": [9829], \"characters\": \"\\u2665\" },\r\n  \"&hellip;\": { \"codepoints\": [8230], \"characters\": \"\\u2026\" },\r\n  \"&hercon;\": { \"codepoints\": [8889], \"characters\": \"\\u22B9\" },\r\n  \"&hfr;\": { \"codepoints\": [120101], \"characters\": \"\\uD835\\uDD25\" },\r\n  \"&Hfr;\": { \"codepoints\": [8460], \"characters\": \"\\u210C\" },\r\n  \"&HilbertSpace;\": { \"codepoints\": [8459], \"characters\": \"\\u210B\" },\r\n  \"&hksearow;\": { \"codepoints\": [10533], \"characters\": \"\\u2925\" },\r\n  \"&hkswarow;\": { \"codepoints\": [10534], \"characters\": \"\\u2926\" },\r\n  \"&hoarr;\": { \"codepoints\": [8703], \"characters\": \"\\u21FF\" },\r\n  \"&homtht;\": { \"codepoints\": [8763], \"characters\": \"\\u223B\" },\r\n  \"&hookleftarrow;\": { \"codepoints\": [8617], \"characters\": \"\\u21A9\" },\r\n  \"&hookrightarrow;\": { \"codepoints\": [8618], \"characters\": \"\\u21AA\" },\r\n  \"&hopf;\": { \"codepoints\": [120153], \"characters\": \"\\uD835\\uDD59\" },\r\n  \"&Hopf;\": { \"codepoints\": [8461], \"characters\": \"\\u210D\" },\r\n  \"&horbar;\": { \"codepoints\": [8213], \"characters\": \"\\u2015\" },\r\n  \"&HorizontalLine;\": { \"codepoints\": [9472], \"characters\": \"\\u2500\" },\r\n  \"&hscr;\": { \"codepoints\": [119997], \"characters\": \"\\uD835\\uDCBD\" },\r\n  \"&Hscr;\": { \"codepoints\": [8459], \"characters\": \"\\u210B\" },\r\n  \"&hslash;\": { \"codepoints\": [8463], \"characters\": \"\\u210F\" },\r\n  \"&Hstrok;\": { \"codepoints\": [294], \"characters\": \"\\u0126\" },\r\n  \"&hstrok;\": { \"codepoints\": [295], \"characters\": \"\\u0127\" },\r\n  \"&HumpDownHump;\": { \"codepoints\": [8782], \"characters\": \"\\u224E\" },\r\n  \"&HumpEqual;\": { \"codepoints\": [8783], \"characters\": \"\\u224F\" },\r\n  \"&hybull;\": { \"codepoints\": [8259], \"characters\": \"\\u2043\" },\r\n  \"&hyphen;\": { \"codepoints\": [8208], \"characters\": \"\\u2010\" },\r\n  \"&Iacute;\": { \"codepoints\": [205], \"characters\": \"\\u00CD\" },\r\n  \"&Iacute\": { \"codepoints\": [205], \"characters\": \"\\u00CD\" },\r\n  \"&iacute;\": { \"codepoints\": [237], \"characters\": \"\\u00ED\" },\r\n  \"&iacute\": { \"codepoints\": [237], \"characters\": \"\\u00ED\" },\r\n  \"&ic;\": { \"codepoints\": [8291], \"characters\": \"\\u2063\" },\r\n  \"&Icirc;\": { \"codepoints\": [206], \"characters\": \"\\u00CE\" },\r\n  \"&Icirc\": { \"codepoints\": [206], \"characters\": \"\\u00CE\" },\r\n  \"&icirc;\": { \"codepoints\": [238], \"characters\": \"\\u00EE\" },\r\n  \"&icirc\": { \"codepoints\": [238], \"characters\": \"\\u00EE\" },\r\n  \"&Icy;\": { \"codepoints\": [1048], \"characters\": \"\\u0418\" },\r\n  \"&icy;\": { \"codepoints\": [1080], \"characters\": \"\\u0438\" },\r\n  \"&Idot;\": { \"codepoints\": [304], \"characters\": \"\\u0130\" },\r\n  \"&IEcy;\": { \"codepoints\": [1045], \"characters\": \"\\u0415\" },\r\n  \"&iecy;\": { \"codepoints\": [1077], \"characters\": \"\\u0435\" },\r\n  \"&iexcl;\": { \"codepoints\": [161], \"characters\": \"\\u00A1\" },\r\n  \"&iexcl\": { \"codepoints\": [161], \"characters\": \"\\u00A1\" },\r\n  \"&iff;\": { \"codepoints\": [8660], \"characters\": \"\\u21D4\" },\r\n  \"&ifr;\": { \"codepoints\": [120102], \"characters\": \"\\uD835\\uDD26\" },\r\n  \"&Ifr;\": { \"codepoints\": [8465], \"characters\": \"\\u2111\" },\r\n  \"&Igrave;\": { \"codepoints\": [204], \"characters\": \"\\u00CC\" },\r\n  \"&Igrave\": { \"codepoints\": [204], \"characters\": \"\\u00CC\" },\r\n  \"&igrave;\": { \"codepoints\": [236], \"characters\": \"\\u00EC\" },\r\n  \"&igrave\": { \"codepoints\": [236], \"characters\": \"\\u00EC\" },\r\n  \"&ii;\": { \"codepoints\": [8520], \"characters\": \"\\u2148\" },\r\n  \"&iiiint;\": { \"codepoints\": [10764], \"characters\": \"\\u2A0C\" },\r\n  \"&iiint;\": { \"codepoints\": [8749], \"characters\": \"\\u222D\" },\r\n  \"&iinfin;\": { \"codepoints\": [10716], \"characters\": \"\\u29DC\" },\r\n  \"&iiota;\": { \"codepoints\": [8489], \"characters\": \"\\u2129\" },\r\n  \"&IJlig;\": { \"codepoints\": [306], \"characters\": \"\\u0132\" },\r\n  \"&ijlig;\": { \"codepoints\": [307], \"characters\": \"\\u0133\" },\r\n  \"&Imacr;\": { \"codepoints\": [298], \"characters\": \"\\u012A\" },\r\n  \"&imacr;\": { \"codepoints\": [299], \"characters\": \"\\u012B\" },\r\n  \"&image;\": { \"codepoints\": [8465], \"characters\": \"\\u2111\" },\r\n  \"&ImaginaryI;\": { \"codepoints\": [8520], \"characters\": \"\\u2148\" },\r\n  \"&imagline;\": { \"codepoints\": [8464], \"characters\": \"\\u2110\" },\r\n  \"&imagpart;\": { \"codepoints\": [8465], \"characters\": \"\\u2111\" },\r\n  \"&imath;\": { \"codepoints\": [305], \"characters\": \"\\u0131\" },\r\n  \"&Im;\": { \"codepoints\": [8465], \"characters\": \"\\u2111\" },\r\n  \"&imof;\": { \"codepoints\": [8887], \"characters\": \"\\u22B7\" },\r\n  \"&imped;\": { \"codepoints\": [437], \"characters\": \"\\u01B5\" },\r\n  \"&Implies;\": { \"codepoints\": [8658], \"characters\": \"\\u21D2\" },\r\n  \"&incare;\": { \"codepoints\": [8453], \"characters\": \"\\u2105\" },\r\n  \"&in;\": { \"codepoints\": [8712], \"characters\": \"\\u2208\" },\r\n  \"&infin;\": { \"codepoints\": [8734], \"characters\": \"\\u221E\" },\r\n  \"&infintie;\": { \"codepoints\": [10717], \"characters\": \"\\u29DD\" },\r\n  \"&inodot;\": { \"codepoints\": [305], \"characters\": \"\\u0131\" },\r\n  \"&intcal;\": { \"codepoints\": [8890], \"characters\": \"\\u22BA\" },\r\n  \"&int;\": { \"codepoints\": [8747], \"characters\": \"\\u222B\" },\r\n  \"&Int;\": { \"codepoints\": [8748], \"characters\": \"\\u222C\" },\r\n  \"&integers;\": { \"codepoints\": [8484], \"characters\": \"\\u2124\" },\r\n  \"&Integral;\": { \"codepoints\": [8747], \"characters\": \"\\u222B\" },\r\n  \"&intercal;\": { \"codepoints\": [8890], \"characters\": \"\\u22BA\" },\r\n  \"&Intersection;\": { \"codepoints\": [8898], \"characters\": \"\\u22C2\" },\r\n  \"&intlarhk;\": { \"codepoints\": [10775], \"characters\": \"\\u2A17\" },\r\n  \"&intprod;\": { \"codepoints\": [10812], \"characters\": \"\\u2A3C\" },\r\n  \"&InvisibleComma;\": { \"codepoints\": [8291], \"characters\": \"\\u2063\" },\r\n  \"&InvisibleTimes;\": { \"codepoints\": [8290], \"characters\": \"\\u2062\" },\r\n  \"&IOcy;\": { \"codepoints\": [1025], \"characters\": \"\\u0401\" },\r\n  \"&iocy;\": { \"codepoints\": [1105], \"characters\": \"\\u0451\" },\r\n  \"&Iogon;\": { \"codepoints\": [302], \"characters\": \"\\u012E\" },\r\n  \"&iogon;\": { \"codepoints\": [303], \"characters\": \"\\u012F\" },\r\n  \"&Iopf;\": { \"codepoints\": [120128], \"characters\": \"\\uD835\\uDD40\" },\r\n  \"&iopf;\": { \"codepoints\": [120154], \"characters\": \"\\uD835\\uDD5A\" },\r\n  \"&Iota;\": { \"codepoints\": [921], \"characters\": \"\\u0399\" },\r\n  \"&iota;\": { \"codepoints\": [953], \"characters\": \"\\u03B9\" },\r\n  \"&iprod;\": { \"codepoints\": [10812], \"characters\": \"\\u2A3C\" },\r\n  \"&iquest;\": { \"codepoints\": [191], \"characters\": \"\\u00BF\" },\r\n  \"&iquest\": { \"codepoints\": [191], \"characters\": \"\\u00BF\" },\r\n  \"&iscr;\": { \"codepoints\": [119998], \"characters\": \"\\uD835\\uDCBE\" },\r\n  \"&Iscr;\": { \"codepoints\": [8464], \"characters\": \"\\u2110\" },\r\n  \"&isin;\": { \"codepoints\": [8712], \"characters\": \"\\u2208\" },\r\n  \"&isindot;\": { \"codepoints\": [8949], \"characters\": \"\\u22F5\" },\r\n  \"&isinE;\": { \"codepoints\": [8953], \"characters\": \"\\u22F9\" },\r\n  \"&isins;\": { \"codepoints\": [8948], \"characters\": \"\\u22F4\" },\r\n  \"&isinsv;\": { \"codepoints\": [8947], \"characters\": \"\\u22F3\" },\r\n  \"&isinv;\": { \"codepoints\": [8712], \"characters\": \"\\u2208\" },\r\n  \"&it;\": { \"codepoints\": [8290], \"characters\": \"\\u2062\" },\r\n  \"&Itilde;\": { \"codepoints\": [296], \"characters\": \"\\u0128\" },\r\n  \"&itilde;\": { \"codepoints\": [297], \"characters\": \"\\u0129\" },\r\n  \"&Iukcy;\": { \"codepoints\": [1030], \"characters\": \"\\u0406\" },\r\n  \"&iukcy;\": { \"codepoints\": [1110], \"characters\": \"\\u0456\" },\r\n  \"&Iuml;\": { \"codepoints\": [207], \"characters\": \"\\u00CF\" },\r\n  \"&Iuml\": { \"codepoints\": [207], \"characters\": \"\\u00CF\" },\r\n  \"&iuml;\": { \"codepoints\": [239], \"characters\": \"\\u00EF\" },\r\n  \"&iuml\": { \"codepoints\": [239], \"characters\": \"\\u00EF\" },\r\n  \"&Jcirc;\": { \"codepoints\": [308], \"characters\": \"\\u0134\" },\r\n  \"&jcirc;\": { \"codepoints\": [309], \"characters\": \"\\u0135\" },\r\n  \"&Jcy;\": { \"codepoints\": [1049], \"characters\": \"\\u0419\" },\r\n  \"&jcy;\": { \"codepoints\": [1081], \"characters\": \"\\u0439\" },\r\n  \"&Jfr;\": { \"codepoints\": [120077], \"characters\": \"\\uD835\\uDD0D\" },\r\n  \"&jfr;\": { \"codepoints\": [120103], \"characters\": \"\\uD835\\uDD27\" },\r\n  \"&jmath;\": { \"codepoints\": [567], \"characters\": \"\\u0237\" },\r\n  \"&Jopf;\": { \"codepoints\": [120129], \"characters\": \"\\uD835\\uDD41\" },\r\n  \"&jopf;\": { \"codepoints\": [120155], \"characters\": \"\\uD835\\uDD5B\" },\r\n  \"&Jscr;\": { \"codepoints\": [119973], \"characters\": \"\\uD835\\uDCA5\" },\r\n  \"&jscr;\": { \"codepoints\": [119999], \"characters\": \"\\uD835\\uDCBF\" },\r\n  \"&Jsercy;\": { \"codepoints\": [1032], \"characters\": \"\\u0408\" },\r\n  \"&jsercy;\": { \"codepoints\": [1112], \"characters\": \"\\u0458\" },\r\n  \"&Jukcy;\": { \"codepoints\": [1028], \"characters\": \"\\u0404\" },\r\n  \"&jukcy;\": { \"codepoints\": [1108], \"characters\": \"\\u0454\" },\r\n  \"&Kappa;\": { \"codepoints\": [922], \"characters\": \"\\u039A\" },\r\n  \"&kappa;\": { \"codepoints\": [954], \"characters\": \"\\u03BA\" },\r\n  \"&kappav;\": { \"codepoints\": [1008], \"characters\": \"\\u03F0\" },\r\n  \"&Kcedil;\": { \"codepoints\": [310], \"characters\": \"\\u0136\" },\r\n  \"&kcedil;\": { \"codepoints\": [311], \"characters\": \"\\u0137\" },\r\n  \"&Kcy;\": { \"codepoints\": [1050], \"characters\": \"\\u041A\" },\r\n  \"&kcy;\": { \"codepoints\": [1082], \"characters\": \"\\u043A\" },\r\n  \"&Kfr;\": { \"codepoints\": [120078], \"characters\": \"\\uD835\\uDD0E\" },\r\n  \"&kfr;\": { \"codepoints\": [120104], \"characters\": \"\\uD835\\uDD28\" },\r\n  \"&kgreen;\": { \"codepoints\": [312], \"characters\": \"\\u0138\" },\r\n  \"&KHcy;\": { \"codepoints\": [1061], \"characters\": \"\\u0425\" },\r\n  \"&khcy;\": { \"codepoints\": [1093], \"characters\": \"\\u0445\" },\r\n  \"&KJcy;\": { \"codepoints\": [1036], \"characters\": \"\\u040C\" },\r\n  \"&kjcy;\": { \"codepoints\": [1116], \"characters\": \"\\u045C\" },\r\n  \"&Kopf;\": { \"codepoints\": [120130], \"characters\": \"\\uD835\\uDD42\" },\r\n  \"&kopf;\": { \"codepoints\": [120156], \"characters\": \"\\uD835\\uDD5C\" },\r\n  \"&Kscr;\": { \"codepoints\": [119974], \"characters\": \"\\uD835\\uDCA6\" },\r\n  \"&kscr;\": { \"codepoints\": [120000], \"characters\": \"\\uD835\\uDCC0\" },\r\n  \"&lAarr;\": { \"codepoints\": [8666], \"characters\": \"\\u21DA\" },\r\n  \"&Lacute;\": { \"codepoints\": [313], \"characters\": \"\\u0139\" },\r\n  \"&lacute;\": { \"codepoints\": [314], \"characters\": \"\\u013A\" },\r\n  \"&laemptyv;\": { \"codepoints\": [10676], \"characters\": \"\\u29B4\" },\r\n  \"&lagran;\": { \"codepoints\": [8466], \"characters\": \"\\u2112\" },\r\n  \"&Lambda;\": { \"codepoints\": [923], \"characters\": \"\\u039B\" },\r\n  \"&lambda;\": { \"codepoints\": [955], \"characters\": \"\\u03BB\" },\r\n  \"&lang;\": { \"codepoints\": [10216], \"characters\": \"\\u27E8\" },\r\n  \"&Lang;\": { \"codepoints\": [10218], \"characters\": \"\\u27EA\" },\r\n  \"&langd;\": { \"codepoints\": [10641], \"characters\": \"\\u2991\" },\r\n  \"&langle;\": { \"codepoints\": [10216], \"characters\": \"\\u27E8\" },\r\n  \"&lap;\": { \"codepoints\": [10885], \"characters\": \"\\u2A85\" },\r\n  \"&Laplacetrf;\": { \"codepoints\": [8466], \"characters\": \"\\u2112\" },\r\n  \"&laquo;\": { \"codepoints\": [171], \"characters\": \"\\u00AB\" },\r\n  \"&laquo\": { \"codepoints\": [171], \"characters\": \"\\u00AB\" },\r\n  \"&larrb;\": { \"codepoints\": [8676], \"characters\": \"\\u21E4\" },\r\n  \"&larrbfs;\": { \"codepoints\": [10527], \"characters\": \"\\u291F\" },\r\n  \"&larr;\": { \"codepoints\": [8592], \"characters\": \"\\u2190\" },\r\n  \"&Larr;\": { \"codepoints\": [8606], \"characters\": \"\\u219E\" },\r\n  \"&lArr;\": { \"codepoints\": [8656], \"characters\": \"\\u21D0\" },\r\n  \"&larrfs;\": { \"codepoints\": [10525], \"characters\": \"\\u291D\" },\r\n  \"&larrhk;\": { \"codepoints\": [8617], \"characters\": \"\\u21A9\" },\r\n  \"&larrlp;\": { \"codepoints\": [8619], \"characters\": \"\\u21AB\" },\r\n  \"&larrpl;\": { \"codepoints\": [10553], \"characters\": \"\\u2939\" },\r\n  \"&larrsim;\": { \"codepoints\": [10611], \"characters\": \"\\u2973\" },\r\n  \"&larrtl;\": { \"codepoints\": [8610], \"characters\": \"\\u21A2\" },\r\n  \"&latail;\": { \"codepoints\": [10521], \"characters\": \"\\u2919\" },\r\n  \"&lAtail;\": { \"codepoints\": [10523], \"characters\": \"\\u291B\" },\r\n  \"&lat;\": { \"codepoints\": [10923], \"characters\": \"\\u2AAB\" },\r\n  \"&late;\": { \"codepoints\": [10925], \"characters\": \"\\u2AAD\" },\r\n  \"&lates;\": { \"codepoints\": [10925, 65024], \"characters\": \"\\u2AAD\\uFE00\" },\r\n  \"&lbarr;\": { \"codepoints\": [10508], \"characters\": \"\\u290C\" },\r\n  \"&lBarr;\": { \"codepoints\": [10510], \"characters\": \"\\u290E\" },\r\n  \"&lbbrk;\": { \"codepoints\": [10098], \"characters\": \"\\u2772\" },\r\n  \"&lbrace;\": { \"codepoints\": [123], \"characters\": \"\\u007B\" },\r\n  \"&lbrack;\": { \"codepoints\": [91], \"characters\": \"\\u005B\" },\r\n  \"&lbrke;\": { \"codepoints\": [10635], \"characters\": \"\\u298B\" },\r\n  \"&lbrksld;\": { \"codepoints\": [10639], \"characters\": \"\\u298F\" },\r\n  \"&lbrkslu;\": { \"codepoints\": [10637], \"characters\": \"\\u298D\" },\r\n  \"&Lcaron;\": { \"codepoints\": [317], \"characters\": \"\\u013D\" },\r\n  \"&lcaron;\": { \"codepoints\": [318], \"characters\": \"\\u013E\" },\r\n  \"&Lcedil;\": { \"codepoints\": [315], \"characters\": \"\\u013B\" },\r\n  \"&lcedil;\": { \"codepoints\": [316], \"characters\": \"\\u013C\" },\r\n  \"&lceil;\": { \"codepoints\": [8968], \"characters\": \"\\u2308\" },\r\n  \"&lcub;\": { \"codepoints\": [123], \"characters\": \"\\u007B\" },\r\n  \"&Lcy;\": { \"codepoints\": [1051], \"characters\": \"\\u041B\" },\r\n  \"&lcy;\": { \"codepoints\": [1083], \"characters\": \"\\u043B\" },\r\n  \"&ldca;\": { \"codepoints\": [10550], \"characters\": \"\\u2936\" },\r\n  \"&ldquo;\": { \"codepoints\": [8220], \"characters\": \"\\u201C\" },\r\n  \"&ldquor;\": { \"codepoints\": [8222], \"characters\": \"\\u201E\" },\r\n  \"&ldrdhar;\": { \"codepoints\": [10599], \"characters\": \"\\u2967\" },\r\n  \"&ldrushar;\": { \"codepoints\": [10571], \"characters\": \"\\u294B\" },\r\n  \"&ldsh;\": { \"codepoints\": [8626], \"characters\": \"\\u21B2\" },\r\n  \"&le;\": { \"codepoints\": [8804], \"characters\": \"\\u2264\" },\r\n  \"&lE;\": { \"codepoints\": [8806], \"characters\": \"\\u2266\" },\r\n  \"&LeftAngleBracket;\": { \"codepoints\": [10216], \"characters\": \"\\u27E8\" },\r\n  \"&LeftArrowBar;\": { \"codepoints\": [8676], \"characters\": \"\\u21E4\" },\r\n  \"&leftarrow;\": { \"codepoints\": [8592], \"characters\": \"\\u2190\" },\r\n  \"&LeftArrow;\": { \"codepoints\": [8592], \"characters\": \"\\u2190\" },\r\n  \"&Leftarrow;\": { \"codepoints\": [8656], \"characters\": \"\\u21D0\" },\r\n  \"&LeftArrowRightArrow;\": { \"codepoints\": [8646], \"characters\": \"\\u21C6\" },\r\n  \"&leftarrowtail;\": { \"codepoints\": [8610], \"characters\": \"\\u21A2\" },\r\n  \"&LeftCeiling;\": { \"codepoints\": [8968], \"characters\": \"\\u2308\" },\r\n  \"&LeftDoubleBracket;\": { \"codepoints\": [10214], \"characters\": \"\\u27E6\" },\r\n  \"&LeftDownTeeVector;\": { \"codepoints\": [10593], \"characters\": \"\\u2961\" },\r\n  \"&LeftDownVectorBar;\": { \"codepoints\": [10585], \"characters\": \"\\u2959\" },\r\n  \"&LeftDownVector;\": { \"codepoints\": [8643], \"characters\": \"\\u21C3\" },\r\n  \"&LeftFloor;\": { \"codepoints\": [8970], \"characters\": \"\\u230A\" },\r\n  \"&leftharpoondown;\": { \"codepoints\": [8637], \"characters\": \"\\u21BD\" },\r\n  \"&leftharpoonup;\": { \"codepoints\": [8636], \"characters\": \"\\u21BC\" },\r\n  \"&leftleftarrows;\": { \"codepoints\": [8647], \"characters\": \"\\u21C7\" },\r\n  \"&leftrightarrow;\": { \"codepoints\": [8596], \"characters\": \"\\u2194\" },\r\n  \"&LeftRightArrow;\": { \"codepoints\": [8596], \"characters\": \"\\u2194\" },\r\n  \"&Leftrightarrow;\": { \"codepoints\": [8660], \"characters\": \"\\u21D4\" },\r\n  \"&leftrightarrows;\": { \"codepoints\": [8646], \"characters\": \"\\u21C6\" },\r\n  \"&leftrightharpoons;\": { \"codepoints\": [8651], \"characters\": \"\\u21CB\" },\r\n  \"&leftrightsquigarrow;\": { \"codepoints\": [8621], \"characters\": \"\\u21AD\" },\r\n  \"&LeftRightVector;\": { \"codepoints\": [10574], \"characters\": \"\\u294E\" },\r\n  \"&LeftTeeArrow;\": { \"codepoints\": [8612], \"characters\": \"\\u21A4\" },\r\n  \"&LeftTee;\": { \"codepoints\": [8867], \"characters\": \"\\u22A3\" },\r\n  \"&LeftTeeVector;\": { \"codepoints\": [10586], \"characters\": \"\\u295A\" },\r\n  \"&leftthreetimes;\": { \"codepoints\": [8907], \"characters\": \"\\u22CB\" },\r\n  \"&LeftTriangleBar;\": { \"codepoints\": [10703], \"characters\": \"\\u29CF\" },\r\n  \"&LeftTriangle;\": { \"codepoints\": [8882], \"characters\": \"\\u22B2\" },\r\n  \"&LeftTriangleEqual;\": { \"codepoints\": [8884], \"characters\": \"\\u22B4\" },\r\n  \"&LeftUpDownVector;\": { \"codepoints\": [10577], \"characters\": \"\\u2951\" },\r\n  \"&LeftUpTeeVector;\": { \"codepoints\": [10592], \"characters\": \"\\u2960\" },\r\n  \"&LeftUpVectorBar;\": { \"codepoints\": [10584], \"characters\": \"\\u2958\" },\r\n  \"&LeftUpVector;\": { \"codepoints\": [8639], \"characters\": \"\\u21BF\" },\r\n  \"&LeftVectorBar;\": { \"codepoints\": [10578], \"characters\": \"\\u2952\" },\r\n  \"&LeftVector;\": { \"codepoints\": [8636], \"characters\": \"\\u21BC\" },\r\n  \"&lEg;\": { \"codepoints\": [10891], \"characters\": \"\\u2A8B\" },\r\n  \"&leg;\": { \"codepoints\": [8922], \"characters\": \"\\u22DA\" },\r\n  \"&leq;\": { \"codepoints\": [8804], \"characters\": \"\\u2264\" },\r\n  \"&leqq;\": { \"codepoints\": [8806], \"characters\": \"\\u2266\" },\r\n  \"&leqslant;\": { \"codepoints\": [10877], \"characters\": \"\\u2A7D\" },\r\n  \"&lescc;\": { \"codepoints\": [10920], \"characters\": \"\\u2AA8\" },\r\n  \"&les;\": { \"codepoints\": [10877], \"characters\": \"\\u2A7D\" },\r\n  \"&lesdot;\": { \"codepoints\": [10879], \"characters\": \"\\u2A7F\" },\r\n  \"&lesdoto;\": { \"codepoints\": [10881], \"characters\": \"\\u2A81\" },\r\n  \"&lesdotor;\": { \"codepoints\": [10883], \"characters\": \"\\u2A83\" },\r\n  \"&lesg;\": { \"codepoints\": [8922, 65024], \"characters\": \"\\u22DA\\uFE00\" },\r\n  \"&lesges;\": { \"codepoints\": [10899], \"characters\": \"\\u2A93\" },\r\n  \"&lessapprox;\": { \"codepoints\": [10885], \"characters\": \"\\u2A85\" },\r\n  \"&lessdot;\": { \"codepoints\": [8918], \"characters\": \"\\u22D6\" },\r\n  \"&lesseqgtr;\": { \"codepoints\": [8922], \"characters\": \"\\u22DA\" },\r\n  \"&lesseqqgtr;\": { \"codepoints\": [10891], \"characters\": \"\\u2A8B\" },\r\n  \"&LessEqualGreater;\": { \"codepoints\": [8922], \"characters\": \"\\u22DA\" },\r\n  \"&LessFullEqual;\": { \"codepoints\": [8806], \"characters\": \"\\u2266\" },\r\n  \"&LessGreater;\": { \"codepoints\": [8822], \"characters\": \"\\u2276\" },\r\n  \"&lessgtr;\": { \"codepoints\": [8822], \"characters\": \"\\u2276\" },\r\n  \"&LessLess;\": { \"codepoints\": [10913], \"characters\": \"\\u2AA1\" },\r\n  \"&lesssim;\": { \"codepoints\": [8818], \"characters\": \"\\u2272\" },\r\n  \"&LessSlantEqual;\": { \"codepoints\": [10877], \"characters\": \"\\u2A7D\" },\r\n  \"&LessTilde;\": { \"codepoints\": [8818], \"characters\": \"\\u2272\" },\r\n  \"&lfisht;\": { \"codepoints\": [10620], \"characters\": \"\\u297C\" },\r\n  \"&lfloor;\": { \"codepoints\": [8970], \"characters\": \"\\u230A\" },\r\n  \"&Lfr;\": { \"codepoints\": [120079], \"characters\": \"\\uD835\\uDD0F\" },\r\n  \"&lfr;\": { \"codepoints\": [120105], \"characters\": \"\\uD835\\uDD29\" },\r\n  \"&lg;\": { \"codepoints\": [8822], \"characters\": \"\\u2276\" },\r\n  \"&lgE;\": { \"codepoints\": [10897], \"characters\": \"\\u2A91\" },\r\n  \"&lHar;\": { \"codepoints\": [10594], \"characters\": \"\\u2962\" },\r\n  \"&lhard;\": { \"codepoints\": [8637], \"characters\": \"\\u21BD\" },\r\n  \"&lharu;\": { \"codepoints\": [8636], \"characters\": \"\\u21BC\" },\r\n  \"&lharul;\": { \"codepoints\": [10602], \"characters\": \"\\u296A\" },\r\n  \"&lhblk;\": { \"codepoints\": [9604], \"characters\": \"\\u2584\" },\r\n  \"&LJcy;\": { \"codepoints\": [1033], \"characters\": \"\\u0409\" },\r\n  \"&ljcy;\": { \"codepoints\": [1113], \"characters\": \"\\u0459\" },\r\n  \"&llarr;\": { \"codepoints\": [8647], \"characters\": \"\\u21C7\" },\r\n  \"&ll;\": { \"codepoints\": [8810], \"characters\": \"\\u226A\" },\r\n  \"&Ll;\": { \"codepoints\": [8920], \"characters\": \"\\u22D8\" },\r\n  \"&llcorner;\": { \"codepoints\": [8990], \"characters\": \"\\u231E\" },\r\n  \"&Lleftarrow;\": { \"codepoints\": [8666], \"characters\": \"\\u21DA\" },\r\n  \"&llhard;\": { \"codepoints\": [10603], \"characters\": \"\\u296B\" },\r\n  \"&lltri;\": { \"codepoints\": [9722], \"characters\": \"\\u25FA\" },\r\n  \"&Lmidot;\": { \"codepoints\": [319], \"characters\": \"\\u013F\" },\r\n  \"&lmidot;\": { \"codepoints\": [320], \"characters\": \"\\u0140\" },\r\n  \"&lmoustache;\": { \"codepoints\": [9136], \"characters\": \"\\u23B0\" },\r\n  \"&lmoust;\": { \"codepoints\": [9136], \"characters\": \"\\u23B0\" },\r\n  \"&lnap;\": { \"codepoints\": [10889], \"characters\": \"\\u2A89\" },\r\n  \"&lnapprox;\": { \"codepoints\": [10889], \"characters\": \"\\u2A89\" },\r\n  \"&lne;\": { \"codepoints\": [10887], \"characters\": \"\\u2A87\" },\r\n  \"&lnE;\": { \"codepoints\": [8808], \"characters\": \"\\u2268\" },\r\n  \"&lneq;\": { \"codepoints\": [10887], \"characters\": \"\\u2A87\" },\r\n  \"&lneqq;\": { \"codepoints\": [8808], \"characters\": \"\\u2268\" },\r\n  \"&lnsim;\": { \"codepoints\": [8934], \"characters\": \"\\u22E6\" },\r\n  \"&loang;\": { \"codepoints\": [10220], \"characters\": \"\\u27EC\" },\r\n  \"&loarr;\": { \"codepoints\": [8701], \"characters\": \"\\u21FD\" },\r\n  \"&lobrk;\": { \"codepoints\": [10214], \"characters\": \"\\u27E6\" },\r\n  \"&longleftarrow;\": { \"codepoints\": [10229], \"characters\": \"\\u27F5\" },\r\n  \"&LongLeftArrow;\": { \"codepoints\": [10229], \"characters\": \"\\u27F5\" },\r\n  \"&Longleftarrow;\": { \"codepoints\": [10232], \"characters\": \"\\u27F8\" },\r\n  \"&longleftrightarrow;\": { \"codepoints\": [10231], \"characters\": \"\\u27F7\" },\r\n  \"&LongLeftRightArrow;\": { \"codepoints\": [10231], \"characters\": \"\\u27F7\" },\r\n  \"&Longleftrightarrow;\": { \"codepoints\": [10234], \"characters\": \"\\u27FA\" },\r\n  \"&longmapsto;\": { \"codepoints\": [10236], \"characters\": \"\\u27FC\" },\r\n  \"&longrightarrow;\": { \"codepoints\": [10230], \"characters\": \"\\u27F6\" },\r\n  \"&LongRightArrow;\": { \"codepoints\": [10230], \"characters\": \"\\u27F6\" },\r\n  \"&Longrightarrow;\": { \"codepoints\": [10233], \"characters\": \"\\u27F9\" },\r\n  \"&looparrowleft;\": { \"codepoints\": [8619], \"characters\": \"\\u21AB\" },\r\n  \"&looparrowright;\": { \"codepoints\": [8620], \"characters\": \"\\u21AC\" },\r\n  \"&lopar;\": { \"codepoints\": [10629], \"characters\": \"\\u2985\" },\r\n  \"&Lopf;\": { \"codepoints\": [120131], \"characters\": \"\\uD835\\uDD43\" },\r\n  \"&lopf;\": { \"codepoints\": [120157], \"characters\": \"\\uD835\\uDD5D\" },\r\n  \"&loplus;\": { \"codepoints\": [10797], \"characters\": \"\\u2A2D\" },\r\n  \"&lotimes;\": { \"codepoints\": [10804], \"characters\": \"\\u2A34\" },\r\n  \"&lowast;\": { \"codepoints\": [8727], \"characters\": \"\\u2217\" },\r\n  \"&lowbar;\": { \"codepoints\": [95], \"characters\": \"\\u005F\" },\r\n  \"&LowerLeftArrow;\": { \"codepoints\": [8601], \"characters\": \"\\u2199\" },\r\n  \"&LowerRightArrow;\": { \"codepoints\": [8600], \"characters\": \"\\u2198\" },\r\n  \"&loz;\": { \"codepoints\": [9674], \"characters\": \"\\u25CA\" },\r\n  \"&lozenge;\": { \"codepoints\": [9674], \"characters\": \"\\u25CA\" },\r\n  \"&lozf;\": { \"codepoints\": [10731], \"characters\": \"\\u29EB\" },\r\n  \"&lpar;\": { \"codepoints\": [40], \"characters\": \"\\u0028\" },\r\n  \"&lparlt;\": { \"codepoints\": [10643], \"characters\": \"\\u2993\" },\r\n  \"&lrarr;\": { \"codepoints\": [8646], \"characters\": \"\\u21C6\" },\r\n  \"&lrcorner;\": { \"codepoints\": [8991], \"characters\": \"\\u231F\" },\r\n  \"&lrhar;\": { \"codepoints\": [8651], \"characters\": \"\\u21CB\" },\r\n  \"&lrhard;\": { \"codepoints\": [10605], \"characters\": \"\\u296D\" },\r\n  \"&lrm;\": { \"codepoints\": [8206], \"characters\": \"\\u200E\" },\r\n  \"&lrtri;\": { \"codepoints\": [8895], \"characters\": \"\\u22BF\" },\r\n  \"&lsaquo;\": { \"codepoints\": [8249], \"characters\": \"\\u2039\" },\r\n  \"&lscr;\": { \"codepoints\": [120001], \"characters\": \"\\uD835\\uDCC1\" },\r\n  \"&Lscr;\": { \"codepoints\": [8466], \"characters\": \"\\u2112\" },\r\n  \"&lsh;\": { \"codepoints\": [8624], \"characters\": \"\\u21B0\" },\r\n  \"&Lsh;\": { \"codepoints\": [8624], \"characters\": \"\\u21B0\" },\r\n  \"&lsim;\": { \"codepoints\": [8818], \"characters\": \"\\u2272\" },\r\n  \"&lsime;\": { \"codepoints\": [10893], \"characters\": \"\\u2A8D\" },\r\n  \"&lsimg;\": { \"codepoints\": [10895], \"characters\": \"\\u2A8F\" },\r\n  \"&lsqb;\": { \"codepoints\": [91], \"characters\": \"\\u005B\" },\r\n  \"&lsquo;\": { \"codepoints\": [8216], \"characters\": \"\\u2018\" },\r\n  \"&lsquor;\": { \"codepoints\": [8218], \"characters\": \"\\u201A\" },\r\n  \"&Lstrok;\": { \"codepoints\": [321], \"characters\": \"\\u0141\" },\r\n  \"&lstrok;\": { \"codepoints\": [322], \"characters\": \"\\u0142\" },\r\n  \"&ltcc;\": { \"codepoints\": [10918], \"characters\": \"\\u2AA6\" },\r\n  \"&ltcir;\": { \"codepoints\": [10873], \"characters\": \"\\u2A79\" },\r\n  \"&lt;\": { \"codepoints\": [60], \"characters\": \"\\u003C\" },\r\n  \"&lt\": { \"codepoints\": [60], \"characters\": \"\\u003C\" },\r\n  \"&LT;\": { \"codepoints\": [60], \"characters\": \"\\u003C\" },\r\n  \"&LT\": { \"codepoints\": [60], \"characters\": \"\\u003C\" },\r\n  \"&Lt;\": { \"codepoints\": [8810], \"characters\": \"\\u226A\" },\r\n  \"&ltdot;\": { \"codepoints\": [8918], \"characters\": \"\\u22D6\" },\r\n  \"&lthree;\": { \"codepoints\": [8907], \"characters\": \"\\u22CB\" },\r\n  \"&ltimes;\": { \"codepoints\": [8905], \"characters\": \"\\u22C9\" },\r\n  \"&ltlarr;\": { \"codepoints\": [10614], \"characters\": \"\\u2976\" },\r\n  \"&ltquest;\": { \"codepoints\": [10875], \"characters\": \"\\u2A7B\" },\r\n  \"&ltri;\": { \"codepoints\": [9667], \"characters\": \"\\u25C3\" },\r\n  \"&ltrie;\": { \"codepoints\": [8884], \"characters\": \"\\u22B4\" },\r\n  \"&ltrif;\": { \"codepoints\": [9666], \"characters\": \"\\u25C2\" },\r\n  \"&ltrPar;\": { \"codepoints\": [10646], \"characters\": \"\\u2996\" },\r\n  \"&lurdshar;\": { \"codepoints\": [10570], \"characters\": \"\\u294A\" },\r\n  \"&luruhar;\": { \"codepoints\": [10598], \"characters\": \"\\u2966\" },\r\n  \"&lvertneqq;\": { \"codepoints\": [8808, 65024], \"characters\": \"\\u2268\\uFE00\" },\r\n  \"&lvnE;\": { \"codepoints\": [8808, 65024], \"characters\": \"\\u2268\\uFE00\" },\r\n  \"&macr;\": { \"codepoints\": [175], \"characters\": \"\\u00AF\" },\r\n  \"&macr\": { \"codepoints\": [175], \"characters\": \"\\u00AF\" },\r\n  \"&male;\": { \"codepoints\": [9794], \"characters\": \"\\u2642\" },\r\n  \"&malt;\": { \"codepoints\": [10016], \"characters\": \"\\u2720\" },\r\n  \"&maltese;\": { \"codepoints\": [10016], \"characters\": \"\\u2720\" },\r\n  \"&Map;\": { \"codepoints\": [10501], \"characters\": \"\\u2905\" },\r\n  \"&map;\": { \"codepoints\": [8614], \"characters\": \"\\u21A6\" },\r\n  \"&mapsto;\": { \"codepoints\": [8614], \"characters\": \"\\u21A6\" },\r\n  \"&mapstodown;\": { \"codepoints\": [8615], \"characters\": \"\\u21A7\" },\r\n  \"&mapstoleft;\": { \"codepoints\": [8612], \"characters\": \"\\u21A4\" },\r\n  \"&mapstoup;\": { \"codepoints\": [8613], \"characters\": \"\\u21A5\" },\r\n  \"&marker;\": { \"codepoints\": [9646], \"characters\": \"\\u25AE\" },\r\n  \"&mcomma;\": { \"codepoints\": [10793], \"characters\": \"\\u2A29\" },\r\n  \"&Mcy;\": { \"codepoints\": [1052], \"characters\": \"\\u041C\" },\r\n  \"&mcy;\": { \"codepoints\": [1084], \"characters\": \"\\u043C\" },\r\n  \"&mdash;\": { \"codepoints\": [8212], \"characters\": \"\\u2014\" },\r\n  \"&mDDot;\": { \"codepoints\": [8762], \"characters\": \"\\u223A\" },\r\n  \"&measuredangle;\": { \"codepoints\": [8737], \"characters\": \"\\u2221\" },\r\n  \"&MediumSpace;\": { \"codepoints\": [8287], \"characters\": \"\\u205F\" },\r\n  \"&Mellintrf;\": { \"codepoints\": [8499], \"characters\": \"\\u2133\" },\r\n  \"&Mfr;\": { \"codepoints\": [120080], \"characters\": \"\\uD835\\uDD10\" },\r\n  \"&mfr;\": { \"codepoints\": [120106], \"characters\": \"\\uD835\\uDD2A\" },\r\n  \"&mho;\": { \"codepoints\": [8487], \"characters\": \"\\u2127\" },\r\n  \"&micro;\": { \"codepoints\": [181], \"characters\": \"\\u00B5\" },\r\n  \"&micro\": { \"codepoints\": [181], \"characters\": \"\\u00B5\" },\r\n  \"&midast;\": { \"codepoints\": [42], \"characters\": \"\\u002A\" },\r\n  \"&midcir;\": { \"codepoints\": [10992], \"characters\": \"\\u2AF0\" },\r\n  \"&mid;\": { \"codepoints\": [8739], \"characters\": \"\\u2223\" },\r\n  \"&middot;\": { \"codepoints\": [183], \"characters\": \"\\u00B7\" },\r\n  \"&middot\": { \"codepoints\": [183], \"characters\": \"\\u00B7\" },\r\n  \"&minusb;\": { \"codepoints\": [8863], \"characters\": \"\\u229F\" },\r\n  \"&minus;\": { \"codepoints\": [8722], \"characters\": \"\\u2212\" },\r\n  \"&minusd;\": { \"codepoints\": [8760], \"characters\": \"\\u2238\" },\r\n  \"&minusdu;\": { \"codepoints\": [10794], \"characters\": \"\\u2A2A\" },\r\n  \"&MinusPlus;\": { \"codepoints\": [8723], \"characters\": \"\\u2213\" },\r\n  \"&mlcp;\": { \"codepoints\": [10971], \"characters\": \"\\u2ADB\" },\r\n  \"&mldr;\": { \"codepoints\": [8230], \"characters\": \"\\u2026\" },\r\n  \"&mnplus;\": { \"codepoints\": [8723], \"characters\": \"\\u2213\" },\r\n  \"&models;\": { \"codepoints\": [8871], \"characters\": \"\\u22A7\" },\r\n  \"&Mopf;\": { \"codepoints\": [120132], \"characters\": \"\\uD835\\uDD44\" },\r\n  \"&mopf;\": { \"codepoints\": [120158], \"characters\": \"\\uD835\\uDD5E\" },\r\n  \"&mp;\": { \"codepoints\": [8723], \"characters\": \"\\u2213\" },\r\n  \"&mscr;\": { \"codepoints\": [120002], \"characters\": \"\\uD835\\uDCC2\" },\r\n  \"&Mscr;\": { \"codepoints\": [8499], \"characters\": \"\\u2133\" },\r\n  \"&mstpos;\": { \"codepoints\": [8766], \"characters\": \"\\u223E\" },\r\n  \"&Mu;\": { \"codepoints\": [924], \"characters\": \"\\u039C\" },\r\n  \"&mu;\": { \"codepoints\": [956], \"characters\": \"\\u03BC\" },\r\n  \"&multimap;\": { \"codepoints\": [8888], \"characters\": \"\\u22B8\" },\r\n  \"&mumap;\": { \"codepoints\": [8888], \"characters\": \"\\u22B8\" },\r\n  \"&nabla;\": { \"codepoints\": [8711], \"characters\": \"\\u2207\" },\r\n  \"&Nacute;\": { \"codepoints\": [323], \"characters\": \"\\u0143\" },\r\n  \"&nacute;\": { \"codepoints\": [324], \"characters\": \"\\u0144\" },\r\n  \"&nang;\": { \"codepoints\": [8736, 8402], \"characters\": \"\\u2220\\u20D2\" },\r\n  \"&nap;\": { \"codepoints\": [8777], \"characters\": \"\\u2249\" },\r\n  \"&napE;\": { \"codepoints\": [10864, 824], \"characters\": \"\\u2A70\\u0338\" },\r\n  \"&napid;\": { \"codepoints\": [8779, 824], \"characters\": \"\\u224B\\u0338\" },\r\n  \"&napos;\": { \"codepoints\": [329], \"characters\": \"\\u0149\" },\r\n  \"&napprox;\": { \"codepoints\": [8777], \"characters\": \"\\u2249\" },\r\n  \"&natural;\": { \"codepoints\": [9838], \"characters\": \"\\u266E\" },\r\n  \"&naturals;\": { \"codepoints\": [8469], \"characters\": \"\\u2115\" },\r\n  \"&natur;\": { \"codepoints\": [9838], \"characters\": \"\\u266E\" },\r\n  \"&nbsp;\": { \"codepoints\": [160], \"characters\": \"\\u00A0\" },\r\n  \"&nbsp\": { \"codepoints\": [160], \"characters\": \"\\u00A0\" },\r\n  \"&nbump;\": { \"codepoints\": [8782, 824], \"characters\": \"\\u224E\\u0338\" },\r\n  \"&nbumpe;\": { \"codepoints\": [8783, 824], \"characters\": \"\\u224F\\u0338\" },\r\n  \"&ncap;\": { \"codepoints\": [10819], \"characters\": \"\\u2A43\" },\r\n  \"&Ncaron;\": { \"codepoints\": [327], \"characters\": \"\\u0147\" },\r\n  \"&ncaron;\": { \"codepoints\": [328], \"characters\": \"\\u0148\" },\r\n  \"&Ncedil;\": { \"codepoints\": [325], \"characters\": \"\\u0145\" },\r\n  \"&ncedil;\": { \"codepoints\": [326], \"characters\": \"\\u0146\" },\r\n  \"&ncong;\": { \"codepoints\": [8775], \"characters\": \"\\u2247\" },\r\n  \"&ncongdot;\": { \"codepoints\": [10861, 824], \"characters\": \"\\u2A6D\\u0338\" },\r\n  \"&ncup;\": { \"codepoints\": [10818], \"characters\": \"\\u2A42\" },\r\n  \"&Ncy;\": { \"codepoints\": [1053], \"characters\": \"\\u041D\" },\r\n  \"&ncy;\": { \"codepoints\": [1085], \"characters\": \"\\u043D\" },\r\n  \"&ndash;\": { \"codepoints\": [8211], \"characters\": \"\\u2013\" },\r\n  \"&nearhk;\": { \"codepoints\": [10532], \"characters\": \"\\u2924\" },\r\n  \"&nearr;\": { \"codepoints\": [8599], \"characters\": \"\\u2197\" },\r\n  \"&neArr;\": { \"codepoints\": [8663], \"characters\": \"\\u21D7\" },\r\n  \"&nearrow;\": { \"codepoints\": [8599], \"characters\": \"\\u2197\" },\r\n  \"&ne;\": { \"codepoints\": [8800], \"characters\": \"\\u2260\" },\r\n  \"&nedot;\": { \"codepoints\": [8784, 824], \"characters\": \"\\u2250\\u0338\" },\r\n  \"&NegativeMediumSpace;\": { \"codepoints\": [8203], \"characters\": \"\\u200B\" },\r\n  \"&NegativeThickSpace;\": { \"codepoints\": [8203], \"characters\": \"\\u200B\" },\r\n  \"&NegativeThinSpace;\": { \"codepoints\": [8203], \"characters\": \"\\u200B\" },\r\n  \"&NegativeVeryThinSpace;\": { \"codepoints\": [8203], \"characters\": \"\\u200B\" },\r\n  \"&nequiv;\": { \"codepoints\": [8802], \"characters\": \"\\u2262\" },\r\n  \"&nesear;\": { \"codepoints\": [10536], \"characters\": \"\\u2928\" },\r\n  \"&nesim;\": { \"codepoints\": [8770, 824], \"characters\": \"\\u2242\\u0338\" },\r\n  \"&NestedGreaterGreater;\": { \"codepoints\": [8811], \"characters\": \"\\u226B\" },\r\n  \"&NestedLessLess;\": { \"codepoints\": [8810], \"characters\": \"\\u226A\" },\r\n  \"&NewLine;\": { \"codepoints\": [10], \"characters\": \"\\u000A\" },\r\n  \"&nexist;\": { \"codepoints\": [8708], \"characters\": \"\\u2204\" },\r\n  \"&nexists;\": { \"codepoints\": [8708], \"characters\": \"\\u2204\" },\r\n  \"&Nfr;\": { \"codepoints\": [120081], \"characters\": \"\\uD835\\uDD11\" },\r\n  \"&nfr;\": { \"codepoints\": [120107], \"characters\": \"\\uD835\\uDD2B\" },\r\n  \"&ngE;\": { \"codepoints\": [8807, 824], \"characters\": \"\\u2267\\u0338\" },\r\n  \"&nge;\": { \"codepoints\": [8817], \"characters\": \"\\u2271\" },\r\n  \"&ngeq;\": { \"codepoints\": [8817], \"characters\": \"\\u2271\" },\r\n  \"&ngeqq;\": { \"codepoints\": [8807, 824], \"characters\": \"\\u2267\\u0338\" },\r\n  \"&ngeqslant;\": { \"codepoints\": [10878, 824], \"characters\": \"\\u2A7E\\u0338\" },\r\n  \"&nges;\": { \"codepoints\": [10878, 824], \"characters\": \"\\u2A7E\\u0338\" },\r\n  \"&nGg;\": { \"codepoints\": [8921, 824], \"characters\": \"\\u22D9\\u0338\" },\r\n  \"&ngsim;\": { \"codepoints\": [8821], \"characters\": \"\\u2275\" },\r\n  \"&nGt;\": { \"codepoints\": [8811, 8402], \"characters\": \"\\u226B\\u20D2\" },\r\n  \"&ngt;\": { \"codepoints\": [8815], \"characters\": \"\\u226F\" },\r\n  \"&ngtr;\": { \"codepoints\": [8815], \"characters\": \"\\u226F\" },\r\n  \"&nGtv;\": { \"codepoints\": [8811, 824], \"characters\": \"\\u226B\\u0338\" },\r\n  \"&nharr;\": { \"codepoints\": [8622], \"characters\": \"\\u21AE\" },\r\n  \"&nhArr;\": { \"codepoints\": [8654], \"characters\": \"\\u21CE\" },\r\n  \"&nhpar;\": { \"codepoints\": [10994], \"characters\": \"\\u2AF2\" },\r\n  \"&ni;\": { \"codepoints\": [8715], \"characters\": \"\\u220B\" },\r\n  \"&nis;\": { \"codepoints\": [8956], \"characters\": \"\\u22FC\" },\r\n  \"&nisd;\": { \"codepoints\": [8954], \"characters\": \"\\u22FA\" },\r\n  \"&niv;\": { \"codepoints\": [8715], \"characters\": \"\\u220B\" },\r\n  \"&NJcy;\": { \"codepoints\": [1034], \"characters\": \"\\u040A\" },\r\n  \"&njcy;\": { \"codepoints\": [1114], \"characters\": \"\\u045A\" },\r\n  \"&nlarr;\": { \"codepoints\": [8602], \"characters\": \"\\u219A\" },\r\n  \"&nlArr;\": { \"codepoints\": [8653], \"characters\": \"\\u21CD\" },\r\n  \"&nldr;\": { \"codepoints\": [8229], \"characters\": \"\\u2025\" },\r\n  \"&nlE;\": { \"codepoints\": [8806, 824], \"characters\": \"\\u2266\\u0338\" },\r\n  \"&nle;\": { \"codepoints\": [8816], \"characters\": \"\\u2270\" },\r\n  \"&nleftarrow;\": { \"codepoints\": [8602], \"characters\": \"\\u219A\" },\r\n  \"&nLeftarrow;\": { \"codepoints\": [8653], \"characters\": \"\\u21CD\" },\r\n  \"&nleftrightarrow;\": { \"codepoints\": [8622], \"characters\": \"\\u21AE\" },\r\n  \"&nLeftrightarrow;\": { \"codepoints\": [8654], \"characters\": \"\\u21CE\" },\r\n  \"&nleq;\": { \"codepoints\": [8816], \"characters\": \"\\u2270\" },\r\n  \"&nleqq;\": { \"codepoints\": [8806, 824], \"characters\": \"\\u2266\\u0338\" },\r\n  \"&nleqslant;\": { \"codepoints\": [10877, 824], \"characters\": \"\\u2A7D\\u0338\" },\r\n  \"&nles;\": { \"codepoints\": [10877, 824], \"characters\": \"\\u2A7D\\u0338\" },\r\n  \"&nless;\": { \"codepoints\": [8814], \"characters\": \"\\u226E\" },\r\n  \"&nLl;\": { \"codepoints\": [8920, 824], \"characters\": \"\\u22D8\\u0338\" },\r\n  \"&nlsim;\": { \"codepoints\": [8820], \"characters\": \"\\u2274\" },\r\n  \"&nLt;\": { \"codepoints\": [8810, 8402], \"characters\": \"\\u226A\\u20D2\" },\r\n  \"&nlt;\": { \"codepoints\": [8814], \"characters\": \"\\u226E\" },\r\n  \"&nltri;\": { \"codepoints\": [8938], \"characters\": \"\\u22EA\" },\r\n  \"&nltrie;\": { \"codepoints\": [8940], \"characters\": \"\\u22EC\" },\r\n  \"&nLtv;\": { \"codepoints\": [8810, 824], \"characters\": \"\\u226A\\u0338\" },\r\n  \"&nmid;\": { \"codepoints\": [8740], \"characters\": \"\\u2224\" },\r\n  \"&NoBreak;\": { \"codepoints\": [8288], \"characters\": \"\\u2060\" },\r\n  \"&NonBreakingSpace;\": { \"codepoints\": [160], \"characters\": \"\\u00A0\" },\r\n  \"&nopf;\": { \"codepoints\": [120159], \"characters\": \"\\uD835\\uDD5F\" },\r\n  \"&Nopf;\": { \"codepoints\": [8469], \"characters\": \"\\u2115\" },\r\n  \"&Not;\": { \"codepoints\": [10988], \"characters\": \"\\u2AEC\" },\r\n  \"&not;\": { \"codepoints\": [172], \"characters\": \"\\u00AC\" },\r\n  \"&not\": { \"codepoints\": [172], \"characters\": \"\\u00AC\" },\r\n  \"&NotCongruent;\": { \"codepoints\": [8802], \"characters\": \"\\u2262\" },\r\n  \"&NotCupCap;\": { \"codepoints\": [8813], \"characters\": \"\\u226D\" },\r\n  \"&NotDoubleVerticalBar;\": { \"codepoints\": [8742], \"characters\": \"\\u2226\" },\r\n  \"&NotElement;\": { \"codepoints\": [8713], \"characters\": \"\\u2209\" },\r\n  \"&NotEqual;\": { \"codepoints\": [8800], \"characters\": \"\\u2260\" },\r\n  \"&NotEqualTilde;\": { \"codepoints\": [8770, 824], \"characters\": \"\\u2242\\u0338\" },\r\n  \"&NotExists;\": { \"codepoints\": [8708], \"characters\": \"\\u2204\" },\r\n  \"&NotGreater;\": { \"codepoints\": [8815], \"characters\": \"\\u226F\" },\r\n  \"&NotGreaterEqual;\": { \"codepoints\": [8817], \"characters\": \"\\u2271\" },\r\n  \"&NotGreaterFullEqual;\": { \"codepoints\": [8807, 824], \"characters\": \"\\u2267\\u0338\" },\r\n  \"&NotGreaterGreater;\": { \"codepoints\": [8811, 824], \"characters\": \"\\u226B\\u0338\" },\r\n  \"&NotGreaterLess;\": { \"codepoints\": [8825], \"characters\": \"\\u2279\" },\r\n  \"&NotGreaterSlantEqual;\": { \"codepoints\": [10878, 824], \"characters\": \"\\u2A7E\\u0338\" },\r\n  \"&NotGreaterTilde;\": { \"codepoints\": [8821], \"characters\": \"\\u2275\" },\r\n  \"&NotHumpDownHump;\": { \"codepoints\": [8782, 824], \"characters\": \"\\u224E\\u0338\" },\r\n  \"&NotHumpEqual;\": { \"codepoints\": [8783, 824], \"characters\": \"\\u224F\\u0338\" },\r\n  \"&notin;\": { \"codepoints\": [8713], \"characters\": \"\\u2209\" },\r\n  \"&notindot;\": { \"codepoints\": [8949, 824], \"characters\": \"\\u22F5\\u0338\" },\r\n  \"&notinE;\": { \"codepoints\": [8953, 824], \"characters\": \"\\u22F9\\u0338\" },\r\n  \"&notinva;\": { \"codepoints\": [8713], \"characters\": \"\\u2209\" },\r\n  \"&notinvb;\": { \"codepoints\": [8951], \"characters\": \"\\u22F7\" },\r\n  \"&notinvc;\": { \"codepoints\": [8950], \"characters\": \"\\u22F6\" },\r\n  \"&NotLeftTriangleBar;\": { \"codepoints\": [10703, 824], \"characters\": \"\\u29CF\\u0338\" },\r\n  \"&NotLeftTriangle;\": { \"codepoints\": [8938], \"characters\": \"\\u22EA\" },\r\n  \"&NotLeftTriangleEqual;\": { \"codepoints\": [8940], \"characters\": \"\\u22EC\" },\r\n  \"&NotLess;\": { \"codepoints\": [8814], \"characters\": \"\\u226E\" },\r\n  \"&NotLessEqual;\": { \"codepoints\": [8816], \"characters\": \"\\u2270\" },\r\n  \"&NotLessGreater;\": { \"codepoints\": [8824], \"characters\": \"\\u2278\" },\r\n  \"&NotLessLess;\": { \"codepoints\": [8810, 824], \"characters\": \"\\u226A\\u0338\" },\r\n  \"&NotLessSlantEqual;\": { \"codepoints\": [10877, 824], \"characters\": \"\\u2A7D\\u0338\" },\r\n  \"&NotLessTilde;\": { \"codepoints\": [8820], \"characters\": \"\\u2274\" },\r\n  \"&NotNestedGreaterGreater;\": { \"codepoints\": [10914, 824], \"characters\": \"\\u2AA2\\u0338\" },\r\n  \"&NotNestedLessLess;\": { \"codepoints\": [10913, 824], \"characters\": \"\\u2AA1\\u0338\" },\r\n  \"&notni;\": { \"codepoints\": [8716], \"characters\": \"\\u220C\" },\r\n  \"&notniva;\": { \"codepoints\": [8716], \"characters\": \"\\u220C\" },\r\n  \"&notnivb;\": { \"codepoints\": [8958], \"characters\": \"\\u22FE\" },\r\n  \"&notnivc;\": { \"codepoints\": [8957], \"characters\": \"\\u22FD\" },\r\n  \"&NotPrecedes;\": { \"codepoints\": [8832], \"characters\": \"\\u2280\" },\r\n  \"&NotPrecedesEqual;\": { \"codepoints\": [10927, 824], \"characters\": \"\\u2AAF\\u0338\" },\r\n  \"&NotPrecedesSlantEqual;\": { \"codepoints\": [8928], \"characters\": \"\\u22E0\" },\r\n  \"&NotReverseElement;\": { \"codepoints\": [8716], \"characters\": \"\\u220C\" },\r\n  \"&NotRightTriangleBar;\": { \"codepoints\": [10704, 824], \"characters\": \"\\u29D0\\u0338\" },\r\n  \"&NotRightTriangle;\": { \"codepoints\": [8939], \"characters\": \"\\u22EB\" },\r\n  \"&NotRightTriangleEqual;\": { \"codepoints\": [8941], \"characters\": \"\\u22ED\" },\r\n  \"&NotSquareSubset;\": { \"codepoints\": [8847, 824], \"characters\": \"\\u228F\\u0338\" },\r\n  \"&NotSquareSubsetEqual;\": { \"codepoints\": [8930], \"characters\": \"\\u22E2\" },\r\n  \"&NotSquareSuperset;\": { \"codepoints\": [8848, 824], \"characters\": \"\\u2290\\u0338\" },\r\n  \"&NotSquareSupersetEqual;\": { \"codepoints\": [8931], \"characters\": \"\\u22E3\" },\r\n  \"&NotSubset;\": { \"codepoints\": [8834, 8402], \"characters\": \"\\u2282\\u20D2\" },\r\n  \"&NotSubsetEqual;\": { \"codepoints\": [8840], \"characters\": \"\\u2288\" },\r\n  \"&NotSucceeds;\": { \"codepoints\": [8833], \"characters\": \"\\u2281\" },\r\n  \"&NotSucceedsEqual;\": { \"codepoints\": [10928, 824], \"characters\": \"\\u2AB0\\u0338\" },\r\n  \"&NotSucceedsSlantEqual;\": { \"codepoints\": [8929], \"characters\": \"\\u22E1\" },\r\n  \"&NotSucceedsTilde;\": { \"codepoints\": [8831, 824], \"characters\": \"\\u227F\\u0338\" },\r\n  \"&NotSuperset;\": { \"codepoints\": [8835, 8402], \"characters\": \"\\u2283\\u20D2\" },\r\n  \"&NotSupersetEqual;\": { \"codepoints\": [8841], \"characters\": \"\\u2289\" },\r\n  \"&NotTilde;\": { \"codepoints\": [8769], \"characters\": \"\\u2241\" },\r\n  \"&NotTildeEqual;\": { \"codepoints\": [8772], \"characters\": \"\\u2244\" },\r\n  \"&NotTildeFullEqual;\": { \"codepoints\": [8775], \"characters\": \"\\u2247\" },\r\n  \"&NotTildeTilde;\": { \"codepoints\": [8777], \"characters\": \"\\u2249\" },\r\n  \"&NotVerticalBar;\": { \"codepoints\": [8740], \"characters\": \"\\u2224\" },\r\n  \"&nparallel;\": { \"codepoints\": [8742], \"characters\": \"\\u2226\" },\r\n  \"&npar;\": { \"codepoints\": [8742], \"characters\": \"\\u2226\" },\r\n  \"&nparsl;\": { \"codepoints\": [11005, 8421], \"characters\": \"\\u2AFD\\u20E5\" },\r\n  \"&npart;\": { \"codepoints\": [8706, 824], \"characters\": \"\\u2202\\u0338\" },\r\n  \"&npolint;\": { \"codepoints\": [10772], \"characters\": \"\\u2A14\" },\r\n  \"&npr;\": { \"codepoints\": [8832], \"characters\": \"\\u2280\" },\r\n  \"&nprcue;\": { \"codepoints\": [8928], \"characters\": \"\\u22E0\" },\r\n  \"&nprec;\": { \"codepoints\": [8832], \"characters\": \"\\u2280\" },\r\n  \"&npreceq;\": { \"codepoints\": [10927, 824], \"characters\": \"\\u2AAF\\u0338\" },\r\n  \"&npre;\": { \"codepoints\": [10927, 824], \"characters\": \"\\u2AAF\\u0338\" },\r\n  \"&nrarrc;\": { \"codepoints\": [10547, 824], \"characters\": \"\\u2933\\u0338\" },\r\n  \"&nrarr;\": { \"codepoints\": [8603], \"characters\": \"\\u219B\" },\r\n  \"&nrArr;\": { \"codepoints\": [8655], \"characters\": \"\\u21CF\" },\r\n  \"&nrarrw;\": { \"codepoints\": [8605, 824], \"characters\": \"\\u219D\\u0338\" },\r\n  \"&nrightarrow;\": { \"codepoints\": [8603], \"characters\": \"\\u219B\" },\r\n  \"&nRightarrow;\": { \"codepoints\": [8655], \"characters\": \"\\u21CF\" },\r\n  \"&nrtri;\": { \"codepoints\": [8939], \"characters\": \"\\u22EB\" },\r\n  \"&nrtrie;\": { \"codepoints\": [8941], \"characters\": \"\\u22ED\" },\r\n  \"&nsc;\": { \"codepoints\": [8833], \"characters\": \"\\u2281\" },\r\n  \"&nsccue;\": { \"codepoints\": [8929], \"characters\": \"\\u22E1\" },\r\n  \"&nsce;\": { \"codepoints\": [10928, 824], \"characters\": \"\\u2AB0\\u0338\" },\r\n  \"&Nscr;\": { \"codepoints\": [119977], \"characters\": \"\\uD835\\uDCA9\" },\r\n  \"&nscr;\": { \"codepoints\": [120003], \"characters\": \"\\uD835\\uDCC3\" },\r\n  \"&nshortmid;\": { \"codepoints\": [8740], \"characters\": \"\\u2224\" },\r\n  \"&nshortparallel;\": { \"codepoints\": [8742], \"characters\": \"\\u2226\" },\r\n  \"&nsim;\": { \"codepoints\": [8769], \"characters\": \"\\u2241\" },\r\n  \"&nsime;\": { \"codepoints\": [8772], \"characters\": \"\\u2244\" },\r\n  \"&nsimeq;\": { \"codepoints\": [8772], \"characters\": \"\\u2244\" },\r\n  \"&nsmid;\": { \"codepoints\": [8740], \"characters\": \"\\u2224\" },\r\n  \"&nspar;\": { \"codepoints\": [8742], \"characters\": \"\\u2226\" },\r\n  \"&nsqsube;\": { \"codepoints\": [8930], \"characters\": \"\\u22E2\" },\r\n  \"&nsqsupe;\": { \"codepoints\": [8931], \"characters\": \"\\u22E3\" },\r\n  \"&nsub;\": { \"codepoints\": [8836], \"characters\": \"\\u2284\" },\r\n  \"&nsubE;\": { \"codepoints\": [10949, 824], \"characters\": \"\\u2AC5\\u0338\" },\r\n  \"&nsube;\": { \"codepoints\": [8840], \"characters\": \"\\u2288\" },\r\n  \"&nsubset;\": { \"codepoints\": [8834, 8402], \"characters\": \"\\u2282\\u20D2\" },\r\n  \"&nsubseteq;\": { \"codepoints\": [8840], \"characters\": \"\\u2288\" },\r\n  \"&nsubseteqq;\": { \"codepoints\": [10949, 824], \"characters\": \"\\u2AC5\\u0338\" },\r\n  \"&nsucc;\": { \"codepoints\": [8833], \"characters\": \"\\u2281\" },\r\n  \"&nsucceq;\": { \"codepoints\": [10928, 824], \"characters\": \"\\u2AB0\\u0338\" },\r\n  \"&nsup;\": { \"codepoints\": [8837], \"characters\": \"\\u2285\" },\r\n  \"&nsupE;\": { \"codepoints\": [10950, 824], \"characters\": \"\\u2AC6\\u0338\" },\r\n  \"&nsupe;\": { \"codepoints\": [8841], \"characters\": \"\\u2289\" },\r\n  \"&nsupset;\": { \"codepoints\": [8835, 8402], \"characters\": \"\\u2283\\u20D2\" },\r\n  \"&nsupseteq;\": { \"codepoints\": [8841], \"characters\": \"\\u2289\" },\r\n  \"&nsupseteqq;\": { \"codepoints\": [10950, 824], \"characters\": \"\\u2AC6\\u0338\" },\r\n  \"&ntgl;\": { \"codepoints\": [8825], \"characters\": \"\\u2279\" },\r\n  \"&Ntilde;\": { \"codepoints\": [209], \"characters\": \"\\u00D1\" },\r\n  \"&Ntilde\": { \"codepoints\": [209], \"characters\": \"\\u00D1\" },\r\n  \"&ntilde;\": { \"codepoints\": [241], \"characters\": \"\\u00F1\" },\r\n  \"&ntilde\": { \"codepoints\": [241], \"characters\": \"\\u00F1\" },\r\n  \"&ntlg;\": { \"codepoints\": [8824], \"characters\": \"\\u2278\" },\r\n  \"&ntriangleleft;\": { \"codepoints\": [8938], \"characters\": \"\\u22EA\" },\r\n  \"&ntrianglelefteq;\": { \"codepoints\": [8940], \"characters\": \"\\u22EC\" },\r\n  \"&ntriangleright;\": { \"codepoints\": [8939], \"characters\": \"\\u22EB\" },\r\n  \"&ntrianglerighteq;\": { \"codepoints\": [8941], \"characters\": \"\\u22ED\" },\r\n  \"&Nu;\": { \"codepoints\": [925], \"characters\": \"\\u039D\" },\r\n  \"&nu;\": { \"codepoints\": [957], \"characters\": \"\\u03BD\" },\r\n  \"&num;\": { \"codepoints\": [35], \"characters\": \"\\u0023\" },\r\n  \"&numero;\": { \"codepoints\": [8470], \"characters\": \"\\u2116\" },\r\n  \"&numsp;\": { \"codepoints\": [8199], \"characters\": \"\\u2007\" },\r\n  \"&nvap;\": { \"codepoints\": [8781, 8402], \"characters\": \"\\u224D\\u20D2\" },\r\n  \"&nvdash;\": { \"codepoints\": [8876], \"characters\": \"\\u22AC\" },\r\n  \"&nvDash;\": { \"codepoints\": [8877], \"characters\": \"\\u22AD\" },\r\n  \"&nVdash;\": { \"codepoints\": [8878], \"characters\": \"\\u22AE\" },\r\n  \"&nVDash;\": { \"codepoints\": [8879], \"characters\": \"\\u22AF\" },\r\n  \"&nvge;\": { \"codepoints\": [8805, 8402], \"characters\": \"\\u2265\\u20D2\" },\r\n  \"&nvgt;\": { \"codepoints\": [62, 8402], \"characters\": \"\\u003E\\u20D2\" },\r\n  \"&nvHarr;\": { \"codepoints\": [10500], \"characters\": \"\\u2904\" },\r\n  \"&nvinfin;\": { \"codepoints\": [10718], \"characters\": \"\\u29DE\" },\r\n  \"&nvlArr;\": { \"codepoints\": [10498], \"characters\": \"\\u2902\" },\r\n  \"&nvle;\": { \"codepoints\": [8804, 8402], \"characters\": \"\\u2264\\u20D2\" },\r\n  \"&nvlt;\": { \"codepoints\": [60, 8402], \"characters\": \"\\u003C\\u20D2\" },\r\n  \"&nvltrie;\": { \"codepoints\": [8884, 8402], \"characters\": \"\\u22B4\\u20D2\" },\r\n  \"&nvrArr;\": { \"codepoints\": [10499], \"characters\": \"\\u2903\" },\r\n  \"&nvrtrie;\": { \"codepoints\": [8885, 8402], \"characters\": \"\\u22B5\\u20D2\" },\r\n  \"&nvsim;\": { \"codepoints\": [8764, 8402], \"characters\": \"\\u223C\\u20D2\" },\r\n  \"&nwarhk;\": { \"codepoints\": [10531], \"characters\": \"\\u2923\" },\r\n  \"&nwarr;\": { \"codepoints\": [8598], \"characters\": \"\\u2196\" },\r\n  \"&nwArr;\": { \"codepoints\": [8662], \"characters\": \"\\u21D6\" },\r\n  \"&nwarrow;\": { \"codepoints\": [8598], \"characters\": \"\\u2196\" },\r\n  \"&nwnear;\": { \"codepoints\": [10535], \"characters\": \"\\u2927\" },\r\n  \"&Oacute;\": { \"codepoints\": [211], \"characters\": \"\\u00D3\" },\r\n  \"&Oacute\": { \"codepoints\": [211], \"characters\": \"\\u00D3\" },\r\n  \"&oacute;\": { \"codepoints\": [243], \"characters\": \"\\u00F3\" },\r\n  \"&oacute\": { \"codepoints\": [243], \"characters\": \"\\u00F3\" },\r\n  \"&oast;\": { \"codepoints\": [8859], \"characters\": \"\\u229B\" },\r\n  \"&Ocirc;\": { \"codepoints\": [212], \"characters\": \"\\u00D4\" },\r\n  \"&Ocirc\": { \"codepoints\": [212], \"characters\": \"\\u00D4\" },\r\n  \"&ocirc;\": { \"codepoints\": [244], \"characters\": \"\\u00F4\" },\r\n  \"&ocirc\": { \"codepoints\": [244], \"characters\": \"\\u00F4\" },\r\n  \"&ocir;\": { \"codepoints\": [8858], \"characters\": \"\\u229A\" },\r\n  \"&Ocy;\": { \"codepoints\": [1054], \"characters\": \"\\u041E\" },\r\n  \"&ocy;\": { \"codepoints\": [1086], \"characters\": \"\\u043E\" },\r\n  \"&odash;\": { \"codepoints\": [8861], \"characters\": \"\\u229D\" },\r\n  \"&Odblac;\": { \"codepoints\": [336], \"characters\": \"\\u0150\" },\r\n  \"&odblac;\": { \"codepoints\": [337], \"characters\": \"\\u0151\" },\r\n  \"&odiv;\": { \"codepoints\": [10808], \"characters\": \"\\u2A38\" },\r\n  \"&odot;\": { \"codepoints\": [8857], \"characters\": \"\\u2299\" },\r\n  \"&odsold;\": { \"codepoints\": [10684], \"characters\": \"\\u29BC\" },\r\n  \"&OElig;\": { \"codepoints\": [338], \"characters\": \"\\u0152\" },\r\n  \"&oelig;\": { \"codepoints\": [339], \"characters\": \"\\u0153\" },\r\n  \"&ofcir;\": { \"codepoints\": [10687], \"characters\": \"\\u29BF\" },\r\n  \"&Ofr;\": { \"codepoints\": [120082], \"characters\": \"\\uD835\\uDD12\" },\r\n  \"&ofr;\": { \"codepoints\": [120108], \"characters\": \"\\uD835\\uDD2C\" },\r\n  \"&ogon;\": { \"codepoints\": [731], \"characters\": \"\\u02DB\" },\r\n  \"&Ograve;\": { \"codepoints\": [210], \"characters\": \"\\u00D2\" },\r\n  \"&Ograve\": { \"codepoints\": [210], \"characters\": \"\\u00D2\" },\r\n  \"&ograve;\": { \"codepoints\": [242], \"characters\": \"\\u00F2\" },\r\n  \"&ograve\": { \"codepoints\": [242], \"characters\": \"\\u00F2\" },\r\n  \"&ogt;\": { \"codepoints\": [10689], \"characters\": \"\\u29C1\" },\r\n  \"&ohbar;\": { \"codepoints\": [10677], \"characters\": \"\\u29B5\" },\r\n  \"&ohm;\": { \"codepoints\": [937], \"characters\": \"\\u03A9\" },\r\n  \"&oint;\": { \"codepoints\": [8750], \"characters\": \"\\u222E\" },\r\n  \"&olarr;\": { \"codepoints\": [8634], \"characters\": \"\\u21BA\" },\r\n  \"&olcir;\": { \"codepoints\": [10686], \"characters\": \"\\u29BE\" },\r\n  \"&olcross;\": { \"codepoints\": [10683], \"characters\": \"\\u29BB\" },\r\n  \"&oline;\": { \"codepoints\": [8254], \"characters\": \"\\u203E\" },\r\n  \"&olt;\": { \"codepoints\": [10688], \"characters\": \"\\u29C0\" },\r\n  \"&Omacr;\": { \"codepoints\": [332], \"characters\": \"\\u014C\" },\r\n  \"&omacr;\": { \"codepoints\": [333], \"characters\": \"\\u014D\" },\r\n  \"&Omega;\": { \"codepoints\": [937], \"characters\": \"\\u03A9\" },\r\n  \"&omega;\": { \"codepoints\": [969], \"characters\": \"\\u03C9\" },\r\n  \"&Omicron;\": { \"codepoints\": [927], \"characters\": \"\\u039F\" },\r\n  \"&omicron;\": { \"codepoints\": [959], \"characters\": \"\\u03BF\" },\r\n  \"&omid;\": { \"codepoints\": [10678], \"characters\": \"\\u29B6\" },\r\n  \"&ominus;\": { \"codepoints\": [8854], \"characters\": \"\\u2296\" },\r\n  \"&Oopf;\": { \"codepoints\": [120134], \"characters\": \"\\uD835\\uDD46\" },\r\n  \"&oopf;\": { \"codepoints\": [120160], \"characters\": \"\\uD835\\uDD60\" },\r\n  \"&opar;\": { \"codepoints\": [10679], \"characters\": \"\\u29B7\" },\r\n  \"&OpenCurlyDoubleQuote;\": { \"codepoints\": [8220], \"characters\": \"\\u201C\" },\r\n  \"&OpenCurlyQuote;\": { \"codepoints\": [8216], \"characters\": \"\\u2018\" },\r\n  \"&operp;\": { \"codepoints\": [10681], \"characters\": \"\\u29B9\" },\r\n  \"&oplus;\": { \"codepoints\": [8853], \"characters\": \"\\u2295\" },\r\n  \"&orarr;\": { \"codepoints\": [8635], \"characters\": \"\\u21BB\" },\r\n  \"&Or;\": { \"codepoints\": [10836], \"characters\": \"\\u2A54\" },\r\n  \"&or;\": { \"codepoints\": [8744], \"characters\": \"\\u2228\" },\r\n  \"&ord;\": { \"codepoints\": [10845], \"characters\": \"\\u2A5D\" },\r\n  \"&order;\": { \"codepoints\": [8500], \"characters\": \"\\u2134\" },\r\n  \"&orderof;\": { \"codepoints\": [8500], \"characters\": \"\\u2134\" },\r\n  \"&ordf;\": { \"codepoints\": [170], \"characters\": \"\\u00AA\" },\r\n  \"&ordf\": { \"codepoints\": [170], \"characters\": \"\\u00AA\" },\r\n  \"&ordm;\": { \"codepoints\": [186], \"characters\": \"\\u00BA\" },\r\n  \"&ordm\": { \"codepoints\": [186], \"characters\": \"\\u00BA\" },\r\n  \"&origof;\": { \"codepoints\": [8886], \"characters\": \"\\u22B6\" },\r\n  \"&oror;\": { \"codepoints\": [10838], \"characters\": \"\\u2A56\" },\r\n  \"&orslope;\": { \"codepoints\": [10839], \"characters\": \"\\u2A57\" },\r\n  \"&orv;\": { \"codepoints\": [10843], \"characters\": \"\\u2A5B\" },\r\n  \"&oS;\": { \"codepoints\": [9416], \"characters\": \"\\u24C8\" },\r\n  \"&Oscr;\": { \"codepoints\": [119978], \"characters\": \"\\uD835\\uDCAA\" },\r\n  \"&oscr;\": { \"codepoints\": [8500], \"characters\": \"\\u2134\" },\r\n  \"&Oslash;\": { \"codepoints\": [216], \"characters\": \"\\u00D8\" },\r\n  \"&Oslash\": { \"codepoints\": [216], \"characters\": \"\\u00D8\" },\r\n  \"&oslash;\": { \"codepoints\": [248], \"characters\": \"\\u00F8\" },\r\n  \"&oslash\": { \"codepoints\": [248], \"characters\": \"\\u00F8\" },\r\n  \"&osol;\": { \"codepoints\": [8856], \"characters\": \"\\u2298\" },\r\n  \"&Otilde;\": { \"codepoints\": [213], \"characters\": \"\\u00D5\" },\r\n  \"&Otilde\": { \"codepoints\": [213], \"characters\": \"\\u00D5\" },\r\n  \"&otilde;\": { \"codepoints\": [245], \"characters\": \"\\u00F5\" },\r\n  \"&otilde\": { \"codepoints\": [245], \"characters\": \"\\u00F5\" },\r\n  \"&otimesas;\": { \"codepoints\": [10806], \"characters\": \"\\u2A36\" },\r\n  \"&Otimes;\": { \"codepoints\": [10807], \"characters\": \"\\u2A37\" },\r\n  \"&otimes;\": { \"codepoints\": [8855], \"characters\": \"\\u2297\" },\r\n  \"&Ouml;\": { \"codepoints\": [214], \"characters\": \"\\u00D6\" },\r\n  \"&Ouml\": { \"codepoints\": [214], \"characters\": \"\\u00D6\" },\r\n  \"&ouml;\": { \"codepoints\": [246], \"characters\": \"\\u00F6\" },\r\n  \"&ouml\": { \"codepoints\": [246], \"characters\": \"\\u00F6\" },\r\n  \"&ovbar;\": { \"codepoints\": [9021], \"characters\": \"\\u233D\" },\r\n  \"&OverBar;\": { \"codepoints\": [8254], \"characters\": \"\\u203E\" },\r\n  \"&OverBrace;\": { \"codepoints\": [9182], \"characters\": \"\\u23DE\" },\r\n  \"&OverBracket;\": { \"codepoints\": [9140], \"characters\": \"\\u23B4\" },\r\n  \"&OverParenthesis;\": { \"codepoints\": [9180], \"characters\": \"\\u23DC\" },\r\n  \"&para;\": { \"codepoints\": [182], \"characters\": \"\\u00B6\" },\r\n  \"&para\": { \"codepoints\": [182], \"characters\": \"\\u00B6\" },\r\n  \"&parallel;\": { \"codepoints\": [8741], \"characters\": \"\\u2225\" },\r\n  \"&par;\": { \"codepoints\": [8741], \"characters\": \"\\u2225\" },\r\n  \"&parsim;\": { \"codepoints\": [10995], \"characters\": \"\\u2AF3\" },\r\n  \"&parsl;\": { \"codepoints\": [11005], \"characters\": \"\\u2AFD\" },\r\n  \"&part;\": { \"codepoints\": [8706], \"characters\": \"\\u2202\" },\r\n  \"&PartialD;\": { \"codepoints\": [8706], \"characters\": \"\\u2202\" },\r\n  \"&Pcy;\": { \"codepoints\": [1055], \"characters\": \"\\u041F\" },\r\n  \"&pcy;\": { \"codepoints\": [1087], \"characters\": \"\\u043F\" },\r\n  \"&percnt;\": { \"codepoints\": [37], \"characters\": \"\\u0025\" },\r\n  \"&period;\": { \"codepoints\": [46], \"characters\": \"\\u002E\" },\r\n  \"&permil;\": { \"codepoints\": [8240], \"characters\": \"\\u2030\" },\r\n  \"&perp;\": { \"codepoints\": [8869], \"characters\": \"\\u22A5\" },\r\n  \"&pertenk;\": { \"codepoints\": [8241], \"characters\": \"\\u2031\" },\r\n  \"&Pfr;\": { \"codepoints\": [120083], \"characters\": \"\\uD835\\uDD13\" },\r\n  \"&pfr;\": { \"codepoints\": [120109], \"characters\": \"\\uD835\\uDD2D\" },\r\n  \"&Phi;\": { \"codepoints\": [934], \"characters\": \"\\u03A6\" },\r\n  \"&phi;\": { \"codepoints\": [966], \"characters\": \"\\u03C6\" },\r\n  \"&phiv;\": { \"codepoints\": [981], \"characters\": \"\\u03D5\" },\r\n  \"&phmmat;\": { \"codepoints\": [8499], \"characters\": \"\\u2133\" },\r\n  \"&phone;\": { \"codepoints\": [9742], \"characters\": \"\\u260E\" },\r\n  \"&Pi;\": { \"codepoints\": [928], \"characters\": \"\\u03A0\" },\r\n  \"&pi;\": { \"codepoints\": [960], \"characters\": \"\\u03C0\" },\r\n  \"&pitchfork;\": { \"codepoints\": [8916], \"characters\": \"\\u22D4\" },\r\n  \"&piv;\": { \"codepoints\": [982], \"characters\": \"\\u03D6\" },\r\n  \"&planck;\": { \"codepoints\": [8463], \"characters\": \"\\u210F\" },\r\n  \"&planckh;\": { \"codepoints\": [8462], \"characters\": \"\\u210E\" },\r\n  \"&plankv;\": { \"codepoints\": [8463], \"characters\": \"\\u210F\" },\r\n  \"&plusacir;\": { \"codepoints\": [10787], \"characters\": \"\\u2A23\" },\r\n  \"&plusb;\": { \"codepoints\": [8862], \"characters\": \"\\u229E\" },\r\n  \"&pluscir;\": { \"codepoints\": [10786], \"characters\": \"\\u2A22\" },\r\n  \"&plus;\": { \"codepoints\": [43], \"characters\": \"\\u002B\" },\r\n  \"&plusdo;\": { \"codepoints\": [8724], \"characters\": \"\\u2214\" },\r\n  \"&plusdu;\": { \"codepoints\": [10789], \"characters\": \"\\u2A25\" },\r\n  \"&pluse;\": { \"codepoints\": [10866], \"characters\": \"\\u2A72\" },\r\n  \"&PlusMinus;\": { \"codepoints\": [177], \"characters\": \"\\u00B1\" },\r\n  \"&plusmn;\": { \"codepoints\": [177], \"characters\": \"\\u00B1\" },\r\n  \"&plusmn\": { \"codepoints\": [177], \"characters\": \"\\u00B1\" },\r\n  \"&plussim;\": { \"codepoints\": [10790], \"characters\": \"\\u2A26\" },\r\n  \"&plustwo;\": { \"codepoints\": [10791], \"characters\": \"\\u2A27\" },\r\n  \"&pm;\": { \"codepoints\": [177], \"characters\": \"\\u00B1\" },\r\n  \"&Poincareplane;\": { \"codepoints\": [8460], \"characters\": \"\\u210C\" },\r\n  \"&pointint;\": { \"codepoints\": [10773], \"characters\": \"\\u2A15\" },\r\n  \"&popf;\": { \"codepoints\": [120161], \"characters\": \"\\uD835\\uDD61\" },\r\n  \"&Popf;\": { \"codepoints\": [8473], \"characters\": \"\\u2119\" },\r\n  \"&pound;\": { \"codepoints\": [163], \"characters\": \"\\u00A3\" },\r\n  \"&pound\": { \"codepoints\": [163], \"characters\": \"\\u00A3\" },\r\n  \"&prap;\": { \"codepoints\": [10935], \"characters\": \"\\u2AB7\" },\r\n  \"&Pr;\": { \"codepoints\": [10939], \"characters\": \"\\u2ABB\" },\r\n  \"&pr;\": { \"codepoints\": [8826], \"characters\": \"\\u227A\" },\r\n  \"&prcue;\": { \"codepoints\": [8828], \"characters\": \"\\u227C\" },\r\n  \"&precapprox;\": { \"codepoints\": [10935], \"characters\": \"\\u2AB7\" },\r\n  \"&prec;\": { \"codepoints\": [8826], \"characters\": \"\\u227A\" },\r\n  \"&preccurlyeq;\": { \"codepoints\": [8828], \"characters\": \"\\u227C\" },\r\n  \"&Precedes;\": { \"codepoints\": [8826], \"characters\": \"\\u227A\" },\r\n  \"&PrecedesEqual;\": { \"codepoints\": [10927], \"characters\": \"\\u2AAF\" },\r\n  \"&PrecedesSlantEqual;\": { \"codepoints\": [8828], \"characters\": \"\\u227C\" },\r\n  \"&PrecedesTilde;\": { \"codepoints\": [8830], \"characters\": \"\\u227E\" },\r\n  \"&preceq;\": { \"codepoints\": [10927], \"characters\": \"\\u2AAF\" },\r\n  \"&precnapprox;\": { \"codepoints\": [10937], \"characters\": \"\\u2AB9\" },\r\n  \"&precneqq;\": { \"codepoints\": [10933], \"characters\": \"\\u2AB5\" },\r\n  \"&precnsim;\": { \"codepoints\": [8936], \"characters\": \"\\u22E8\" },\r\n  \"&pre;\": { \"codepoints\": [10927], \"characters\": \"\\u2AAF\" },\r\n  \"&prE;\": { \"codepoints\": [10931], \"characters\": \"\\u2AB3\" },\r\n  \"&precsim;\": { \"codepoints\": [8830], \"characters\": \"\\u227E\" },\r\n  \"&prime;\": { \"codepoints\": [8242], \"characters\": \"\\u2032\" },\r\n  \"&Prime;\": { \"codepoints\": [8243], \"characters\": \"\\u2033\" },\r\n  \"&primes;\": { \"codepoints\": [8473], \"characters\": \"\\u2119\" },\r\n  \"&prnap;\": { \"codepoints\": [10937], \"characters\": \"\\u2AB9\" },\r\n  \"&prnE;\": { \"codepoints\": [10933], \"characters\": \"\\u2AB5\" },\r\n  \"&prnsim;\": { \"codepoints\": [8936], \"characters\": \"\\u22E8\" },\r\n  \"&prod;\": { \"codepoints\": [8719], \"characters\": \"\\u220F\" },\r\n  \"&Product;\": { \"codepoints\": [8719], \"characters\": \"\\u220F\" },\r\n  \"&profalar;\": { \"codepoints\": [9006], \"characters\": \"\\u232E\" },\r\n  \"&profline;\": { \"codepoints\": [8978], \"characters\": \"\\u2312\" },\r\n  \"&profsurf;\": { \"codepoints\": [8979], \"characters\": \"\\u2313\" },\r\n  \"&prop;\": { \"codepoints\": [8733], \"characters\": \"\\u221D\" },\r\n  \"&Proportional;\": { \"codepoints\": [8733], \"characters\": \"\\u221D\" },\r\n  \"&Proportion;\": { \"codepoints\": [8759], \"characters\": \"\\u2237\" },\r\n  \"&propto;\": { \"codepoints\": [8733], \"characters\": \"\\u221D\" },\r\n  \"&prsim;\": { \"codepoints\": [8830], \"characters\": \"\\u227E\" },\r\n  \"&prurel;\": { \"codepoints\": [8880], \"characters\": \"\\u22B0\" },\r\n  \"&Pscr;\": { \"codepoints\": [119979], \"characters\": \"\\uD835\\uDCAB\" },\r\n  \"&pscr;\": { \"codepoints\": [120005], \"characters\": \"\\uD835\\uDCC5\" },\r\n  \"&Psi;\": { \"codepoints\": [936], \"characters\": \"\\u03A8\" },\r\n  \"&psi;\": { \"codepoints\": [968], \"characters\": \"\\u03C8\" },\r\n  \"&puncsp;\": { \"codepoints\": [8200], \"characters\": \"\\u2008\" },\r\n  \"&Qfr;\": { \"codepoints\": [120084], \"characters\": \"\\uD835\\uDD14\" },\r\n  \"&qfr;\": { \"codepoints\": [120110], \"characters\": \"\\uD835\\uDD2E\" },\r\n  \"&qint;\": { \"codepoints\": [10764], \"characters\": \"\\u2A0C\" },\r\n  \"&qopf;\": { \"codepoints\": [120162], \"characters\": \"\\uD835\\uDD62\" },\r\n  \"&Qopf;\": { \"codepoints\": [8474], \"characters\": \"\\u211A\" },\r\n  \"&qprime;\": { \"codepoints\": [8279], \"characters\": \"\\u2057\" },\r\n  \"&Qscr;\": { \"codepoints\": [119980], \"characters\": \"\\uD835\\uDCAC\" },\r\n  \"&qscr;\": { \"codepoints\": [120006], \"characters\": \"\\uD835\\uDCC6\" },\r\n  \"&quaternions;\": { \"codepoints\": [8461], \"characters\": \"\\u210D\" },\r\n  \"&quatint;\": { \"codepoints\": [10774], \"characters\": \"\\u2A16\" },\r\n  \"&quest;\": { \"codepoints\": [63], \"characters\": \"\\u003F\" },\r\n  \"&questeq;\": { \"codepoints\": [8799], \"characters\": \"\\u225F\" },\r\n  \"&quot;\": { \"codepoints\": [34], \"characters\": \"\\u0022\" },\r\n  \"&quot\": { \"codepoints\": [34], \"characters\": \"\\u0022\" },\r\n  \"&QUOT;\": { \"codepoints\": [34], \"characters\": \"\\u0022\" },\r\n  \"&QUOT\": { \"codepoints\": [34], \"characters\": \"\\u0022\" },\r\n  \"&rAarr;\": { \"codepoints\": [8667], \"characters\": \"\\u21DB\" },\r\n  \"&race;\": { \"codepoints\": [8765, 817], \"characters\": \"\\u223D\\u0331\" },\r\n  \"&Racute;\": { \"codepoints\": [340], \"characters\": \"\\u0154\" },\r\n  \"&racute;\": { \"codepoints\": [341], \"characters\": \"\\u0155\" },\r\n  \"&radic;\": { \"codepoints\": [8730], \"characters\": \"\\u221A\" },\r\n  \"&raemptyv;\": { \"codepoints\": [10675], \"characters\": \"\\u29B3\" },\r\n  \"&rang;\": { \"codepoints\": [10217], \"characters\": \"\\u27E9\" },\r\n  \"&Rang;\": { \"codepoints\": [10219], \"characters\": \"\\u27EB\" },\r\n  \"&rangd;\": { \"codepoints\": [10642], \"characters\": \"\\u2992\" },\r\n  \"&range;\": { \"codepoints\": [10661], \"characters\": \"\\u29A5\" },\r\n  \"&rangle;\": { \"codepoints\": [10217], \"characters\": \"\\u27E9\" },\r\n  \"&raquo;\": { \"codepoints\": [187], \"characters\": \"\\u00BB\" },\r\n  \"&raquo\": { \"codepoints\": [187], \"characters\": \"\\u00BB\" },\r\n  \"&rarrap;\": { \"codepoints\": [10613], \"characters\": \"\\u2975\" },\r\n  \"&rarrb;\": { \"codepoints\": [8677], \"characters\": \"\\u21E5\" },\r\n  \"&rarrbfs;\": { \"codepoints\": [10528], \"characters\": \"\\u2920\" },\r\n  \"&rarrc;\": { \"codepoints\": [10547], \"characters\": \"\\u2933\" },\r\n  \"&rarr;\": { \"codepoints\": [8594], \"characters\": \"\\u2192\" },\r\n  \"&Rarr;\": { \"codepoints\": [8608], \"characters\": \"\\u21A0\" },\r\n  \"&rArr;\": { \"codepoints\": [8658], \"characters\": \"\\u21D2\" },\r\n  \"&rarrfs;\": { \"codepoints\": [10526], \"characters\": \"\\u291E\" },\r\n  \"&rarrhk;\": { \"codepoints\": [8618], \"characters\": \"\\u21AA\" },\r\n  \"&rarrlp;\": { \"codepoints\": [8620], \"characters\": \"\\u21AC\" },\r\n  \"&rarrpl;\": { \"codepoints\": [10565], \"characters\": \"\\u2945\" },\r\n  \"&rarrsim;\": { \"codepoints\": [10612], \"characters\": \"\\u2974\" },\r\n  \"&Rarrtl;\": { \"codepoints\": [10518], \"characters\": \"\\u2916\" },\r\n  \"&rarrtl;\": { \"codepoints\": [8611], \"characters\": \"\\u21A3\" },\r\n  \"&rarrw;\": { \"codepoints\": [8605], \"characters\": \"\\u219D\" },\r\n  \"&ratail;\": { \"codepoints\": [10522], \"characters\": \"\\u291A\" },\r\n  \"&rAtail;\": { \"codepoints\": [10524], \"characters\": \"\\u291C\" },\r\n  \"&ratio;\": { \"codepoints\": [8758], \"characters\": \"\\u2236\" },\r\n  \"&rationals;\": { \"codepoints\": [8474], \"characters\": \"\\u211A\" },\r\n  \"&rbarr;\": { \"codepoints\": [10509], \"characters\": \"\\u290D\" },\r\n  \"&rBarr;\": { \"codepoints\": [10511], \"characters\": \"\\u290F\" },\r\n  \"&RBarr;\": { \"codepoints\": [10512], \"characters\": \"\\u2910\" },\r\n  \"&rbbrk;\": { \"codepoints\": [10099], \"characters\": \"\\u2773\" },\r\n  \"&rbrace;\": { \"codepoints\": [125], \"characters\": \"\\u007D\" },\r\n  \"&rbrack;\": { \"codepoints\": [93], \"characters\": \"\\u005D\" },\r\n  \"&rbrke;\": { \"codepoints\": [10636], \"characters\": \"\\u298C\" },\r\n  \"&rbrksld;\": { \"codepoints\": [10638], \"characters\": \"\\u298E\" },\r\n  \"&rbrkslu;\": { \"codepoints\": [10640], \"characters\": \"\\u2990\" },\r\n  \"&Rcaron;\": { \"codepoints\": [344], \"characters\": \"\\u0158\" },\r\n  \"&rcaron;\": { \"codepoints\": [345], \"characters\": \"\\u0159\" },\r\n  \"&Rcedil;\": { \"codepoints\": [342], \"characters\": \"\\u0156\" },\r\n  \"&rcedil;\": { \"codepoints\": [343], \"characters\": \"\\u0157\" },\r\n  \"&rceil;\": { \"codepoints\": [8969], \"characters\": \"\\u2309\" },\r\n  \"&rcub;\": { \"codepoints\": [125], \"characters\": \"\\u007D\" },\r\n  \"&Rcy;\": { \"codepoints\": [1056], \"characters\": \"\\u0420\" },\r\n  \"&rcy;\": { \"codepoints\": [1088], \"characters\": \"\\u0440\" },\r\n  \"&rdca;\": { \"codepoints\": [10551], \"characters\": \"\\u2937\" },\r\n  \"&rdldhar;\": { \"codepoints\": [10601], \"characters\": \"\\u2969\" },\r\n  \"&rdquo;\": { \"codepoints\": [8221], \"characters\": \"\\u201D\" },\r\n  \"&rdquor;\": { \"codepoints\": [8221], \"characters\": \"\\u201D\" },\r\n  \"&rdsh;\": { \"codepoints\": [8627], \"characters\": \"\\u21B3\" },\r\n  \"&real;\": { \"codepoints\": [8476], \"characters\": \"\\u211C\" },\r\n  \"&realine;\": { \"codepoints\": [8475], \"characters\": \"\\u211B\" },\r\n  \"&realpart;\": { \"codepoints\": [8476], \"characters\": \"\\u211C\" },\r\n  \"&reals;\": { \"codepoints\": [8477], \"characters\": \"\\u211D\" },\r\n  \"&Re;\": { \"codepoints\": [8476], \"characters\": \"\\u211C\" },\r\n  \"&rect;\": { \"codepoints\": [9645], \"characters\": \"\\u25AD\" },\r\n  \"&reg;\": { \"codepoints\": [174], \"characters\": \"\\u00AE\" },\r\n  \"&reg\": { \"codepoints\": [174], \"characters\": \"\\u00AE\" },\r\n  \"&REG;\": { \"codepoints\": [174], \"characters\": \"\\u00AE\" },\r\n  \"&REG\": { \"codepoints\": [174], \"characters\": \"\\u00AE\" },\r\n  \"&ReverseElement;\": { \"codepoints\": [8715], \"characters\": \"\\u220B\" },\r\n  \"&ReverseEquilibrium;\": { \"codepoints\": [8651], \"characters\": \"\\u21CB\" },\r\n  \"&ReverseUpEquilibrium;\": { \"codepoints\": [10607], \"characters\": \"\\u296F\" },\r\n  \"&rfisht;\": { \"codepoints\": [10621], \"characters\": \"\\u297D\" },\r\n  \"&rfloor;\": { \"codepoints\": [8971], \"characters\": \"\\u230B\" },\r\n  \"&rfr;\": { \"codepoints\": [120111], \"characters\": \"\\uD835\\uDD2F\" },\r\n  \"&Rfr;\": { \"codepoints\": [8476], \"characters\": \"\\u211C\" },\r\n  \"&rHar;\": { \"codepoints\": [10596], \"characters\": \"\\u2964\" },\r\n  \"&rhard;\": { \"codepoints\": [8641], \"characters\": \"\\u21C1\" },\r\n  \"&rharu;\": { \"codepoints\": [8640], \"characters\": \"\\u21C0\" },\r\n  \"&rharul;\": { \"codepoints\": [10604], \"characters\": \"\\u296C\" },\r\n  \"&Rho;\": { \"codepoints\": [929], \"characters\": \"\\u03A1\" },\r\n  \"&rho;\": { \"codepoints\": [961], \"characters\": \"\\u03C1\" },\r\n  \"&rhov;\": { \"codepoints\": [1009], \"characters\": \"\\u03F1\" },\r\n  \"&RightAngleBracket;\": { \"codepoints\": [10217], \"characters\": \"\\u27E9\" },\r\n  \"&RightArrowBar;\": { \"codepoints\": [8677], \"characters\": \"\\u21E5\" },\r\n  \"&rightarrow;\": { \"codepoints\": [8594], \"characters\": \"\\u2192\" },\r\n  \"&RightArrow;\": { \"codepoints\": [8594], \"characters\": \"\\u2192\" },\r\n  \"&Rightarrow;\": { \"codepoints\": [8658], \"characters\": \"\\u21D2\" },\r\n  \"&RightArrowLeftArrow;\": { \"codepoints\": [8644], \"characters\": \"\\u21C4\" },\r\n  \"&rightarrowtail;\": { \"codepoints\": [8611], \"characters\": \"\\u21A3\" },\r\n  \"&RightCeiling;\": { \"codepoints\": [8969], \"characters\": \"\\u2309\" },\r\n  \"&RightDoubleBracket;\": { \"codepoints\": [10215], \"characters\": \"\\u27E7\" },\r\n  \"&RightDownTeeVector;\": { \"codepoints\": [10589], \"characters\": \"\\u295D\" },\r\n  \"&RightDownVectorBar;\": { \"codepoints\": [10581], \"characters\": \"\\u2955\" },\r\n  \"&RightDownVector;\": { \"codepoints\": [8642], \"characters\": \"\\u21C2\" },\r\n  \"&RightFloor;\": { \"codepoints\": [8971], \"characters\": \"\\u230B\" },\r\n  \"&rightharpoondown;\": { \"codepoints\": [8641], \"characters\": \"\\u21C1\" },\r\n  \"&rightharpoonup;\": { \"codepoints\": [8640], \"characters\": \"\\u21C0\" },\r\n  \"&rightleftarrows;\": { \"codepoints\": [8644], \"characters\": \"\\u21C4\" },\r\n  \"&rightleftharpoons;\": { \"codepoints\": [8652], \"characters\": \"\\u21CC\" },\r\n  \"&rightrightarrows;\": { \"codepoints\": [8649], \"characters\": \"\\u21C9\" },\r\n  \"&rightsquigarrow;\": { \"codepoints\": [8605], \"characters\": \"\\u219D\" },\r\n  \"&RightTeeArrow;\": { \"codepoints\": [8614], \"characters\": \"\\u21A6\" },\r\n  \"&RightTee;\": { \"codepoints\": [8866], \"characters\": \"\\u22A2\" },\r\n  \"&RightTeeVector;\": { \"codepoints\": [10587], \"characters\": \"\\u295B\" },\r\n  \"&rightthreetimes;\": { \"codepoints\": [8908], \"characters\": \"\\u22CC\" },\r\n  \"&RightTriangleBar;\": { \"codepoints\": [10704], \"characters\": \"\\u29D0\" },\r\n  \"&RightTriangle;\": { \"codepoints\": [8883], \"characters\": \"\\u22B3\" },\r\n  \"&RightTriangleEqual;\": { \"codepoints\": [8885], \"characters\": \"\\u22B5\" },\r\n  \"&RightUpDownVector;\": { \"codepoints\": [10575], \"characters\": \"\\u294F\" },\r\n  \"&RightUpTeeVector;\": { \"codepoints\": [10588], \"characters\": \"\\u295C\" },\r\n  \"&RightUpVectorBar;\": { \"codepoints\": [10580], \"characters\": \"\\u2954\" },\r\n  \"&RightUpVector;\": { \"codepoints\": [8638], \"characters\": \"\\u21BE\" },\r\n  \"&RightVectorBar;\": { \"codepoints\": [10579], \"characters\": \"\\u2953\" },\r\n  \"&RightVector;\": { \"codepoints\": [8640], \"characters\": \"\\u21C0\" },\r\n  \"&ring;\": { \"codepoints\": [730], \"characters\": \"\\u02DA\" },\r\n  \"&risingdotseq;\": { \"codepoints\": [8787], \"characters\": \"\\u2253\" },\r\n  \"&rlarr;\": { \"codepoints\": [8644], \"characters\": \"\\u21C4\" },\r\n  \"&rlhar;\": { \"codepoints\": [8652], \"characters\": \"\\u21CC\" },\r\n  \"&rlm;\": { \"codepoints\": [8207], \"characters\": \"\\u200F\" },\r\n  \"&rmoustache;\": { \"codepoints\": [9137], \"characters\": \"\\u23B1\" },\r\n  \"&rmoust;\": { \"codepoints\": [9137], \"characters\": \"\\u23B1\" },\r\n  \"&rnmid;\": { \"codepoints\": [10990], \"characters\": \"\\u2AEE\" },\r\n  \"&roang;\": { \"codepoints\": [10221], \"characters\": \"\\u27ED\" },\r\n  \"&roarr;\": { \"codepoints\": [8702], \"characters\": \"\\u21FE\" },\r\n  \"&robrk;\": { \"codepoints\": [10215], \"characters\": \"\\u27E7\" },\r\n  \"&ropar;\": { \"codepoints\": [10630], \"characters\": \"\\u2986\" },\r\n  \"&ropf;\": { \"codepoints\": [120163], \"characters\": \"\\uD835\\uDD63\" },\r\n  \"&Ropf;\": { \"codepoints\": [8477], \"characters\": \"\\u211D\" },\r\n  \"&roplus;\": { \"codepoints\": [10798], \"characters\": \"\\u2A2E\" },\r\n  \"&rotimes;\": { \"codepoints\": [10805], \"characters\": \"\\u2A35\" },\r\n  \"&RoundImplies;\": { \"codepoints\": [10608], \"characters\": \"\\u2970\" },\r\n  \"&rpar;\": { \"codepoints\": [41], \"characters\": \"\\u0029\" },\r\n  \"&rpargt;\": { \"codepoints\": [10644], \"characters\": \"\\u2994\" },\r\n  \"&rppolint;\": { \"codepoints\": [10770], \"characters\": \"\\u2A12\" },\r\n  \"&rrarr;\": { \"codepoints\": [8649], \"characters\": \"\\u21C9\" },\r\n  \"&Rrightarrow;\": { \"codepoints\": [8667], \"characters\": \"\\u21DB\" },\r\n  \"&rsaquo;\": { \"codepoints\": [8250], \"characters\": \"\\u203A\" },\r\n  \"&rscr;\": { \"codepoints\": [120007], \"characters\": \"\\uD835\\uDCC7\" },\r\n  \"&Rscr;\": { \"codepoints\": [8475], \"characters\": \"\\u211B\" },\r\n  \"&rsh;\": { \"codepoints\": [8625], \"characters\": \"\\u21B1\" },\r\n  \"&Rsh;\": { \"codepoints\": [8625], \"characters\": \"\\u21B1\" },\r\n  \"&rsqb;\": { \"codepoints\": [93], \"characters\": \"\\u005D\" },\r\n  \"&rsquo;\": { \"codepoints\": [8217], \"characters\": \"\\u2019\" },\r\n  \"&rsquor;\": { \"codepoints\": [8217], \"characters\": \"\\u2019\" },\r\n  \"&rthree;\": { \"codepoints\": [8908], \"characters\": \"\\u22CC\" },\r\n  \"&rtimes;\": { \"codepoints\": [8906], \"characters\": \"\\u22CA\" },\r\n  \"&rtri;\": { \"codepoints\": [9657], \"characters\": \"\\u25B9\" },\r\n  \"&rtrie;\": { \"codepoints\": [8885], \"characters\": \"\\u22B5\" },\r\n  \"&rtrif;\": { \"codepoints\": [9656], \"characters\": \"\\u25B8\" },\r\n  \"&rtriltri;\": { \"codepoints\": [10702], \"characters\": \"\\u29CE\" },\r\n  \"&RuleDelayed;\": { \"codepoints\": [10740], \"characters\": \"\\u29F4\" },\r\n  \"&ruluhar;\": { \"codepoints\": [10600], \"characters\": \"\\u2968\" },\r\n  \"&rx;\": { \"codepoints\": [8478], \"characters\": \"\\u211E\" },\r\n  \"&Sacute;\": { \"codepoints\": [346], \"characters\": \"\\u015A\" },\r\n  \"&sacute;\": { \"codepoints\": [347], \"characters\": \"\\u015B\" },\r\n  \"&sbquo;\": { \"codepoints\": [8218], \"characters\": \"\\u201A\" },\r\n  \"&scap;\": { \"codepoints\": [10936], \"characters\": \"\\u2AB8\" },\r\n  \"&Scaron;\": { \"codepoints\": [352], \"characters\": \"\\u0160\" },\r\n  \"&scaron;\": { \"codepoints\": [353], \"characters\": \"\\u0161\" },\r\n  \"&Sc;\": { \"codepoints\": [10940], \"characters\": \"\\u2ABC\" },\r\n  \"&sc;\": { \"codepoints\": [8827], \"characters\": \"\\u227B\" },\r\n  \"&sccue;\": { \"codepoints\": [8829], \"characters\": \"\\u227D\" },\r\n  \"&sce;\": { \"codepoints\": [10928], \"characters\": \"\\u2AB0\" },\r\n  \"&scE;\": { \"codepoints\": [10932], \"characters\": \"\\u2AB4\" },\r\n  \"&Scedil;\": { \"codepoints\": [350], \"characters\": \"\\u015E\" },\r\n  \"&scedil;\": { \"codepoints\": [351], \"characters\": \"\\u015F\" },\r\n  \"&Scirc;\": { \"codepoints\": [348], \"characters\": \"\\u015C\" },\r\n  \"&scirc;\": { \"codepoints\": [349], \"characters\": \"\\u015D\" },\r\n  \"&scnap;\": { \"codepoints\": [10938], \"characters\": \"\\u2ABA\" },\r\n  \"&scnE;\": { \"codepoints\": [10934], \"characters\": \"\\u2AB6\" },\r\n  \"&scnsim;\": { \"codepoints\": [8937], \"characters\": \"\\u22E9\" },\r\n  \"&scpolint;\": { \"codepoints\": [10771], \"characters\": \"\\u2A13\" },\r\n  \"&scsim;\": { \"codepoints\": [8831], \"characters\": \"\\u227F\" },\r\n  \"&Scy;\": { \"codepoints\": [1057], \"characters\": \"\\u0421\" },\r\n  \"&scy;\": { \"codepoints\": [1089], \"characters\": \"\\u0441\" },\r\n  \"&sdotb;\": { \"codepoints\": [8865], \"characters\": \"\\u22A1\" },\r\n  \"&sdot;\": { \"codepoints\": [8901], \"characters\": \"\\u22C5\" },\r\n  \"&sdote;\": { \"codepoints\": [10854], \"characters\": \"\\u2A66\" },\r\n  \"&searhk;\": { \"codepoints\": [10533], \"characters\": \"\\u2925\" },\r\n  \"&searr;\": { \"codepoints\": [8600], \"characters\": \"\\u2198\" },\r\n  \"&seArr;\": { \"codepoints\": [8664], \"characters\": \"\\u21D8\" },\r\n  \"&searrow;\": { \"codepoints\": [8600], \"characters\": \"\\u2198\" },\r\n  \"&sect;\": { \"codepoints\": [167], \"characters\": \"\\u00A7\" },\r\n  \"&sect\": { \"codepoints\": [167], \"characters\": \"\\u00A7\" },\r\n  \"&semi;\": { \"codepoints\": [59], \"characters\": \"\\u003B\" },\r\n  \"&seswar;\": { \"codepoints\": [10537], \"characters\": \"\\u2929\" },\r\n  \"&setminus;\": { \"codepoints\": [8726], \"characters\": \"\\u2216\" },\r\n  \"&setmn;\": { \"codepoints\": [8726], \"characters\": \"\\u2216\" },\r\n  \"&sext;\": { \"codepoints\": [10038], \"characters\": \"\\u2736\" },\r\n  \"&Sfr;\": { \"codepoints\": [120086], \"characters\": \"\\uD835\\uDD16\" },\r\n  \"&sfr;\": { \"codepoints\": [120112], \"characters\": \"\\uD835\\uDD30\" },\r\n  \"&sfrown;\": { \"codepoints\": [8994], \"characters\": \"\\u2322\" },\r\n  \"&sharp;\": { \"codepoints\": [9839], \"characters\": \"\\u266F\" },\r\n  \"&SHCHcy;\": { \"codepoints\": [1065], \"characters\": \"\\u0429\" },\r\n  \"&shchcy;\": { \"codepoints\": [1097], \"characters\": \"\\u0449\" },\r\n  \"&SHcy;\": { \"codepoints\": [1064], \"characters\": \"\\u0428\" },\r\n  \"&shcy;\": { \"codepoints\": [1096], \"characters\": \"\\u0448\" },\r\n  \"&ShortDownArrow;\": { \"codepoints\": [8595], \"characters\": \"\\u2193\" },\r\n  \"&ShortLeftArrow;\": { \"codepoints\": [8592], \"characters\": \"\\u2190\" },\r\n  \"&shortmid;\": { \"codepoints\": [8739], \"characters\": \"\\u2223\" },\r\n  \"&shortparallel;\": { \"codepoints\": [8741], \"characters\": \"\\u2225\" },\r\n  \"&ShortRightArrow;\": { \"codepoints\": [8594], \"characters\": \"\\u2192\" },\r\n  \"&ShortUpArrow;\": { \"codepoints\": [8593], \"characters\": \"\\u2191\" },\r\n  \"&shy;\": { \"codepoints\": [173], \"characters\": \"\\u00AD\" },\r\n  \"&shy\": { \"codepoints\": [173], \"characters\": \"\\u00AD\" },\r\n  \"&Sigma;\": { \"codepoints\": [931], \"characters\": \"\\u03A3\" },\r\n  \"&sigma;\": { \"codepoints\": [963], \"characters\": \"\\u03C3\" },\r\n  \"&sigmaf;\": { \"codepoints\": [962], \"characters\": \"\\u03C2\" },\r\n  \"&sigmav;\": { \"codepoints\": [962], \"characters\": \"\\u03C2\" },\r\n  \"&sim;\": { \"codepoints\": [8764], \"characters\": \"\\u223C\" },\r\n  \"&simdot;\": { \"codepoints\": [10858], \"characters\": \"\\u2A6A\" },\r\n  \"&sime;\": { \"codepoints\": [8771], \"characters\": \"\\u2243\" },\r\n  \"&simeq;\": { \"codepoints\": [8771], \"characters\": \"\\u2243\" },\r\n  \"&simg;\": { \"codepoints\": [10910], \"characters\": \"\\u2A9E\" },\r\n  \"&simgE;\": { \"codepoints\": [10912], \"characters\": \"\\u2AA0\" },\r\n  \"&siml;\": { \"codepoints\": [10909], \"characters\": \"\\u2A9D\" },\r\n  \"&simlE;\": { \"codepoints\": [10911], \"characters\": \"\\u2A9F\" },\r\n  \"&simne;\": { \"codepoints\": [8774], \"characters\": \"\\u2246\" },\r\n  \"&simplus;\": { \"codepoints\": [10788], \"characters\": \"\\u2A24\" },\r\n  \"&simrarr;\": { \"codepoints\": [10610], \"characters\": \"\\u2972\" },\r\n  \"&slarr;\": { \"codepoints\": [8592], \"characters\": \"\\u2190\" },\r\n  \"&SmallCircle;\": { \"codepoints\": [8728], \"characters\": \"\\u2218\" },\r\n  \"&smallsetminus;\": { \"codepoints\": [8726], \"characters\": \"\\u2216\" },\r\n  \"&smashp;\": { \"codepoints\": [10803], \"characters\": \"\\u2A33\" },\r\n  \"&smeparsl;\": { \"codepoints\": [10724], \"characters\": \"\\u29E4\" },\r\n  \"&smid;\": { \"codepoints\": [8739], \"characters\": \"\\u2223\" },\r\n  \"&smile;\": { \"codepoints\": [8995], \"characters\": \"\\u2323\" },\r\n  \"&smt;\": { \"codepoints\": [10922], \"characters\": \"\\u2AAA\" },\r\n  \"&smte;\": { \"codepoints\": [10924], \"characters\": \"\\u2AAC\" },\r\n  \"&smtes;\": { \"codepoints\": [10924, 65024], \"characters\": \"\\u2AAC\\uFE00\" },\r\n  \"&SOFTcy;\": { \"codepoints\": [1068], \"characters\": \"\\u042C\" },\r\n  \"&softcy;\": { \"codepoints\": [1100], \"characters\": \"\\u044C\" },\r\n  \"&solbar;\": { \"codepoints\": [9023], \"characters\": \"\\u233F\" },\r\n  \"&solb;\": { \"codepoints\": [10692], \"characters\": \"\\u29C4\" },\r\n  \"&sol;\": { \"codepoints\": [47], \"characters\": \"\\u002F\" },\r\n  \"&Sopf;\": { \"codepoints\": [120138], \"characters\": \"\\uD835\\uDD4A\" },\r\n  \"&sopf;\": { \"codepoints\": [120164], \"characters\": \"\\uD835\\uDD64\" },\r\n  \"&spades;\": { \"codepoints\": [9824], \"characters\": \"\\u2660\" },\r\n  \"&spadesuit;\": { \"codepoints\": [9824], \"characters\": \"\\u2660\" },\r\n  \"&spar;\": { \"codepoints\": [8741], \"characters\": \"\\u2225\" },\r\n  \"&sqcap;\": { \"codepoints\": [8851], \"characters\": \"\\u2293\" },\r\n  \"&sqcaps;\": { \"codepoints\": [8851, 65024], \"characters\": \"\\u2293\\uFE00\" },\r\n  \"&sqcup;\": { \"codepoints\": [8852], \"characters\": \"\\u2294\" },\r\n  \"&sqcups;\": { \"codepoints\": [8852, 65024], \"characters\": \"\\u2294\\uFE00\" },\r\n  \"&Sqrt;\": { \"codepoints\": [8730], \"characters\": \"\\u221A\" },\r\n  \"&sqsub;\": { \"codepoints\": [8847], \"characters\": \"\\u228F\" },\r\n  \"&sqsube;\": { \"codepoints\": [8849], \"characters\": \"\\u2291\" },\r\n  \"&sqsubset;\": { \"codepoints\": [8847], \"characters\": \"\\u228F\" },\r\n  \"&sqsubseteq;\": { \"codepoints\": [8849], \"characters\": \"\\u2291\" },\r\n  \"&sqsup;\": { \"codepoints\": [8848], \"characters\": \"\\u2290\" },\r\n  \"&sqsupe;\": { \"codepoints\": [8850], \"characters\": \"\\u2292\" },\r\n  \"&sqsupset;\": { \"codepoints\": [8848], \"characters\": \"\\u2290\" },\r\n  \"&sqsupseteq;\": { \"codepoints\": [8850], \"characters\": \"\\u2292\" },\r\n  \"&square;\": { \"codepoints\": [9633], \"characters\": \"\\u25A1\" },\r\n  \"&Square;\": { \"codepoints\": [9633], \"characters\": \"\\u25A1\" },\r\n  \"&SquareIntersection;\": { \"codepoints\": [8851], \"characters\": \"\\u2293\" },\r\n  \"&SquareSubset;\": { \"codepoints\": [8847], \"characters\": \"\\u228F\" },\r\n  \"&SquareSubsetEqual;\": { \"codepoints\": [8849], \"characters\": \"\\u2291\" },\r\n  \"&SquareSuperset;\": { \"codepoints\": [8848], \"characters\": \"\\u2290\" },\r\n  \"&SquareSupersetEqual;\": { \"codepoints\": [8850], \"characters\": \"\\u2292\" },\r\n  \"&SquareUnion;\": { \"codepoints\": [8852], \"characters\": \"\\u2294\" },\r\n  \"&squarf;\": { \"codepoints\": [9642], \"characters\": \"\\u25AA\" },\r\n  \"&squ;\": { \"codepoints\": [9633], \"characters\": \"\\u25A1\" },\r\n  \"&squf;\": { \"codepoints\": [9642], \"characters\": \"\\u25AA\" },\r\n  \"&srarr;\": { \"codepoints\": [8594], \"characters\": \"\\u2192\" },\r\n  \"&Sscr;\": { \"codepoints\": [119982], \"characters\": \"\\uD835\\uDCAE\" },\r\n  \"&sscr;\": { \"codepoints\": [120008], \"characters\": \"\\uD835\\uDCC8\" },\r\n  \"&ssetmn;\": { \"codepoints\": [8726], \"characters\": \"\\u2216\" },\r\n  \"&ssmile;\": { \"codepoints\": [8995], \"characters\": \"\\u2323\" },\r\n  \"&sstarf;\": { \"codepoints\": [8902], \"characters\": \"\\u22C6\" },\r\n  \"&Star;\": { \"codepoints\": [8902], \"characters\": \"\\u22C6\" },\r\n  \"&star;\": { \"codepoints\": [9734], \"characters\": \"\\u2606\" },\r\n  \"&starf;\": { \"codepoints\": [9733], \"characters\": \"\\u2605\" },\r\n  \"&straightepsilon;\": { \"codepoints\": [1013], \"characters\": \"\\u03F5\" },\r\n  \"&straightphi;\": { \"codepoints\": [981], \"characters\": \"\\u03D5\" },\r\n  \"&strns;\": { \"codepoints\": [175], \"characters\": \"\\u00AF\" },\r\n  \"&sub;\": { \"codepoints\": [8834], \"characters\": \"\\u2282\" },\r\n  \"&Sub;\": { \"codepoints\": [8912], \"characters\": \"\\u22D0\" },\r\n  \"&subdot;\": { \"codepoints\": [10941], \"characters\": \"\\u2ABD\" },\r\n  \"&subE;\": { \"codepoints\": [10949], \"characters\": \"\\u2AC5\" },\r\n  \"&sube;\": { \"codepoints\": [8838], \"characters\": \"\\u2286\" },\r\n  \"&subedot;\": { \"codepoints\": [10947], \"characters\": \"\\u2AC3\" },\r\n  \"&submult;\": { \"codepoints\": [10945], \"characters\": \"\\u2AC1\" },\r\n  \"&subnE;\": { \"codepoints\": [10955], \"characters\": \"\\u2ACB\" },\r\n  \"&subne;\": { \"codepoints\": [8842], \"characters\": \"\\u228A\" },\r\n  \"&subplus;\": { \"codepoints\": [10943], \"characters\": \"\\u2ABF\" },\r\n  \"&subrarr;\": { \"codepoints\": [10617], \"characters\": \"\\u2979\" },\r\n  \"&subset;\": { \"codepoints\": [8834], \"characters\": \"\\u2282\" },\r\n  \"&Subset;\": { \"codepoints\": [8912], \"characters\": \"\\u22D0\" },\r\n  \"&subseteq;\": { \"codepoints\": [8838], \"characters\": \"\\u2286\" },\r\n  \"&subseteqq;\": { \"codepoints\": [10949], \"characters\": \"\\u2AC5\" },\r\n  \"&SubsetEqual;\": { \"codepoints\": [8838], \"characters\": \"\\u2286\" },\r\n  \"&subsetneq;\": { \"codepoints\": [8842], \"characters\": \"\\u228A\" },\r\n  \"&subsetneqq;\": { \"codepoints\": [10955], \"characters\": \"\\u2ACB\" },\r\n  \"&subsim;\": { \"codepoints\": [10951], \"characters\": \"\\u2AC7\" },\r\n  \"&subsub;\": { \"codepoints\": [10965], \"characters\": \"\\u2AD5\" },\r\n  \"&subsup;\": { \"codepoints\": [10963], \"characters\": \"\\u2AD3\" },\r\n  \"&succapprox;\": { \"codepoints\": [10936], \"characters\": \"\\u2AB8\" },\r\n  \"&succ;\": { \"codepoints\": [8827], \"characters\": \"\\u227B\" },\r\n  \"&succcurlyeq;\": { \"codepoints\": [8829], \"characters\": \"\\u227D\" },\r\n  \"&Succeeds;\": { \"codepoints\": [8827], \"characters\": \"\\u227B\" },\r\n  \"&SucceedsEqual;\": { \"codepoints\": [10928], \"characters\": \"\\u2AB0\" },\r\n  \"&SucceedsSlantEqual;\": { \"codepoints\": [8829], \"characters\": \"\\u227D\" },\r\n  \"&SucceedsTilde;\": { \"codepoints\": [8831], \"characters\": \"\\u227F\" },\r\n  \"&succeq;\": { \"codepoints\": [10928], \"characters\": \"\\u2AB0\" },\r\n  \"&succnapprox;\": { \"codepoints\": [10938], \"characters\": \"\\u2ABA\" },\r\n  \"&succneqq;\": { \"codepoints\": [10934], \"characters\": \"\\u2AB6\" },\r\n  \"&succnsim;\": { \"codepoints\": [8937], \"characters\": \"\\u22E9\" },\r\n  \"&succsim;\": { \"codepoints\": [8831], \"characters\": \"\\u227F\" },\r\n  \"&SuchThat;\": { \"codepoints\": [8715], \"characters\": \"\\u220B\" },\r\n  \"&sum;\": { \"codepoints\": [8721], \"characters\": \"\\u2211\" },\r\n  \"&Sum;\": { \"codepoints\": [8721], \"characters\": \"\\u2211\" },\r\n  \"&sung;\": { \"codepoints\": [9834], \"characters\": \"\\u266A\" },\r\n  \"&sup1;\": { \"codepoints\": [185], \"characters\": \"\\u00B9\" },\r\n  \"&sup1\": { \"codepoints\": [185], \"characters\": \"\\u00B9\" },\r\n  \"&sup2;\": { \"codepoints\": [178], \"characters\": \"\\u00B2\" },\r\n  \"&sup2\": { \"codepoints\": [178], \"characters\": \"\\u00B2\" },\r\n  \"&sup3;\": { \"codepoints\": [179], \"characters\": \"\\u00B3\" },\r\n  \"&sup3\": { \"codepoints\": [179], \"characters\": \"\\u00B3\" },\r\n  \"&sup;\": { \"codepoints\": [8835], \"characters\": \"\\u2283\" },\r\n  \"&Sup;\": { \"codepoints\": [8913], \"characters\": \"\\u22D1\" },\r\n  \"&supdot;\": { \"codepoints\": [10942], \"characters\": \"\\u2ABE\" },\r\n  \"&supdsub;\": { \"codepoints\": [10968], \"characters\": \"\\u2AD8\" },\r\n  \"&supE;\": { \"codepoints\": [10950], \"characters\": \"\\u2AC6\" },\r\n  \"&supe;\": { \"codepoints\": [8839], \"characters\": \"\\u2287\" },\r\n  \"&supedot;\": { \"codepoints\": [10948], \"characters\": \"\\u2AC4\" },\r\n  \"&Superset;\": { \"codepoints\": [8835], \"characters\": \"\\u2283\" },\r\n  \"&SupersetEqual;\": { \"codepoints\": [8839], \"characters\": \"\\u2287\" },\r\n  \"&suphsol;\": { \"codepoints\": [10185], \"characters\": \"\\u27C9\" },\r\n  \"&suphsub;\": { \"codepoints\": [10967], \"characters\": \"\\u2AD7\" },\r\n  \"&suplarr;\": { \"codepoints\": [10619], \"characters\": \"\\u297B\" },\r\n  \"&supmult;\": { \"codepoints\": [10946], \"characters\": \"\\u2AC2\" },\r\n  \"&supnE;\": { \"codepoints\": [10956], \"characters\": \"\\u2ACC\" },\r\n  \"&supne;\": { \"codepoints\": [8843], \"characters\": \"\\u228B\" },\r\n  \"&supplus;\": { \"codepoints\": [10944], \"characters\": \"\\u2AC0\" },\r\n  \"&supset;\": { \"codepoints\": [8835], \"characters\": \"\\u2283\" },\r\n  \"&Supset;\": { \"codepoints\": [8913], \"characters\": \"\\u22D1\" },\r\n  \"&supseteq;\": { \"codepoints\": [8839], \"characters\": \"\\u2287\" },\r\n  \"&supseteqq;\": { \"codepoints\": [10950], \"characters\": \"\\u2AC6\" },\r\n  \"&supsetneq;\": { \"codepoints\": [8843], \"characters\": \"\\u228B\" },\r\n  \"&supsetneqq;\": { \"codepoints\": [10956], \"characters\": \"\\u2ACC\" },\r\n  \"&supsim;\": { \"codepoints\": [10952], \"characters\": \"\\u2AC8\" },\r\n  \"&supsub;\": { \"codepoints\": [10964], \"characters\": \"\\u2AD4\" },\r\n  \"&supsup;\": { \"codepoints\": [10966], \"characters\": \"\\u2AD6\" },\r\n  \"&swarhk;\": { \"codepoints\": [10534], \"characters\": \"\\u2926\" },\r\n  \"&swarr;\": { \"codepoints\": [8601], \"characters\": \"\\u2199\" },\r\n  \"&swArr;\": { \"codepoints\": [8665], \"characters\": \"\\u21D9\" },\r\n  \"&swarrow;\": { \"codepoints\": [8601], \"characters\": \"\\u2199\" },\r\n  \"&swnwar;\": { \"codepoints\": [10538], \"characters\": \"\\u292A\" },\r\n  \"&szlig;\": { \"codepoints\": [223], \"characters\": \"\\u00DF\" },\r\n  \"&szlig\": { \"codepoints\": [223], \"characters\": \"\\u00DF\" },\r\n  \"&Tab;\": { \"codepoints\": [9], \"characters\": \"\\u0009\" },\r\n  \"&target;\": { \"codepoints\": [8982], \"characters\": \"\\u2316\" },\r\n  \"&Tau;\": { \"codepoints\": [932], \"characters\": \"\\u03A4\" },\r\n  \"&tau;\": { \"codepoints\": [964], \"characters\": \"\\u03C4\" },\r\n  \"&tbrk;\": { \"codepoints\": [9140], \"characters\": \"\\u23B4\" },\r\n  \"&Tcaron;\": { \"codepoints\": [356], \"characters\": \"\\u0164\" },\r\n  \"&tcaron;\": { \"codepoints\": [357], \"characters\": \"\\u0165\" },\r\n  \"&Tcedil;\": { \"codepoints\": [354], \"characters\": \"\\u0162\" },\r\n  \"&tcedil;\": { \"codepoints\": [355], \"characters\": \"\\u0163\" },\r\n  \"&Tcy;\": { \"codepoints\": [1058], \"characters\": \"\\u0422\" },\r\n  \"&tcy;\": { \"codepoints\": [1090], \"characters\": \"\\u0442\" },\r\n  \"&tdot;\": { \"codepoints\": [8411], \"characters\": \"\\u20DB\" },\r\n  \"&telrec;\": { \"codepoints\": [8981], \"characters\": \"\\u2315\" },\r\n  \"&Tfr;\": { \"codepoints\": [120087], \"characters\": \"\\uD835\\uDD17\" },\r\n  \"&tfr;\": { \"codepoints\": [120113], \"characters\": \"\\uD835\\uDD31\" },\r\n  \"&there4;\": { \"codepoints\": [8756], \"characters\": \"\\u2234\" },\r\n  \"&therefore;\": { \"codepoints\": [8756], \"characters\": \"\\u2234\" },\r\n  \"&Therefore;\": { \"codepoints\": [8756], \"characters\": \"\\u2234\" },\r\n  \"&Theta;\": { \"codepoints\": [920], \"characters\": \"\\u0398\" },\r\n  \"&theta;\": { \"codepoints\": [952], \"characters\": \"\\u03B8\" },\r\n  \"&thetasym;\": { \"codepoints\": [977], \"characters\": \"\\u03D1\" },\r\n  \"&thetav;\": { \"codepoints\": [977], \"characters\": \"\\u03D1\" },\r\n  \"&thickapprox;\": { \"codepoints\": [8776], \"characters\": \"\\u2248\" },\r\n  \"&thicksim;\": { \"codepoints\": [8764], \"characters\": \"\\u223C\" },\r\n  \"&ThickSpace;\": { \"codepoints\": [8287, 8202], \"characters\": \"\\u205F\\u200A\" },\r\n  \"&ThinSpace;\": { \"codepoints\": [8201], \"characters\": \"\\u2009\" },\r\n  \"&thinsp;\": { \"codepoints\": [8201], \"characters\": \"\\u2009\" },\r\n  \"&thkap;\": { \"codepoints\": [8776], \"characters\": \"\\u2248\" },\r\n  \"&thksim;\": { \"codepoints\": [8764], \"characters\": \"\\u223C\" },\r\n  \"&THORN;\": { \"codepoints\": [222], \"characters\": \"\\u00DE\" },\r\n  \"&THORN\": { \"codepoints\": [222], \"characters\": \"\\u00DE\" },\r\n  \"&thorn;\": { \"codepoints\": [254], \"characters\": \"\\u00FE\" },\r\n  \"&thorn\": { \"codepoints\": [254], \"characters\": \"\\u00FE\" },\r\n  \"&tilde;\": { \"codepoints\": [732], \"characters\": \"\\u02DC\" },\r\n  \"&Tilde;\": { \"codepoints\": [8764], \"characters\": \"\\u223C\" },\r\n  \"&TildeEqual;\": { \"codepoints\": [8771], \"characters\": \"\\u2243\" },\r\n  \"&TildeFullEqual;\": { \"codepoints\": [8773], \"characters\": \"\\u2245\" },\r\n  \"&TildeTilde;\": { \"codepoints\": [8776], \"characters\": \"\\u2248\" },\r\n  \"&timesbar;\": { \"codepoints\": [10801], \"characters\": \"\\u2A31\" },\r\n  \"&timesb;\": { \"codepoints\": [8864], \"characters\": \"\\u22A0\" },\r\n  \"&times;\": { \"codepoints\": [215], \"characters\": \"\\u00D7\" },\r\n  \"&times\": { \"codepoints\": [215], \"characters\": \"\\u00D7\" },\r\n  \"&timesd;\": { \"codepoints\": [10800], \"characters\": \"\\u2A30\" },\r\n  \"&tint;\": { \"codepoints\": [8749], \"characters\": \"\\u222D\" },\r\n  \"&toea;\": { \"codepoints\": [10536], \"characters\": \"\\u2928\" },\r\n  \"&topbot;\": { \"codepoints\": [9014], \"characters\": \"\\u2336\" },\r\n  \"&topcir;\": { \"codepoints\": [10993], \"characters\": \"\\u2AF1\" },\r\n  \"&top;\": { \"codepoints\": [8868], \"characters\": \"\\u22A4\" },\r\n  \"&Topf;\": { \"codepoints\": [120139], \"characters\": \"\\uD835\\uDD4B\" },\r\n  \"&topf;\": { \"codepoints\": [120165], \"characters\": \"\\uD835\\uDD65\" },\r\n  \"&topfork;\": { \"codepoints\": [10970], \"characters\": \"\\u2ADA\" },\r\n  \"&tosa;\": { \"codepoints\": [10537], \"characters\": \"\\u2929\" },\r\n  \"&tprime;\": { \"codepoints\": [8244], \"characters\": \"\\u2034\" },\r\n  \"&trade;\": { \"codepoints\": [8482], \"characters\": \"\\u2122\" },\r\n  \"&TRADE;\": { \"codepoints\": [8482], \"characters\": \"\\u2122\" },\r\n  \"&triangle;\": { \"codepoints\": [9653], \"characters\": \"\\u25B5\" },\r\n  \"&triangledown;\": { \"codepoints\": [9663], \"characters\": \"\\u25BF\" },\r\n  \"&triangleleft;\": { \"codepoints\": [9667], \"characters\": \"\\u25C3\" },\r\n  \"&trianglelefteq;\": { \"codepoints\": [8884], \"characters\": \"\\u22B4\" },\r\n  \"&triangleq;\": { \"codepoints\": [8796], \"characters\": \"\\u225C\" },\r\n  \"&triangleright;\": { \"codepoints\": [9657], \"characters\": \"\\u25B9\" },\r\n  \"&trianglerighteq;\": { \"codepoints\": [8885], \"characters\": \"\\u22B5\" },\r\n  \"&tridot;\": { \"codepoints\": [9708], \"characters\": \"\\u25EC\" },\r\n  \"&trie;\": { \"codepoints\": [8796], \"characters\": \"\\u225C\" },\r\n  \"&triminus;\": { \"codepoints\": [10810], \"characters\": \"\\u2A3A\" },\r\n  \"&TripleDot;\": { \"codepoints\": [8411], \"characters\": \"\\u20DB\" },\r\n  \"&triplus;\": { \"codepoints\": [10809], \"characters\": \"\\u2A39\" },\r\n  \"&trisb;\": { \"codepoints\": [10701], \"characters\": \"\\u29CD\" },\r\n  \"&tritime;\": { \"codepoints\": [10811], \"characters\": \"\\u2A3B\" },\r\n  \"&trpezium;\": { \"codepoints\": [9186], \"characters\": \"\\u23E2\" },\r\n  \"&Tscr;\": { \"codepoints\": [119983], \"characters\": \"\\uD835\\uDCAF\" },\r\n  \"&tscr;\": { \"codepoints\": [120009], \"characters\": \"\\uD835\\uDCC9\" },\r\n  \"&TScy;\": { \"codepoints\": [1062], \"characters\": \"\\u0426\" },\r\n  \"&tscy;\": { \"codepoints\": [1094], \"characters\": \"\\u0446\" },\r\n  \"&TSHcy;\": { \"codepoints\": [1035], \"characters\": \"\\u040B\" },\r\n  \"&tshcy;\": { \"codepoints\": [1115], \"characters\": \"\\u045B\" },\r\n  \"&Tstrok;\": { \"codepoints\": [358], \"characters\": \"\\u0166\" },\r\n  \"&tstrok;\": { \"codepoints\": [359], \"characters\": \"\\u0167\" },\r\n  \"&twixt;\": { \"codepoints\": [8812], \"characters\": \"\\u226C\" },\r\n  \"&twoheadleftarrow;\": { \"codepoints\": [8606], \"characters\": \"\\u219E\" },\r\n  \"&twoheadrightarrow;\": { \"codepoints\": [8608], \"characters\": \"\\u21A0\" },\r\n  \"&Uacute;\": { \"codepoints\": [218], \"characters\": \"\\u00DA\" },\r\n  \"&Uacute\": { \"codepoints\": [218], \"characters\": \"\\u00DA\" },\r\n  \"&uacute;\": { \"codepoints\": [250], \"characters\": \"\\u00FA\" },\r\n  \"&uacute\": { \"codepoints\": [250], \"characters\": \"\\u00FA\" },\r\n  \"&uarr;\": { \"codepoints\": [8593], \"characters\": \"\\u2191\" },\r\n  \"&Uarr;\": { \"codepoints\": [8607], \"characters\": \"\\u219F\" },\r\n  \"&uArr;\": { \"codepoints\": [8657], \"characters\": \"\\u21D1\" },\r\n  \"&Uarrocir;\": { \"codepoints\": [10569], \"characters\": \"\\u2949\" },\r\n  \"&Ubrcy;\": { \"codepoints\": [1038], \"characters\": \"\\u040E\" },\r\n  \"&ubrcy;\": { \"codepoints\": [1118], \"characters\": \"\\u045E\" },\r\n  \"&Ubreve;\": { \"codepoints\": [364], \"characters\": \"\\u016C\" },\r\n  \"&ubreve;\": { \"codepoints\": [365], \"characters\": \"\\u016D\" },\r\n  \"&Ucirc;\": { \"codepoints\": [219], \"characters\": \"\\u00DB\" },\r\n  \"&Ucirc\": { \"codepoints\": [219], \"characters\": \"\\u00DB\" },\r\n  \"&ucirc;\": { \"codepoints\": [251], \"characters\": \"\\u00FB\" },\r\n  \"&ucirc\": { \"codepoints\": [251], \"characters\": \"\\u00FB\" },\r\n  \"&Ucy;\": { \"codepoints\": [1059], \"characters\": \"\\u0423\" },\r\n  \"&ucy;\": { \"codepoints\": [1091], \"characters\": \"\\u0443\" },\r\n  \"&udarr;\": { \"codepoints\": [8645], \"characters\": \"\\u21C5\" },\r\n  \"&Udblac;\": { \"codepoints\": [368], \"characters\": \"\\u0170\" },\r\n  \"&udblac;\": { \"codepoints\": [369], \"characters\": \"\\u0171\" },\r\n  \"&udhar;\": { \"codepoints\": [10606], \"characters\": \"\\u296E\" },\r\n  \"&ufisht;\": { \"codepoints\": [10622], \"characters\": \"\\u297E\" },\r\n  \"&Ufr;\": { \"codepoints\": [120088], \"characters\": \"\\uD835\\uDD18\" },\r\n  \"&ufr;\": { \"codepoints\": [120114], \"characters\": \"\\uD835\\uDD32\" },\r\n  \"&Ugrave;\": { \"codepoints\": [217], \"characters\": \"\\u00D9\" },\r\n  \"&Ugrave\": { \"codepoints\": [217], \"characters\": \"\\u00D9\" },\r\n  \"&ugrave;\": { \"codepoints\": [249], \"characters\": \"\\u00F9\" },\r\n  \"&ugrave\": { \"codepoints\": [249], \"characters\": \"\\u00F9\" },\r\n  \"&uHar;\": { \"codepoints\": [10595], \"characters\": \"\\u2963\" },\r\n  \"&uharl;\": { \"codepoints\": [8639], \"characters\": \"\\u21BF\" },\r\n  \"&uharr;\": { \"codepoints\": [8638], \"characters\": \"\\u21BE\" },\r\n  \"&uhblk;\": { \"codepoints\": [9600], \"characters\": \"\\u2580\" },\r\n  \"&ulcorn;\": { \"codepoints\": [8988], \"characters\": \"\\u231C\" },\r\n  \"&ulcorner;\": { \"codepoints\": [8988], \"characters\": \"\\u231C\" },\r\n  \"&ulcrop;\": { \"codepoints\": [8975], \"characters\": \"\\u230F\" },\r\n  \"&ultri;\": { \"codepoints\": [9720], \"characters\": \"\\u25F8\" },\r\n  \"&Umacr;\": { \"codepoints\": [362], \"characters\": \"\\u016A\" },\r\n  \"&umacr;\": { \"codepoints\": [363], \"characters\": \"\\u016B\" },\r\n  \"&uml;\": { \"codepoints\": [168], \"characters\": \"\\u00A8\" },\r\n  \"&uml\": { \"codepoints\": [168], \"characters\": \"\\u00A8\" },\r\n  \"&UnderBar;\": { \"codepoints\": [95], \"characters\": \"\\u005F\" },\r\n  \"&UnderBrace;\": { \"codepoints\": [9183], \"characters\": \"\\u23DF\" },\r\n  \"&UnderBracket;\": { \"codepoints\": [9141], \"characters\": \"\\u23B5\" },\r\n  \"&UnderParenthesis;\": { \"codepoints\": [9181], \"characters\": \"\\u23DD\" },\r\n  \"&Union;\": { \"codepoints\": [8899], \"characters\": \"\\u22C3\" },\r\n  \"&UnionPlus;\": { \"codepoints\": [8846], \"characters\": \"\\u228E\" },\r\n  \"&Uogon;\": { \"codepoints\": [370], \"characters\": \"\\u0172\" },\r\n  \"&uogon;\": { \"codepoints\": [371], \"characters\": \"\\u0173\" },\r\n  \"&Uopf;\": { \"codepoints\": [120140], \"characters\": \"\\uD835\\uDD4C\" },\r\n  \"&uopf;\": { \"codepoints\": [120166], \"characters\": \"\\uD835\\uDD66\" },\r\n  \"&UpArrowBar;\": { \"codepoints\": [10514], \"characters\": \"\\u2912\" },\r\n  \"&uparrow;\": { \"codepoints\": [8593], \"characters\": \"\\u2191\" },\r\n  \"&UpArrow;\": { \"codepoints\": [8593], \"characters\": \"\\u2191\" },\r\n  \"&Uparrow;\": { \"codepoints\": [8657], \"characters\": \"\\u21D1\" },\r\n  \"&UpArrowDownArrow;\": { \"codepoints\": [8645], \"characters\": \"\\u21C5\" },\r\n  \"&updownarrow;\": { \"codepoints\": [8597], \"characters\": \"\\u2195\" },\r\n  \"&UpDownArrow;\": { \"codepoints\": [8597], \"characters\": \"\\u2195\" },\r\n  \"&Updownarrow;\": { \"codepoints\": [8661], \"characters\": \"\\u21D5\" },\r\n  \"&UpEquilibrium;\": { \"codepoints\": [10606], \"characters\": \"\\u296E\" },\r\n  \"&upharpoonleft;\": { \"codepoints\": [8639], \"characters\": \"\\u21BF\" },\r\n  \"&upharpoonright;\": { \"codepoints\": [8638], \"characters\": \"\\u21BE\" },\r\n  \"&uplus;\": { \"codepoints\": [8846], \"characters\": \"\\u228E\" },\r\n  \"&UpperLeftArrow;\": { \"codepoints\": [8598], \"characters\": \"\\u2196\" },\r\n  \"&UpperRightArrow;\": { \"codepoints\": [8599], \"characters\": \"\\u2197\" },\r\n  \"&upsi;\": { \"codepoints\": [965], \"characters\": \"\\u03C5\" },\r\n  \"&Upsi;\": { \"codepoints\": [978], \"characters\": \"\\u03D2\" },\r\n  \"&upsih;\": { \"codepoints\": [978], \"characters\": \"\\u03D2\" },\r\n  \"&Upsilon;\": { \"codepoints\": [933], \"characters\": \"\\u03A5\" },\r\n  \"&upsilon;\": { \"codepoints\": [965], \"characters\": \"\\u03C5\" },\r\n  \"&UpTeeArrow;\": { \"codepoints\": [8613], \"characters\": \"\\u21A5\" },\r\n  \"&UpTee;\": { \"codepoints\": [8869], \"characters\": \"\\u22A5\" },\r\n  \"&upuparrows;\": { \"codepoints\": [8648], \"characters\": \"\\u21C8\" },\r\n  \"&urcorn;\": { \"codepoints\": [8989], \"characters\": \"\\u231D\" },\r\n  \"&urcorner;\": { \"codepoints\": [8989], \"characters\": \"\\u231D\" },\r\n  \"&urcrop;\": { \"codepoints\": [8974], \"characters\": \"\\u230E\" },\r\n  \"&Uring;\": { \"codepoints\": [366], \"characters\": \"\\u016E\" },\r\n  \"&uring;\": { \"codepoints\": [367], \"characters\": \"\\u016F\" },\r\n  \"&urtri;\": { \"codepoints\": [9721], \"characters\": \"\\u25F9\" },\r\n  \"&Uscr;\": { \"codepoints\": [119984], \"characters\": \"\\uD835\\uDCB0\" },\r\n  \"&uscr;\": { \"codepoints\": [120010], \"characters\": \"\\uD835\\uDCCA\" },\r\n  \"&utdot;\": { \"codepoints\": [8944], \"characters\": \"\\u22F0\" },\r\n  \"&Utilde;\": { \"codepoints\": [360], \"characters\": \"\\u0168\" },\r\n  \"&utilde;\": { \"codepoints\": [361], \"characters\": \"\\u0169\" },\r\n  \"&utri;\": { \"codepoints\": [9653], \"characters\": \"\\u25B5\" },\r\n  \"&utrif;\": { \"codepoints\": [9652], \"characters\": \"\\u25B4\" },\r\n  \"&uuarr;\": { \"codepoints\": [8648], \"characters\": \"\\u21C8\" },\r\n  \"&Uuml;\": { \"codepoints\": [220], \"characters\": \"\\u00DC\" },\r\n  \"&Uuml\": { \"codepoints\": [220], \"characters\": \"\\u00DC\" },\r\n  \"&uuml;\": { \"codepoints\": [252], \"characters\": \"\\u00FC\" },\r\n  \"&uuml\": { \"codepoints\": [252], \"characters\": \"\\u00FC\" },\r\n  \"&uwangle;\": { \"codepoints\": [10663], \"characters\": \"\\u29A7\" },\r\n  \"&vangrt;\": { \"codepoints\": [10652], \"characters\": \"\\u299C\" },\r\n  \"&varepsilon;\": { \"codepoints\": [1013], \"characters\": \"\\u03F5\" },\r\n  \"&varkappa;\": { \"codepoints\": [1008], \"characters\": \"\\u03F0\" },\r\n  \"&varnothing;\": { \"codepoints\": [8709], \"characters\": \"\\u2205\" },\r\n  \"&varphi;\": { \"codepoints\": [981], \"characters\": \"\\u03D5\" },\r\n  \"&varpi;\": { \"codepoints\": [982], \"characters\": \"\\u03D6\" },\r\n  \"&varpropto;\": { \"codepoints\": [8733], \"characters\": \"\\u221D\" },\r\n  \"&varr;\": { \"codepoints\": [8597], \"characters\": \"\\u2195\" },\r\n  \"&vArr;\": { \"codepoints\": [8661], \"characters\": \"\\u21D5\" },\r\n  \"&varrho;\": { \"codepoints\": [1009], \"characters\": \"\\u03F1\" },\r\n  \"&varsigma;\": { \"codepoints\": [962], \"characters\": \"\\u03C2\" },\r\n  \"&varsubsetneq;\": { \"codepoints\": [8842, 65024], \"characters\": \"\\u228A\\uFE00\" },\r\n  \"&varsubsetneqq;\": { \"codepoints\": [10955, 65024], \"characters\": \"\\u2ACB\\uFE00\" },\r\n  \"&varsupsetneq;\": { \"codepoints\": [8843, 65024], \"characters\": \"\\u228B\\uFE00\" },\r\n  \"&varsupsetneqq;\": { \"codepoints\": [10956, 65024], \"characters\": \"\\u2ACC\\uFE00\" },\r\n  \"&vartheta;\": { \"codepoints\": [977], \"characters\": \"\\u03D1\" },\r\n  \"&vartriangleleft;\": { \"codepoints\": [8882], \"characters\": \"\\u22B2\" },\r\n  \"&vartriangleright;\": { \"codepoints\": [8883], \"characters\": \"\\u22B3\" },\r\n  \"&vBar;\": { \"codepoints\": [10984], \"characters\": \"\\u2AE8\" },\r\n  \"&Vbar;\": { \"codepoints\": [10987], \"characters\": \"\\u2AEB\" },\r\n  \"&vBarv;\": { \"codepoints\": [10985], \"characters\": \"\\u2AE9\" },\r\n  \"&Vcy;\": { \"codepoints\": [1042], \"characters\": \"\\u0412\" },\r\n  \"&vcy;\": { \"codepoints\": [1074], \"characters\": \"\\u0432\" },\r\n  \"&vdash;\": { \"codepoints\": [8866], \"characters\": \"\\u22A2\" },\r\n  \"&vDash;\": { \"codepoints\": [8872], \"characters\": \"\\u22A8\" },\r\n  \"&Vdash;\": { \"codepoints\": [8873], \"characters\": \"\\u22A9\" },\r\n  \"&VDash;\": { \"codepoints\": [8875], \"characters\": \"\\u22AB\" },\r\n  \"&Vdashl;\": { \"codepoints\": [10982], \"characters\": \"\\u2AE6\" },\r\n  \"&veebar;\": { \"codepoints\": [8891], \"characters\": \"\\u22BB\" },\r\n  \"&vee;\": { \"codepoints\": [8744], \"characters\": \"\\u2228\" },\r\n  \"&Vee;\": { \"codepoints\": [8897], \"characters\": \"\\u22C1\" },\r\n  \"&veeeq;\": { \"codepoints\": [8794], \"characters\": \"\\u225A\" },\r\n  \"&vellip;\": { \"codepoints\": [8942], \"characters\": \"\\u22EE\" },\r\n  \"&verbar;\": { \"codepoints\": [124], \"characters\": \"\\u007C\" },\r\n  \"&Verbar;\": { \"codepoints\": [8214], \"characters\": \"\\u2016\" },\r\n  \"&vert;\": { \"codepoints\": [124], \"characters\": \"\\u007C\" },\r\n  \"&Vert;\": { \"codepoints\": [8214], \"characters\": \"\\u2016\" },\r\n  \"&VerticalBar;\": { \"codepoints\": [8739], \"characters\": \"\\u2223\" },\r\n  \"&VerticalLine;\": { \"codepoints\": [124], \"characters\": \"\\u007C\" },\r\n  \"&VerticalSeparator;\": { \"codepoints\": [10072], \"characters\": \"\\u2758\" },\r\n  \"&VerticalTilde;\": { \"codepoints\": [8768], \"characters\": \"\\u2240\" },\r\n  \"&VeryThinSpace;\": { \"codepoints\": [8202], \"characters\": \"\\u200A\" },\r\n  \"&Vfr;\": { \"codepoints\": [120089], \"characters\": \"\\uD835\\uDD19\" },\r\n  \"&vfr;\": { \"codepoints\": [120115], \"characters\": \"\\uD835\\uDD33\" },\r\n  \"&vltri;\": { \"codepoints\": [8882], \"characters\": \"\\u22B2\" },\r\n  \"&vnsub;\": { \"codepoints\": [8834, 8402], \"characters\": \"\\u2282\\u20D2\" },\r\n  \"&vnsup;\": { \"codepoints\": [8835, 8402], \"characters\": \"\\u2283\\u20D2\" },\r\n  \"&Vopf;\": { \"codepoints\": [120141], \"characters\": \"\\uD835\\uDD4D\" },\r\n  \"&vopf;\": { \"codepoints\": [120167], \"characters\": \"\\uD835\\uDD67\" },\r\n  \"&vprop;\": { \"codepoints\": [8733], \"characters\": \"\\u221D\" },\r\n  \"&vrtri;\": { \"codepoints\": [8883], \"characters\": \"\\u22B3\" },\r\n  \"&Vscr;\": { \"codepoints\": [119985], \"characters\": \"\\uD835\\uDCB1\" },\r\n  \"&vscr;\": { \"codepoints\": [120011], \"characters\": \"\\uD835\\uDCCB\" },\r\n  \"&vsubnE;\": { \"codepoints\": [10955, 65024], \"characters\": \"\\u2ACB\\uFE00\" },\r\n  \"&vsubne;\": { \"codepoints\": [8842, 65024], \"characters\": \"\\u228A\\uFE00\" },\r\n  \"&vsupnE;\": { \"codepoints\": [10956, 65024], \"characters\": \"\\u2ACC\\uFE00\" },\r\n  \"&vsupne;\": { \"codepoints\": [8843, 65024], \"characters\": \"\\u228B\\uFE00\" },\r\n  \"&Vvdash;\": { \"codepoints\": [8874], \"characters\": \"\\u22AA\" },\r\n  \"&vzigzag;\": { \"codepoints\": [10650], \"characters\": \"\\u299A\" },\r\n  \"&Wcirc;\": { \"codepoints\": [372], \"characters\": \"\\u0174\" },\r\n  \"&wcirc;\": { \"codepoints\": [373], \"characters\": \"\\u0175\" },\r\n  \"&wedbar;\": { \"codepoints\": [10847], \"characters\": \"\\u2A5F\" },\r\n  \"&wedge;\": { \"codepoints\": [8743], \"characters\": \"\\u2227\" },\r\n  \"&Wedge;\": { \"codepoints\": [8896], \"characters\": \"\\u22C0\" },\r\n  \"&wedgeq;\": { \"codepoints\": [8793], \"characters\": \"\\u2259\" },\r\n  \"&weierp;\": { \"codepoints\": [8472], \"characters\": \"\\u2118\" },\r\n  \"&Wfr;\": { \"codepoints\": [120090], \"characters\": \"\\uD835\\uDD1A\" },\r\n  \"&wfr;\": { \"codepoints\": [120116], \"characters\": \"\\uD835\\uDD34\" },\r\n  \"&Wopf;\": { \"codepoints\": [120142], \"characters\": \"\\uD835\\uDD4E\" },\r\n  \"&wopf;\": { \"codepoints\": [120168], \"characters\": \"\\uD835\\uDD68\" },\r\n  \"&wp;\": { \"codepoints\": [8472], \"characters\": \"\\u2118\" },\r\n  \"&wr;\": { \"codepoints\": [8768], \"characters\": \"\\u2240\" },\r\n  \"&wreath;\": { \"codepoints\": [8768], \"characters\": \"\\u2240\" },\r\n  \"&Wscr;\": { \"codepoints\": [119986], \"characters\": \"\\uD835\\uDCB2\" },\r\n  \"&wscr;\": { \"codepoints\": [120012], \"characters\": \"\\uD835\\uDCCC\" },\r\n  \"&xcap;\": { \"codepoints\": [8898], \"characters\": \"\\u22C2\" },\r\n  \"&xcirc;\": { \"codepoints\": [9711], \"characters\": \"\\u25EF\" },\r\n  \"&xcup;\": { \"codepoints\": [8899], \"characters\": \"\\u22C3\" },\r\n  \"&xdtri;\": { \"codepoints\": [9661], \"characters\": \"\\u25BD\" },\r\n  \"&Xfr;\": { \"codepoints\": [120091], \"characters\": \"\\uD835\\uDD1B\" },\r\n  \"&xfr;\": { \"codepoints\": [120117], \"characters\": \"\\uD835\\uDD35\" },\r\n  \"&xharr;\": { \"codepoints\": [10231], \"characters\": \"\\u27F7\" },\r\n  \"&xhArr;\": { \"codepoints\": [10234], \"characters\": \"\\u27FA\" },\r\n  \"&Xi;\": { \"codepoints\": [926], \"characters\": \"\\u039E\" },\r\n  \"&xi;\": { \"codepoints\": [958], \"characters\": \"\\u03BE\" },\r\n  \"&xlarr;\": { \"codepoints\": [10229], \"characters\": \"\\u27F5\" },\r\n  \"&xlArr;\": { \"codepoints\": [10232], \"characters\": \"\\u27F8\" },\r\n  \"&xmap;\": { \"codepoints\": [10236], \"characters\": \"\\u27FC\" },\r\n  \"&xnis;\": { \"codepoints\": [8955], \"characters\": \"\\u22FB\" },\r\n  \"&xodot;\": { \"codepoints\": [10752], \"characters\": \"\\u2A00\" },\r\n  \"&Xopf;\": { \"codepoints\": [120143], \"characters\": \"\\uD835\\uDD4F\" },\r\n  \"&xopf;\": { \"codepoints\": [120169], \"characters\": \"\\uD835\\uDD69\" },\r\n  \"&xoplus;\": { \"codepoints\": [10753], \"characters\": \"\\u2A01\" },\r\n  \"&xotime;\": { \"codepoints\": [10754], \"characters\": \"\\u2A02\" },\r\n  \"&xrarr;\": { \"codepoints\": [10230], \"characters\": \"\\u27F6\" },\r\n  \"&xrArr;\": { \"codepoints\": [10233], \"characters\": \"\\u27F9\" },\r\n  \"&Xscr;\": { \"codepoints\": [119987], \"characters\": \"\\uD835\\uDCB3\" },\r\n  \"&xscr;\": { \"codepoints\": [120013], \"characters\": \"\\uD835\\uDCCD\" },\r\n  \"&xsqcup;\": { \"codepoints\": [10758], \"characters\": \"\\u2A06\" },\r\n  \"&xuplus;\": { \"codepoints\": [10756], \"characters\": \"\\u2A04\" },\r\n  \"&xutri;\": { \"codepoints\": [9651], \"characters\": \"\\u25B3\" },\r\n  \"&xvee;\": { \"codepoints\": [8897], \"characters\": \"\\u22C1\" },\r\n  \"&xwedge;\": { \"codepoints\": [8896], \"characters\": \"\\u22C0\" },\r\n  \"&Yacute;\": { \"codepoints\": [221], \"characters\": \"\\u00DD\" },\r\n  \"&Yacute\": { \"codepoints\": [221], \"characters\": \"\\u00DD\" },\r\n  \"&yacute;\": { \"codepoints\": [253], \"characters\": \"\\u00FD\" },\r\n  \"&yacute\": { \"codepoints\": [253], \"characters\": \"\\u00FD\" },\r\n  \"&YAcy;\": { \"codepoints\": [1071], \"characters\": \"\\u042F\" },\r\n  \"&yacy;\": { \"codepoints\": [1103], \"characters\": \"\\u044F\" },\r\n  \"&Ycirc;\": { \"codepoints\": [374], \"characters\": \"\\u0176\" },\r\n  \"&ycirc;\": { \"codepoints\": [375], \"characters\": \"\\u0177\" },\r\n  \"&Ycy;\": { \"codepoints\": [1067], \"characters\": \"\\u042B\" },\r\n  \"&ycy;\": { \"codepoints\": [1099], \"characters\": \"\\u044B\" },\r\n  \"&yen;\": { \"codepoints\": [165], \"characters\": \"\\u00A5\" },\r\n  \"&yen\": { \"codepoints\": [165], \"characters\": \"\\u00A5\" },\r\n  \"&Yfr;\": { \"codepoints\": [120092], \"characters\": \"\\uD835\\uDD1C\" },\r\n  \"&yfr;\": { \"codepoints\": [120118], \"characters\": \"\\uD835\\uDD36\" },\r\n  \"&YIcy;\": { \"codepoints\": [1031], \"characters\": \"\\u0407\" },\r\n  \"&yicy;\": { \"codepoints\": [1111], \"characters\": \"\\u0457\" },\r\n  \"&Yopf;\": { \"codepoints\": [120144], \"characters\": \"\\uD835\\uDD50\" },\r\n  \"&yopf;\": { \"codepoints\": [120170], \"characters\": \"\\uD835\\uDD6A\" },\r\n  \"&Yscr;\": { \"codepoints\": [119988], \"characters\": \"\\uD835\\uDCB4\" },\r\n  \"&yscr;\": { \"codepoints\": [120014], \"characters\": \"\\uD835\\uDCCE\" },\r\n  \"&YUcy;\": { \"codepoints\": [1070], \"characters\": \"\\u042E\" },\r\n  \"&yucy;\": { \"codepoints\": [1102], \"characters\": \"\\u044E\" },\r\n  \"&yuml;\": { \"codepoints\": [255], \"characters\": \"\\u00FF\" },\r\n  \"&yuml\": { \"codepoints\": [255], \"characters\": \"\\u00FF\" },\r\n  \"&Yuml;\": { \"codepoints\": [376], \"characters\": \"\\u0178\" },\r\n  \"&Zacute;\": { \"codepoints\": [377], \"characters\": \"\\u0179\" },\r\n  \"&zacute;\": { \"codepoints\": [378], \"characters\": \"\\u017A\" },\r\n  \"&Zcaron;\": { \"codepoints\": [381], \"characters\": \"\\u017D\" },\r\n  \"&zcaron;\": { \"codepoints\": [382], \"characters\": \"\\u017E\" },\r\n  \"&Zcy;\": { \"codepoints\": [1047], \"characters\": \"\\u0417\" },\r\n  \"&zcy;\": { \"codepoints\": [1079], \"characters\": \"\\u0437\" },\r\n  \"&Zdot;\": { \"codepoints\": [379], \"characters\": \"\\u017B\" },\r\n  \"&zdot;\": { \"codepoints\": [380], \"characters\": \"\\u017C\" },\r\n  \"&zeetrf;\": { \"codepoints\": [8488], \"characters\": \"\\u2128\" },\r\n  \"&ZeroWidthSpace;\": { \"codepoints\": [8203], \"characters\": \"\\u200B\" },\r\n  \"&Zeta;\": { \"codepoints\": [918], \"characters\": \"\\u0396\" },\r\n  \"&zeta;\": { \"codepoints\": [950], \"characters\": \"\\u03B6\" },\r\n  \"&zfr;\": { \"codepoints\": [120119], \"characters\": \"\\uD835\\uDD37\" },\r\n  \"&Zfr;\": { \"codepoints\": [8488], \"characters\": \"\\u2128\" },\r\n  \"&ZHcy;\": { \"codepoints\": [1046], \"characters\": \"\\u0416\" },\r\n  \"&zhcy;\": { \"codepoints\": [1078], \"characters\": \"\\u0436\" },\r\n  \"&zigrarr;\": { \"codepoints\": [8669], \"characters\": \"\\u21DD\" },\r\n  \"&zopf;\": { \"codepoints\": [120171], \"characters\": \"\\uD835\\uDD6B\" },\r\n  \"&Zopf;\": { \"codepoints\": [8484], \"characters\": \"\\u2124\" },\r\n  \"&Zscr;\": { \"codepoints\": [119989], \"characters\": \"\\uD835\\uDCB5\" },\r\n  \"&zscr;\": { \"codepoints\": [120015], \"characters\": \"\\uD835\\uDCCF\" },\r\n  \"&zwj;\": { \"codepoints\": [8205], \"characters\": \"\\u200D\" },\r\n  \"&zwnj;\": { \"codepoints\": [8204], \"characters\": \"\\u200C\" }\r\n};\r\n\r\nvar ALPHANUMERIC = /^[a-zA-Z0-9]/;\r\nvar getPossibleNamedEntityStart = makeRegexMatcher(/^&[a-zA-Z0-9]/);\r\nvar getApparentNamedEntity = makeRegexMatcher(/^&[a-zA-Z0-9]+;/);\r\n\r\nvar getNamedEntityByFirstChar = {};\r\n(function () {\r\n  var namedEntitiesByFirstChar = {};\r\n  for (var ent in ENTITIES) {\r\n    var chr = ent.charAt(1);\r\n    namedEntitiesByFirstChar[chr] = (namedEntitiesByFirstChar[chr] || []);\r\n    namedEntitiesByFirstChar[chr].push(ent.slice(2));\r\n  }\r\n  for (var chr in namedEntitiesByFirstChar) {\r\n    getNamedEntityByFirstChar[chr] = makeRegexMatcher(\r\n      new RegExp('^&' + chr + '(?:' +\r\n                 namedEntitiesByFirstChar[chr].join('|') + ')'));\r\n  }\r\n})();\r\n\r\n// Run a provided \"matcher\" function but reset the current position afterwards.\r\n// Fatal failure of the matcher is not suppressed.\r\nvar peekMatcher = function (scanner, matcher) {\r\n  var start = scanner.pos;\r\n  var result = matcher(scanner);\r\n  scanner.pos = start;\r\n  return result;\r\n};\r\n\r\n// Returns a string like \"&amp;\" or a falsy value if no match.  Fails fatally\r\n// if something looks like a named entity but isn't.\r\nvar getNamedCharRef = function (scanner, inAttribute) {\r\n  // look for `&` followed by alphanumeric\r\n  if (! peekMatcher(scanner, getPossibleNamedEntityStart))\r\n    return null;\r\n\r\n  var matcher = getNamedEntityByFirstChar[scanner.rest().charAt(1)];\r\n  var entity = null;\r\n  if (matcher)\r\n    entity = peekMatcher(scanner, matcher);\r\n\r\n  if (entity) {\r\n    if (entity.slice(-1) !== ';') {\r\n      // Certain character references with no semi are an error, like `&lt`.\r\n      // In attribute values, however, this is not fatal if the next character\r\n      // is alphanumeric.\r\n      //\r\n      // This rule affects href attributes, for example, deeming \"/?foo=bar&ltc=abc\"\r\n      // to be ok but \"/?foo=bar&lt=abc\" to not be.\r\n      if (inAttribute && ALPHANUMERIC.test(scanner.rest().charAt(entity.length)))\r\n        return null;\r\n      scanner.fatal(\"Character reference requires semicolon: \" + entity);\r\n    } else {\r\n      scanner.pos += entity.length;\r\n      return entity;\r\n    }\r\n  } else {\r\n    // we couldn't match any real entity, so see if this is a bad entity\r\n    // or something we can overlook.\r\n    var badEntity = peekMatcher(scanner, getApparentNamedEntity);\r\n    if (badEntity)\r\n      scanner.fatal(\"Invalid character reference: \" + badEntity);\r\n    // `&aaaa` is ok with no semicolon\r\n    return null;\r\n  }\r\n};\r\n\r\n// Returns the sequence of one or two codepoints making up an entity as an array.\r\n// Codepoints in the array are integers and may be out of the single-char JavaScript\r\n// range.\r\nvar getCodePoints = function (namedEntity) {\r\n  return ENTITIES[namedEntity].codepoints;\r\n};\r\n\r\nvar ALLOWED_AFTER_AMP = /^[\\u0009\\u000a\\u000c <&]/;\r\n\r\nvar getCharRefNumber = makeRegexMatcher(/^(?:[xX][0-9a-fA-F]+|[0-9]+);/);\r\n\r\nvar BIG_BAD_CODEPOINTS = (function (obj) {\r\n  var list = [0x1FFFE, 0x1FFFF, 0x2FFFE, 0x2FFFF, 0x3FFFE, 0x3FFFF,\r\n              0x4FFFE, 0x4FFFF, 0x5FFFE, 0x5FFFF, 0x6FFFE, 0x6FFFF,\r\n              0x7FFFE, 0x7FFFF, 0x8FFFE, 0x8FFFF, 0x9FFFE, 0x9FFFF,\r\n              0xAFFFE, 0xAFFFF, 0xBFFFE, 0xBFFFF, 0xCFFFE, 0xCFFFF,\r\n              0xDFFFE, 0xDFFFF, 0xEFFFE, 0xEFFFF, 0xFFFFE, 0xFFFFF,\r\n              0x10FFFE, 0x10FFFF];\r\n  for (var i = 0; i < list.length; i++)\r\n    obj[list[i]] = true;\r\n\r\n  return obj;\r\n})({});\r\n\r\nvar isLegalCodepoint = function (cp) {\r\n  if ((cp === 0) ||\r\n      (cp >= 0x80 && cp <= 0x9f) ||\r\n      (cp >= 0xd800 && cp <= 0xdfff) ||\r\n      (cp >= 0x10ffff) ||\r\n      (cp >= 0x1 && cp <= 0x8) ||\r\n      (cp === 0xb) ||\r\n      (cp >= 0xd && cp <= 0x1f) ||\r\n      (cp >= 0x7f && cp <= 0x9f) ||\r\n      (cp >= 0xfdd0 && cp <= 0xfdef) ||\r\n      (cp === 0xfffe) ||\r\n      (cp === 0xffff) ||\r\n      (cp >= 0x10000 && BIG_BAD_CODEPOINTS[cp]))\r\n    return false;\r\n\r\n  return true;\r\n};\r\n\r\n// http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#consume-a-character-reference\r\n//\r\n// Matches a character reference if possible, including the initial `&`.\r\n// Fails fatally in error cases (assuming an initial `&` is matched), like a disallowed codepoint\r\n// number or a bad named character reference.\r\n//\r\n// `inAttribute` is truthy if we are in an attribute value.\r\n//\r\n// `allowedChar` is an optional character that,\r\n// if found after the initial `&`, aborts parsing silently rather than failing fatally.  In real use it is\r\n// either `\"`, `'`, or `>` and is supplied when parsing attribute values.  NOTE: In the current spec, the\r\n// value of `allowedChar` doesn't actually seem to end up mattering, but there is still some debate about\r\n// the right approach to ampersands.\r\ngetCharacterReference = HTMLTools.Parse.getCharacterReference = function (scanner, inAttribute, allowedChar) {\r\n  if (scanner.peek() !== '&')\r\n    // no ampersand\r\n    return null;\r\n\r\n  var afterAmp = scanner.rest().charAt(1);\r\n\r\n  if (afterAmp === '#') {\r\n    scanner.pos += 2;\r\n    // refNumber includes possible initial `x` and final semicolon\r\n    var refNumber = getCharRefNumber(scanner);\r\n    // At this point we've consumed the input, so we're committed to returning\r\n    // something or failing fatally.\r\n    if (! refNumber)\r\n      scanner.fatal(\"Invalid numerical character reference starting with &#\");\r\n    var codepoint;\r\n    if (refNumber.charAt(0) === 'x' || refNumber.charAt(0) === 'X') {\r\n      // hex\r\n      var hex = refNumber.slice(1, -1);\r\n      while (hex.charAt(0) === '0')\r\n        hex = hex.slice(1);\r\n      if (hex.length > 6)\r\n        scanner.fatal(\"Numerical character reference too large: 0x\" + hex);\r\n      codepoint = parseInt(hex || \"0\", 16);\r\n    } else {\r\n      var dec = refNumber.slice(0, -1);\r\n      while (dec.charAt(0) === '0')\r\n        dec = dec.slice(1);\r\n      if (dec.length > 7)\r\n        scanner.fatal(\"Numerical character reference too large: \" + dec);\r\n      codepoint = parseInt(dec || \"0\", 10);\r\n    }\r\n    if (! isLegalCodepoint(codepoint))\r\n      scanner.fatal(\"Illegal codepoint in numerical character reference: &#\" + refNumber);\r\n    return { t: 'CharRef',\r\n             v: '&#' + refNumber,\r\n             cp: [codepoint] };\r\n  } else if ((! afterAmp) // EOF\r\n             || (allowedChar && afterAmp === allowedChar)\r\n             || ALLOWED_AFTER_AMP.test(afterAmp)) {\r\n    return null;\r\n  } else {\r\n    var namedEntity = getNamedCharRef(scanner, inAttribute);\r\n    if (namedEntity) {\r\n      return { t: 'CharRef',\r\n               v: namedEntity,\r\n               cp: getCodePoints(namedEntity) };\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n};\r\n","// Token types:\r\n//\r\n// { t: 'Doctype',\r\n//   v: String (entire Doctype declaration from the source),\r\n//   name: String,\r\n//   systemId: String (optional),\r\n//   publicId: String (optional)\r\n// }\r\n//\r\n// { t: 'Comment',\r\n//   v: String (not including \"<!--\" and \"-->\")\r\n// }\r\n//\r\n// { t: 'Chars',\r\n//   v: String (pure text like you might pass to document.createTextNode,\r\n//              no character references)\r\n// }\r\n//\r\n// { t: 'Tag',\r\n//   isEnd: Boolean (optional),\r\n//   isSelfClosing: Boolean (optional),\r\n//   n: String (tag name, in lowercase or camel case),\r\n//   attrs: dictionary of { String: [tokens] }\r\n//          OR [{ String: [tokens] }, TemplateTag tokens...]\r\n//     (only for start tags; required)\r\n// }\r\n//\r\n// { t: 'CharRef',\r\n//   v: String (entire character reference from the source, e.g. \"&amp;\"),\r\n//   cp: [Integer] (array of Unicode code point numbers it expands to)\r\n// }\r\n//\r\n// We keep around both the original form of the character reference and its\r\n// expansion so that subsequent processing steps have the option to\r\n// re-emit it (if they are generating HTML) or interpret it.  Named and\r\n// numerical code points may be more than 16 bits, in which case they\r\n// need to passed through codePointToString to make a JavaScript string.\r\n// Most named entities and all numeric character references are one codepoint\r\n// (e.g. \"&amp;\" is [38]), but a few are two codepoints.\r\n//\r\n// { t: 'TemplateTag',\r\n//   v: HTMLTools.TemplateTag\r\n// }\r\n\r\n// The HTML tokenization spec says to preprocess the input stream to replace\r\n// CR(LF)? with LF.  However, preprocessing `scanner` would complicate things\r\n// by making indexes not match the input (e.g. for error messages), so we just\r\n// keep in mind as we go along that an LF might be represented by CRLF or CR.\r\n// In most cases, it doesn't actually matter what combination of whitespace\r\n// characters are present (e.g. inside tags).\r\nvar HTML_SPACE = /^[\\f\\n\\r\\t ]/;\r\n\r\nvar convertCRLF = function (str) {\r\n  return str.replace(/\\r\\n?/g, '\\n');\r\n};\r\n\r\ngetComment = HTMLTools.Parse.getComment = function (scanner) {\r\n  if (scanner.rest().slice(0, 4) !== '<!--')\r\n    return null;\r\n  scanner.pos += 4;\r\n\r\n  // Valid comments are easy to parse; they end at the first `--`!\r\n  // Our main job is throwing errors.\r\n\r\n  var rest = scanner.rest();\r\n  if (rest.charAt(0) === '>' || rest.slice(0, 2) === '->')\r\n    scanner.fatal(\"HTML comment can't start with > or ->\");\r\n\r\n  var closePos = rest.indexOf('-->');\r\n  if (closePos < 0)\r\n    scanner.fatal(\"Unclosed HTML comment\");\r\n\r\n  var commentContents = rest.slice(0, closePos);\r\n  if (commentContents.slice(-1) === '-')\r\n    scanner.fatal(\"HTML comment must end at first `--`\");\r\n  if (commentContents.indexOf(\"--\") >= 0)\r\n    scanner.fatal(\"HTML comment cannot contain `--` anywhere\");\r\n  if (commentContents.indexOf('\\u0000') >= 0)\r\n    scanner.fatal(\"HTML comment cannot contain NULL\");\r\n\r\n  scanner.pos += closePos + 3;\r\n\r\n  return { t: 'Comment',\r\n           v: convertCRLF(commentContents) };\r\n};\r\n\r\nvar skipSpaces = function (scanner) {\r\n  while (HTML_SPACE.test(scanner.peek()))\r\n    scanner.pos++;\r\n};\r\n\r\nvar requireSpaces = function (scanner) {\r\n  if (! HTML_SPACE.test(scanner.peek()))\r\n    scanner.fatal(\"Expected space\");\r\n  skipSpaces(scanner);\r\n};\r\n\r\nvar getDoctypeQuotedString = function (scanner) {\r\n  var quote = scanner.peek();\r\n  if (! (quote === '\"' || quote === \"'\"))\r\n    scanner.fatal(\"Expected single or double quote in DOCTYPE\");\r\n  scanner.pos++;\r\n\r\n  if (scanner.peek() === quote)\r\n    // prevent a falsy return value (empty string)\r\n    scanner.fatal(\"Malformed DOCTYPE\");\r\n\r\n  var str = '';\r\n  var ch;\r\n  while ((ch = scanner.peek()), ch !== quote) {\r\n    if ((! ch) || (ch === '\\u0000') || (ch === '>'))\r\n      scanner.fatal(\"Malformed DOCTYPE\");\r\n    str += ch;\r\n    scanner.pos++;\r\n  }\r\n\r\n  scanner.pos++;\r\n\r\n  return str;\r\n};\r\n\r\n// See http://www.whatwg.org/specs/web-apps/current-work/multipage/syntax.html#the-doctype.\r\n//\r\n// If `getDocType` sees \"<!DOCTYPE\" (case-insensitive), it will match or fail fatally.\r\ngetDoctype = HTMLTools.Parse.getDoctype = function (scanner) {\r\n  if (HTMLTools.asciiLowerCase(scanner.rest().slice(0, 9)) !== '<!doctype')\r\n    return null;\r\n  var start = scanner.pos;\r\n  scanner.pos += 9;\r\n\r\n  requireSpaces(scanner);\r\n\r\n  var ch = scanner.peek();\r\n  if ((! ch) || (ch === '>') || (ch === '\\u0000'))\r\n    scanner.fatal('Malformed DOCTYPE');\r\n  var name = ch;\r\n  scanner.pos++;\r\n\r\n  while ((ch = scanner.peek()), ! (HTML_SPACE.test(ch) || ch === '>')) {\r\n    if ((! ch) || (ch === '\\u0000'))\r\n      scanner.fatal('Malformed DOCTYPE');\r\n    name += ch;\r\n    scanner.pos++;\r\n  }\r\n  name = HTMLTools.asciiLowerCase(name);\r\n\r\n  // Now we're looking at a space or a `>`.\r\n  skipSpaces(scanner);\r\n\r\n  var systemId = null;\r\n  var publicId = null;\r\n\r\n  if (scanner.peek() !== '>') {\r\n    // Now we're essentially in the \"After DOCTYPE name state\" of the tokenizer,\r\n    // but we're not looking at space or `>`.\r\n\r\n    // this should be \"public\" or \"system\".\r\n    var publicOrSystem = HTMLTools.asciiLowerCase(scanner.rest().slice(0, 6));\r\n\r\n    if (publicOrSystem === 'system') {\r\n      scanner.pos += 6;\r\n      requireSpaces(scanner);\r\n      systemId = getDoctypeQuotedString(scanner);\r\n      skipSpaces(scanner);\r\n      if (scanner.peek() !== '>')\r\n        scanner.fatal(\"Malformed DOCTYPE\");\r\n    } else if (publicOrSystem === 'public') {\r\n      scanner.pos += 6;\r\n      requireSpaces(scanner);\r\n      publicId = getDoctypeQuotedString(scanner);\r\n      if (scanner.peek() !== '>') {\r\n        requireSpaces(scanner);\r\n        if (scanner.peek() !== '>') {\r\n          systemId = getDoctypeQuotedString(scanner);\r\n          skipSpaces(scanner);\r\n          if (scanner.peek() !== '>')\r\n            scanner.fatal(\"Malformed DOCTYPE\");\r\n        }\r\n      }\r\n    } else {\r\n      scanner.fatal(\"Expected PUBLIC or SYSTEM in DOCTYPE\");\r\n    }\r\n  }\r\n\r\n  // looking at `>`\r\n  scanner.pos++;\r\n  var result = { t: 'Doctype',\r\n                 v: scanner.input.slice(start, scanner.pos),\r\n                 name: name };\r\n\r\n  if (systemId)\r\n    result.systemId = systemId;\r\n  if (publicId)\r\n    result.publicId = publicId;\r\n\r\n  return result;\r\n};\r\n\r\n// The special character `{` is only allowed as the first character\r\n// of a Chars, so that we have a chance to detect template tags.\r\nvar getChars = makeRegexMatcher(/^[^&<\\u0000][^&<\\u0000{]*/);\r\n\r\nvar assertIsTemplateTag = function (x) {\r\n  if (! (x instanceof HTMLTools.TemplateTag))\r\n    throw new Error(\"Expected an instance of HTMLTools.TemplateTag\");\r\n  return x;\r\n};\r\n\r\n// Returns the next HTML token, or `null` if we reach EOF.\r\n//\r\n// Note that if we have a `getTemplateTag` function that sometimes\r\n// consumes characters and emits nothing (e.g. in the case of template\r\n// comments), we may go from not-at-EOF to at-EOF and return `null`,\r\n// while otherwise we always find some token to return.\r\ngetHTMLToken = HTMLTools.Parse.getHTMLToken = function (scanner, dataMode) {\r\n  var result = null;\r\n  if (scanner.getTemplateTag) {\r\n    // Try to parse a template tag by calling out to the provided\r\n    // `getTemplateTag` function.  If the function returns `null` but\r\n    // consumes characters, it must have parsed a comment or something,\r\n    // so we loop and try it again.  If it ever returns `null` without\r\n    // consuming anything, that means it didn't see anything interesting\r\n    // so we look for a normal token.  If it returns a truthy value,\r\n    // the value must be instanceof HTMLTools.TemplateTag.  We wrap it\r\n    // in a Special token.\r\n    var lastPos = scanner.pos;\r\n    result = scanner.getTemplateTag(\r\n      scanner,\r\n      (dataMode === 'rcdata' ? TEMPLATE_TAG_POSITION.IN_RCDATA :\r\n       (dataMode === 'rawtext' ? TEMPLATE_TAG_POSITION.IN_RAWTEXT :\r\n        TEMPLATE_TAG_POSITION.ELEMENT)));\r\n\r\n    if (result)\r\n      return { t: 'TemplateTag', v: assertIsTemplateTag(result) };\r\n    else if (scanner.pos > lastPos)\r\n      return null;\r\n  }\r\n\r\n  var chars = getChars(scanner);\r\n  if (chars)\r\n    return { t: 'Chars',\r\n             v: convertCRLF(chars) };\r\n\r\n  var ch = scanner.peek();\r\n  if (! ch)\r\n    return null; // EOF\r\n\r\n  if (ch === '\\u0000')\r\n    scanner.fatal(\"Illegal NULL character\");\r\n\r\n  if (ch === '&') {\r\n    if (dataMode !== 'rawtext') {\r\n      var charRef = getCharacterReference(scanner);\r\n      if (charRef)\r\n        return charRef;\r\n    }\r\n\r\n    scanner.pos++;\r\n    return { t: 'Chars',\r\n             v: '&' };\r\n  }\r\n\r\n  // If we're here, we're looking at `<`.\r\n\r\n  if (scanner.peek() === '<' && dataMode) {\r\n    // don't interpret tags\r\n    scanner.pos++;\r\n    return { t: 'Chars',\r\n             v: '<' };\r\n  }\r\n\r\n  // `getTag` will claim anything starting with `<` not followed by `!`.\r\n  // `getComment` takes `<!--` and getDoctype takes `<!doctype`.\r\n  result = (getTagToken(scanner) || getComment(scanner) || getDoctype(scanner));\r\n\r\n  if (result)\r\n    return result;\r\n\r\n  scanner.fatal(\"Unexpected `<!` directive.\");\r\n};\r\n\r\nvar getTagName = makeRegexMatcher(/^[a-zA-Z][^\\f\\n\\r\\t />{]*/);\r\nvar getClangle = makeRegexMatcher(/^>/);\r\nvar getSlash = makeRegexMatcher(/^\\//);\r\nvar getAttributeName = makeRegexMatcher(/^[^>/\\u0000\"'<=\\f\\n\\r\\t ][^\\f\\n\\r\\t /=>\"'<\\u0000]*/);\r\n\r\n// Try to parse `>` or `/>`, mutating `tag` to be self-closing in the latter\r\n// case (and failing fatally if `/` isn't followed by `>`).\r\n// Return tag if successful.\r\nvar handleEndOfTag = function (scanner, tag) {\r\n  if (getClangle(scanner))\r\n    return tag;\r\n\r\n  if (getSlash(scanner)) {\r\n    if (! getClangle(scanner))\r\n      scanner.fatal(\"Expected `>` after `/`\");\r\n    tag.isSelfClosing = true;\r\n    return tag;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n// Scan a quoted or unquoted attribute value (omit `quote` for unquoted).\r\nvar getAttributeValue = function (scanner, quote) {\r\n  if (quote) {\r\n    if (scanner.peek() !== quote)\r\n      return null;\r\n    scanner.pos++;\r\n  }\r\n\r\n  var tokens = [];\r\n  var charsTokenToExtend = null;\r\n\r\n  var charRef;\r\n  while (true) {\r\n    var ch = scanner.peek();\r\n    var templateTag;\r\n    var curPos = scanner.pos;\r\n    if (quote && ch === quote) {\r\n      scanner.pos++;\r\n      return tokens;\r\n    } else if ((! quote) && (HTML_SPACE.test(ch) || ch === '>')) {\r\n      return tokens;\r\n    } else if (! ch) {\r\n      scanner.fatal(\"Unclosed attribute in tag\");\r\n    } else if (quote ? ch === '\\u0000' : ('\\u0000\"\\'<=`'.indexOf(ch) >= 0)) {\r\n      scanner.fatal(\"Unexpected character in attribute value\");\r\n    } else if (ch === '&' &&\r\n               (charRef = getCharacterReference(scanner, true,\r\n                                                quote || '>'))) {\r\n      tokens.push(charRef);\r\n      charsTokenToExtend = null;\r\n    } else if (scanner.getTemplateTag &&\r\n               ((templateTag = scanner.getTemplateTag(\r\n                 scanner, TEMPLATE_TAG_POSITION.IN_ATTRIBUTE)) ||\r\n                scanner.pos > curPos /* `{{! comment}}` */)) {\r\n      if (templateTag) {\r\n        tokens.push({t: 'TemplateTag',\r\n                     v: assertIsTemplateTag(templateTag)});\r\n        charsTokenToExtend = null;\r\n      }\r\n    } else {\r\n      if (! charsTokenToExtend) {\r\n        charsTokenToExtend = { t: 'Chars', v: '' };\r\n        tokens.push(charsTokenToExtend);\r\n      }\r\n      charsTokenToExtend.v += (ch === '\\r' ? '\\n' : ch);\r\n      scanner.pos++;\r\n      if (quote && ch === '\\r' && scanner.peek() === '\\n')\r\n        scanner.pos++;\r\n    }\r\n  }\r\n};\r\n\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\ngetTagToken = HTMLTools.Parse.getTagToken = function (scanner) {\r\n  if (! (scanner.peek() === '<' && scanner.rest().charAt(1) !== '!'))\r\n    return null;\r\n  scanner.pos++;\r\n\r\n  var tag = { t: 'Tag' };\r\n\r\n  // now looking at the character after `<`, which is not a `!`\r\n  if (scanner.peek() === '/') {\r\n    tag.isEnd = true;\r\n    scanner.pos++;\r\n  }\r\n\r\n  var tagName = getTagName(scanner);\r\n  if (! tagName)\r\n    scanner.fatal(\"Expected tag name after `<`\");\r\n  tag.n = HTMLTools.properCaseTagName(tagName);\r\n\r\n  if (scanner.peek() === '/' && tag.isEnd)\r\n    scanner.fatal(\"End tag can't have trailing slash\");\r\n  if (handleEndOfTag(scanner, tag))\r\n    return tag;\r\n\r\n  if (scanner.isEOF())\r\n    scanner.fatal(\"Unclosed `<`\");\r\n\r\n  if (! HTML_SPACE.test(scanner.peek()))\r\n    // e.g. `<a{{b}}>`\r\n    scanner.fatal(\"Expected space after tag name\");\r\n\r\n  // we're now in \"Before attribute name state\" of the tokenizer\r\n  skipSpaces(scanner);\r\n\r\n  if (scanner.peek() === '/' && tag.isEnd)\r\n    scanner.fatal(\"End tag can't have trailing slash\");\r\n  if (handleEndOfTag(scanner, tag))\r\n    return tag;\r\n\r\n  if (tag.isEnd)\r\n    scanner.fatal(\"End tag can't have attributes\");\r\n\r\n  tag.attrs = {};\r\n  var nondynamicAttrs = tag.attrs;\r\n\r\n  while (true) {\r\n    // Note: at the top of this loop, we've already skipped any spaces.\r\n\r\n    // This will be set to true if after parsing the attribute, we should\r\n    // require spaces (or else an end of tag, i.e. `>` or `/>`).\r\n    var spacesRequiredAfter = false;\r\n\r\n    // first, try for a template tag.\r\n    var curPos = scanner.pos;\r\n    var templateTag = (scanner.getTemplateTag &&\r\n                       scanner.getTemplateTag(\r\n                         scanner, TEMPLATE_TAG_POSITION.IN_START_TAG));\r\n    if (templateTag || (scanner.pos > curPos)) {\r\n      if (templateTag) {\r\n        if (tag.attrs === nondynamicAttrs)\r\n          tag.attrs = [nondynamicAttrs];\r\n        tag.attrs.push({ t: 'TemplateTag',\r\n                         v: assertIsTemplateTag(templateTag) });\r\n      } // else, must have scanned a `{{! comment}}`\r\n\r\n      spacesRequiredAfter = true;\r\n    } else {\r\n\r\n      var attributeName = getAttributeName(scanner);\r\n      if (! attributeName)\r\n        scanner.fatal(\"Expected attribute name in tag\");\r\n      // Throw error on `{` in attribute name.  This provides *some* error message\r\n      // if someone writes `<a x{{y}}>` or `<a x{{y}}=z>`.  The HTML tokenization\r\n      // spec doesn't say that `{` is invalid, but the DOM API (setAttribute) won't\r\n      // allow it, so who cares.\r\n      if (attributeName.indexOf('{') >= 0)\r\n        scanner.fatal(\"Unexpected `{` in attribute name.\");\r\n      attributeName = HTMLTools.properCaseAttributeName(attributeName);\r\n\r\n      if (hasOwnProperty.call(nondynamicAttrs, attributeName))\r\n        scanner.fatal(\"Duplicate attribute in tag: \" + attributeName);\r\n\r\n      nondynamicAttrs[attributeName] = [];\r\n\r\n      skipSpaces(scanner);\r\n\r\n      if (handleEndOfTag(scanner, tag))\r\n        return tag;\r\n\r\n      var ch = scanner.peek();\r\n      if (! ch)\r\n        scanner.fatal(\"Unclosed <\");\r\n      if ('\\u0000\"\\'<'.indexOf(ch) >= 0)\r\n        scanner.fatal(\"Unexpected character after attribute name in tag\");\r\n\r\n      if (ch === '=') {\r\n        scanner.pos++;\r\n\r\n        skipSpaces(scanner);\r\n\r\n        ch = scanner.peek();\r\n        if (! ch)\r\n          scanner.fatal(\"Unclosed <\");\r\n        if ('\\u0000><=`'.indexOf(ch) >= 0)\r\n          scanner.fatal(\"Unexpected character after = in tag\");\r\n\r\n        if ((ch === '\"') || (ch === \"'\"))\r\n          nondynamicAttrs[attributeName] = getAttributeValue(scanner, ch);\r\n        else\r\n          nondynamicAttrs[attributeName] = getAttributeValue(scanner);\r\n\r\n        spacesRequiredAfter = true;\r\n      }\r\n    }\r\n    // now we are in the \"post-attribute\" position, whether it was a template tag\r\n    // attribute (like `{{x}}`) or a normal one (like `x` or `x=y`).\r\n\r\n    if (handleEndOfTag(scanner, tag))\r\n      return tag;\r\n\r\n    if (scanner.isEOF())\r\n      scanner.fatal(\"Unclosed `<`\");\r\n\r\n    if (spacesRequiredAfter)\r\n      requireSpaces(scanner);\r\n    else\r\n      skipSpaces(scanner);\r\n\r\n    if (handleEndOfTag(scanner, tag))\r\n      return tag;\r\n  }\r\n};\r\n\r\nTEMPLATE_TAG_POSITION = HTMLTools.TEMPLATE_TAG_POSITION = {\r\n  ELEMENT: 1,\r\n  IN_START_TAG: 2,\r\n  IN_ATTRIBUTE: 3,\r\n  IN_RCDATA: 4,\r\n  IN_RAWTEXT: 5\r\n};\r\n\r\n// tagName must be proper case\r\nisLookingAtEndTag = function (scanner, tagName) {\r\n  var rest = scanner.rest();\r\n  var pos = 0; // into rest\r\n  var firstPart = /^<\\/([a-zA-Z]+)/.exec(rest);\r\n  if (firstPart &&\r\n      HTMLTools.properCaseTagName(firstPart[1]) === tagName) {\r\n    // we've seen `</foo`, now see if the end tag continues\r\n    pos += firstPart[0].length;\r\n    while (pos < rest.length && HTML_SPACE.test(rest.charAt(pos)))\r\n      pos++;\r\n    if (pos < rest.length && rest.charAt(pos) === '>')\r\n      return true;\r\n  }\r\n  return false;\r\n};\r\n","// _assign is like _.extend or the upcoming Object.assign.\r\n// Copy src's own, enumerable properties onto tgt and return\r\n// tgt.\r\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar _assign = function (tgt, src) {\r\n  for (var k in src) {\r\n    if (_hasOwnProperty.call(src, k))\r\n      tgt[k] = src[k];\r\n  }\r\n  return tgt;\r\n};\r\n\r\n\r\nHTMLTools.TemplateTag = function (props) {\r\n  if (! (this instanceof HTMLTools.TemplateTag))\r\n    // called without `new`\r\n    return new HTMLTools.TemplateTag;\r\n\r\n  if (props)\r\n    _assign(this, props);\r\n};\r\n\r\n_assign(HTMLTools.TemplateTag.prototype, {\r\n  constructorName: 'HTMLTools.TemplateTag',\r\n  toJS: function (visitor) {\r\n    return visitor.generateCall(this.constructorName,\r\n                                _assign({}, this));\r\n  }\r\n});\r\n","\r\n// Parse a \"fragment\" of HTML, up to the end of the input or a particular\r\n// template tag (using the \"shouldStop\" option).\r\nHTMLTools.parseFragment = function (input, options) {\r\n  var scanner;\r\n  if (typeof input === 'string')\r\n    scanner = new Scanner(input);\r\n  else\r\n    // input can be a scanner.  We'd better not have a different\r\n    // value for the \"getTemplateTag\" option as when the scanner\r\n    // was created, because we don't do anything special to reset\r\n    // the value (which is attached to the scanner).\r\n    scanner = input;\r\n\r\n  // ```\r\n  // { getTemplateTag: function (scanner, templateTagPosition) {\r\n  //     if (templateTagPosition === HTMLTools.TEMPLATE_TAG_POSITION.ELEMENT) {\r\n  //       ...\r\n  // ```\r\n  if (options && options.getTemplateTag)\r\n    scanner.getTemplateTag = options.getTemplateTag;\r\n\r\n  // function (scanner) -> boolean\r\n  var shouldStop = options && options.shouldStop;\r\n\r\n  var result;\r\n  if (options && options.textMode) {\r\n    if (options.textMode === HTML.TEXTMODE.STRING) {\r\n      result = getRawText(scanner, null, shouldStop);\r\n    } else if (options.textMode === HTML.TEXTMODE.RCDATA) {\r\n      result = getRCData(scanner, null, shouldStop);\r\n    } else {\r\n      throw new Error(\"Unsupported textMode: \" + options.textMode);\r\n    }\r\n  } else {\r\n    result = getContent(scanner, shouldStop);\r\n  }\r\n  if (! scanner.isEOF()) {\r\n    // If we aren't at the end of the input, we either stopped at an unmatched\r\n    // HTML end tag or at a template tag (like `{{else}}` or `{{/if}}`).\r\n    // Detect the former case (stopped at an HTML end tag) and throw a good\r\n    // error.\r\n\r\n    var posBefore = scanner.pos;\r\n\r\n    try {\r\n      var endTag = getHTMLToken(scanner);\r\n    } catch (e) {\r\n      // ignore errors from getTemplateTag\r\n    }\r\n\r\n    // XXX we make some assumptions about shouldStop here, like that it\r\n    // won't tell us to stop at an HTML end tag.  Should refactor\r\n    // `shouldStop` into something more suitable.\r\n    if (endTag && endTag.t === 'Tag' && endTag.isEnd) {\r\n      var closeTag = endTag.n;\r\n      var isVoidElement = HTML.isVoidElement(closeTag);\r\n      scanner.fatal(\"Unexpected HTML close tag\" +\r\n                    (isVoidElement ?\r\n                     '.  <' + endTag.n + '> should have no close tag.' : ''));\r\n    }\r\n\r\n    scanner.pos = posBefore; // rewind, we'll continue parsing as usual\r\n\r\n    // If no \"shouldStop\" option was provided, we should have consumed the whole\r\n    // input.\r\n    if (! shouldStop)\r\n      scanner.fatal(\"Expected EOF\");\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n// Take a numeric Unicode code point, which may be larger than 16 bits,\r\n// and encode it as a JavaScript UTF-16 string.\r\n//\r\n// Adapted from\r\n// http://stackoverflow.com/questions/7126384/expressing-utf-16-unicode-characters-in-javascript/7126661.\r\ncodePointToString = HTMLTools.codePointToString = function(cp) {\r\n  if (cp >= 0 && cp <= 0xD7FF || cp >= 0xE000 && cp <= 0xFFFF) {\r\n    return String.fromCharCode(cp);\r\n  } else if (cp >= 0x10000 && cp <= 0x10FFFF) {\r\n\r\n    // we substract 0x10000 from cp to get a 20-bit number\r\n    // in the range 0..0xFFFF\r\n    cp -= 0x10000;\r\n\r\n    // we add 0xD800 to the number formed by the first 10 bits\r\n    // to give the first byte\r\n    var first = ((0xffc00 & cp) >> 10) + 0xD800;\r\n\r\n    // we add 0xDC00 to the number formed by the low 10 bits\r\n    // to give the second byte\r\n    var second = (0x3ff & cp) + 0xDC00;\r\n\r\n    return String.fromCharCode(first) + String.fromCharCode(second);\r\n  } else {\r\n    return '';\r\n  }\r\n};\r\n\r\ngetContent = HTMLTools.Parse.getContent = function (scanner, shouldStopFunc) {\r\n  var items = [];\r\n\r\n  while (! scanner.isEOF()) {\r\n    if (shouldStopFunc && shouldStopFunc(scanner))\r\n      break;\r\n\r\n    var posBefore = scanner.pos;\r\n    var token = getHTMLToken(scanner);\r\n    if (! token)\r\n      // tokenizer reached EOF on its own, e.g. while scanning\r\n      // template comments like `{{! foo}}`.\r\n      continue;\r\n\r\n    if (token.t === 'Doctype') {\r\n      scanner.fatal(\"Unexpected Doctype\");\r\n    } else if (token.t === 'Chars') {\r\n      pushOrAppendString(items, token.v);\r\n    } else if (token.t === 'CharRef') {\r\n      items.push(convertCharRef(token));\r\n    } else if (token.t === 'Comment') {\r\n      items.push(HTML.Comment(token.v));\r\n    } else if (token.t === 'TemplateTag') {\r\n      items.push(token.v);\r\n    } else if (token.t === 'Tag') {\r\n      if (token.isEnd) {\r\n        // Stop when we encounter an end tag at the top level.\r\n        // Rewind; we'll re-parse the end tag later.\r\n        scanner.pos = posBefore;\r\n        break;\r\n      }\r\n\r\n      var tagName = token.n;\r\n      // is this an element with no close tag (a BR, HR, IMG, etc.) based\r\n      // on its name?\r\n      var isVoid = HTML.isVoidElement(tagName);\r\n      if (token.isSelfClosing) {\r\n        if (! (isVoid || HTML.isKnownSVGElement(tagName) || tagName.indexOf(':') >= 0))\r\n          scanner.fatal('Only certain elements like BR, HR, IMG, etc. (and foreign elements like SVG) are allowed to self-close');\r\n      }\r\n\r\n      // result of parseAttrs may be null\r\n      var attrs = parseAttrs(token.attrs);\r\n      // arrays need to be wrapped in HTML.Attrs(...)\r\n      // when used to construct tags\r\n      if (HTML.isArray(attrs))\r\n        attrs = HTML.Attrs.apply(null, attrs);\r\n\r\n      var tagFunc = HTML.getTag(tagName);\r\n      if (isVoid || token.isSelfClosing) {\r\n        items.push(attrs ? tagFunc(attrs) : tagFunc());\r\n      } else {\r\n        // parse HTML tag contents.\r\n\r\n        // HTML treats a final `/` in a tag as part of an attribute, as in `<a href=/foo/>`, but the template author who writes `<circle r={{r}}/>`, say, may not be thinking about that, so generate a good error message in the \"looks like self-close\" case.\r\n        var looksLikeSelfClose = (scanner.input.substr(scanner.pos - 2, 2) === '/>');\r\n\r\n        var content = null;\r\n        if (token.n === 'textarea') {\r\n          if (scanner.peek() === '\\n')\r\n            scanner.pos++;\r\n          var textareaValue = getRCData(scanner, token.n, shouldStopFunc);\r\n          if (textareaValue) {\r\n            if (attrs instanceof HTML.Attrs) {\r\n              attrs = HTML.Attrs.apply(\r\n                null, attrs.value.concat([{value: textareaValue}]));\r\n            } else {\r\n              attrs = (attrs || {});\r\n              attrs.value = textareaValue;\r\n            }\r\n          }\r\n        } else {\r\n          content = getContent(scanner, shouldStopFunc);\r\n        }\r\n\r\n        var endTag = getHTMLToken(scanner);\r\n\r\n        if (! (endTag && endTag.t === 'Tag' && endTag.isEnd && endTag.n === tagName))\r\n          scanner.fatal('Expected \"' + tagName + '\" end tag' + (looksLikeSelfClose ? ' -- if the \"<' + token.n + ' />\" tag was supposed to self-close, try adding a space before the \"/\"' : ''));\r\n\r\n        // XXX support implied end tags in cases allowed by the spec\r\n\r\n        // make `content` into an array suitable for applying tag constructor\r\n        // as in `FOO.apply(null, content)`.\r\n        if (content == null)\r\n          content = [];\r\n        else if (! (content instanceof Array))\r\n          content = [content];\r\n\r\n        items.push(HTML.getTag(tagName).apply(\r\n          null, (attrs ? [attrs] : []).concat(content)));\r\n      }\r\n    } else {\r\n      scanner.fatal(\"Unknown token type: \" + token.t);\r\n    }\r\n  }\r\n\r\n  if (items.length === 0)\r\n    return null;\r\n  else if (items.length === 1)\r\n    return items[0];\r\n  else\r\n    return items;\r\n};\r\n\r\nvar pushOrAppendString = function (items, string) {\r\n  if (items.length &&\r\n      typeof items[items.length - 1] === 'string')\r\n    items[items.length - 1] += string;\r\n  else\r\n    items.push(string);\r\n};\r\n\r\n// get RCDATA to go in the lowercase (or camel case) tagName (e.g. \"textarea\")\r\ngetRCData = HTMLTools.Parse.getRCData = function (scanner, tagName, shouldStopFunc) {\r\n  var items = [];\r\n\r\n  while (! scanner.isEOF()) {\r\n    // break at appropriate end tag\r\n    if (tagName && isLookingAtEndTag(scanner, tagName))\r\n      break;\r\n\r\n    if (shouldStopFunc && shouldStopFunc(scanner))\r\n      break;\r\n\r\n    var token = getHTMLToken(scanner, 'rcdata');\r\n    if (! token)\r\n      // tokenizer reached EOF on its own, e.g. while scanning\r\n      // template comments like `{{! foo}}`.\r\n      continue;\r\n\r\n    if (token.t === 'Chars') {\r\n      pushOrAppendString(items, token.v);\r\n    } else if (token.t === 'CharRef') {\r\n      items.push(convertCharRef(token));\r\n    } else if (token.t === 'TemplateTag') {\r\n      items.push(token.v);\r\n    } else {\r\n      // (can't happen)\r\n      scanner.fatal(\"Unknown or unexpected token type: \" + token.t);\r\n    }\r\n  }\r\n\r\n  if (items.length === 0)\r\n    return null;\r\n  else if (items.length === 1)\r\n    return items[0];\r\n  else\r\n    return items;\r\n};\r\n\r\nvar getRawText = function (scanner, tagName, shouldStopFunc) {\r\n  var items = [];\r\n\r\n  while (! scanner.isEOF()) {\r\n    // break at appropriate end tag\r\n    if (tagName && isLookingAtEndTag(scanner, tagName))\r\n      break;\r\n\r\n    if (shouldStopFunc && shouldStopFunc(scanner))\r\n      break;\r\n\r\n    var token = getHTMLToken(scanner, 'rawtext');\r\n    if (! token)\r\n      // tokenizer reached EOF on its own, e.g. while scanning\r\n      // template comments like `{{! foo}}`.\r\n      continue;\r\n\r\n    if (token.t === 'Chars') {\r\n      pushOrAppendString(items, token.v);\r\n    } else if (token.t === 'TemplateTag') {\r\n      items.push(token.v);\r\n    } else {\r\n      // (can't happen)\r\n      scanner.fatal(\"Unknown or unexpected token type: \" + token.t);\r\n    }\r\n  }\r\n\r\n  if (items.length === 0)\r\n    return null;\r\n  else if (items.length === 1)\r\n    return items[0];\r\n  else\r\n    return items;\r\n};\r\n\r\n// Input: A token like `{ t: 'CharRef', v: '&amp;', cp: [38] }`.\r\n//\r\n// Output: A tag like `HTML.CharRef({ html: '&amp;', str: '&' })`.\r\nvar convertCharRef = function (token) {\r\n  var codePoints = token.cp;\r\n  var str = '';\r\n  for (var i = 0; i < codePoints.length; i++)\r\n    str += codePointToString(codePoints[i]);\r\n  return HTML.CharRef({ html: token.v, str: str });\r\n};\r\n\r\n// Input is always a dictionary (even if zero attributes) and each\r\n// value in the dictionary is an array of `Chars`, `CharRef`,\r\n// and maybe `TemplateTag` tokens.\r\n//\r\n// Output is null if there are zero attributes, and otherwise a\r\n// dictionary, or an array of dictionaries and template tags.\r\n// Each value in the dictionary is HTMLjs (e.g. a\r\n// string or an array of `Chars`, `CharRef`, and `TemplateTag`\r\n// nodes).\r\n//\r\n// An attribute value with no input tokens is represented as \"\",\r\n// not an empty array, in order to prop open empty attributes\r\n// with no template tags.\r\nvar parseAttrs = function (attrs) {\r\n  var result = null;\r\n\r\n  if (HTML.isArray(attrs)) {\r\n    // first element is nondynamic attrs, rest are template tags\r\n    var nondynamicAttrs = parseAttrs(attrs[0]);\r\n    if (nondynamicAttrs) {\r\n      result = (result || []);\r\n      result.push(nondynamicAttrs);\r\n    }\r\n    for (var i = 1; i < attrs.length; i++) {\r\n      var token = attrs[i];\r\n      if (token.t !== 'TemplateTag')\r\n        throw new Error(\"Expected TemplateTag token\");\r\n      result = (result || []);\r\n      result.push(token.v);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  for (var k in attrs) {\r\n    if (! result)\r\n      result = {};\r\n\r\n    var inValue = attrs[k];\r\n    var outParts = [];\r\n    for (var i = 0; i < inValue.length; i++) {\r\n      var token = inValue[i];\r\n      if (token.t === 'CharRef') {\r\n        outParts.push(convertCharRef(token));\r\n      } else if (token.t === 'TemplateTag') {\r\n        outParts.push(token.v);\r\n      } else if (token.t === 'Chars') {\r\n        pushOrAppendString(outParts, token.v);\r\n      }\r\n    }\r\n\r\n    var outValue = (inValue.length === 0 ? '' :\r\n                    (outParts.length === 1 ? outParts[0] : outParts));\r\n    var properKey = HTMLTools.properCaseAttributeName(k);\r\n    result[properKey] = outValue;\r\n  }\r\n\r\n  return result;\r\n};\r\n"]}